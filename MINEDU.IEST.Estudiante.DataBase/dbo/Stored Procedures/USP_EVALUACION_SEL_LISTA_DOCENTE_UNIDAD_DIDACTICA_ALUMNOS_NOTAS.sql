/**********************************************************************************************************
AUTOR				:	Jose Alvaro Del Castillo Aquino
FECHA DE CREACION	:	09/09/2020
LLAMADO POR			:
DESCRIPCION			:	Consulta de alumnos y notas
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
--1.0			09/09/2020		JDELCASTILLO	Creación
--1.1			25/01/2021		JCHAVEZ			Se agregó valor a @ID_CARRERA Y @ID_UNIDAD_DIDACTICA
TEST:			
	[dbo].[USP_EVALUACION_SEL_LISTA_DOCENTE_UNIDAD_DIDACTICA_ALUMNOS_NOTAS] 1145,607,1430,15207,1171,1499,454,105,46494
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_EVALUACION_SEL_LISTA_DOCENTE_UNIDAD_DIDACTICA_ALUMNOS_NOTAS]
( 
	@ID_INSTITUCION							INT=1145, 
	@ID_PERIODOS_LECTIVOS_POR_INSTITUCION	INT=607, 
	@ID_SEDE_INSTITUCION					INT=1430, 	 
	@ID_PERSONAL_INSTITUCION                INT=15207,
	@ID_CARRERA								INT=1171, 	
	@ID_PERIODO_ACADEMICO					INT=1499,
	@ID_TURNOS_POR_INSTITUCION				INT=454, 
	@ID_SECCION								INT=105, 		
	@ID_PROGRAMACION_CLASE					INT =46494
)
AS
--DECLARE @ID_INSTITUCION							INT=599
--DECLARE @ID_PERIODOS_LECTIVOS_POR_INSTITUCION	INT=157
--DECLARE @ID_SEDE_INSTITUCION					INT=197
--DECLARE @ID_PERSONAL_INSTITUCION                INT=6373
--DECLARE @ID_CARRERA								INT=1311
--DECLARE @ID_PERIODO_ACADEMICO					INT=154
--DECLARE @ID_TURNOS_POR_INSTITUCION				INT=203
--DECLARE @ID_SECCION								INT=106	
--DECLARE @ID_PROGRAMACION_CLASE					INT =17638
BEGIN  
	SET NOCOUNT ON;
	SELECT
	    --ROW_NUMBER() OVER(ORDER BY UPPER(P.APELLIDO_PATERNO_PERSONA) + ' '+ UPPER(P.APELLIDO_MATERNO_PERSONA)+ ', ' + dbo.UFN_CAPITALIZAR( P.NOMBRE_PERSONA)ASC) AS Row, 
		ROW_NUMBER() OVER(ORDER BY UPPER(P.APELLIDO_PATERNO_PERSONA) + ' '+ UPPER(P.APELLIDO_MATERNO_PERSONA)+ ', ' + P.NOMBRE_PERSONA ASC) AS Row, 
		Total = count(1) OVER (),	
		ME.ID_MATRICULA_ESTUDIANTE		IdMatriculaEstudiante,
		P.NUMERO_DOCUMENTO_PERSONA		IdEstudiante,
		--UPPER(P.APELLIDO_PATERNO_PERSONA) + ' '+ UPPER(P.APELLIDO_MATERNO_PERSONA)+ ', ' + dbo.UFN_CAPITALIZAR( P.NOMBRE_PERSONA) AS NombreAlumno,
		UPPER(P.APELLIDO_PATERNO_PERSONA) + ' '+ UPPER(P.APELLIDO_MATERNO_PERSONA)+ ', ' + P.NOMBRE_PERSONA AS NombreAlumno,
		convert(varchar(2), CAST(E_D.NOTA AS INT))	AS Nota,
		CASE 
			    WHEN LICENCIAS_PENDIENTES.ID_TIPO_LICENCIA is NOT NULL AND LICENCIAS_PENDIENTES.ID_REINGRESO_ESTUDIANTE IS NULL THEN 
				    cast(0 as BIT)
		        ELSE cast( 1 as BIT)	
		END	 EsEvaluacionPermitida,
		PC.ID_PROGRAMACION_CLASE AS IdProgramacionClase
	FROM 
		transaccional.matricula_estudiante ME 
		INNER JOIN transaccional.programacion_clase_por_matricula_estudiante PCXME ON ME.ID_MATRICULA_ESTUDIANTE= PCXME.ID_MATRICULA_ESTUDIANTE AND PCXME.ES_ACTIVO=1 AND ME.ES_ACTIVO=1
		INNER JOIN transaccional.programacion_clase PC WITH (NOLOCK) ON PC.ID_PROGRAMACION_CLASE= PCXME.ID_PROGRAMACION_CLASE AND PC.ES_ACTIVO=1
		INNER JOIN transaccional.unidades_didacticas_por_programacion_clase UDXPC WITH (NOLOCK) ON UDXPC.ID_PROGRAMACION_CLASE= PC.ID_PROGRAMACION_CLASE AND UDXPC.ES_ACTIVO=1
		INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE WITH (NOLOCK) ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE= UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO=1
		INNER JOIN transaccional.unidad_didactica UD WITH (NOLOCK) ON UD.ID_UNIDAD_DIDACTICA= UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
		INNER JOIN transaccional.modulo M WITH (NOLOCK) ON UD.ID_MODULO=M.ID_MODULO
		INNER JOIN transaccional.plan_estudio PE ON M.ID_PLAN_ESTUDIO=PE.ID_PLAN_ESTUDIO
		INNER JOIN transaccional.carreras_por_institucion CXI WITH (NOLOCK) ON CXI.ID_CARRERAS_POR_INSTITUCION= PE.ID_CARRERAS_POR_INSTITUCION AND CXI.ES_ACTIVO=1
		INNER JOIN transaccional.estudiante_institucion EI WITH (NOLOCK) ON EI.ID_ESTUDIANTE_INSTITUCION= ME.ID_ESTUDIANTE_INSTITUCION AND EI.ES_ACTIVO=1
		INNER JOIN maestro.persona_institucion PEI WITH (NOLOCK) ON PEI.ID_PERSONA_INSTITUCION= EI.ID_PERSONA_INSTITUCION 
		INNER JOIN maestro.persona P WITH (NOLOCK) ON P.ID_PERSONA=PEI.ID_PERSONA
		INNER JOIN maestro.personal_institucion PINS WITH (NOLOCK) ON PINS.ID_PERSONAL_INSTITUCION= PC.ID_PERSONAL_INSTITUCION AND PINS.ES_ACTIVO=1
		LEFT JOIN transaccional.evaluacion E WITH (NOLOCK) ON E.ID_PROGRAMACION_CLASE= PC.ID_PROGRAMACION_CLASE AND E.ID_CARRERA=CXI.ID_CARRERA AND E.ID_UNIDAD_DIDACTICA=UD.ID_UNIDAD_DIDACTICA AND E.ES_ACTIVO=1
		LEFT JOIN transaccional.evaluacion_detalle E_D WITH (NOLOCK) ON E_D.ID_EVALUACION= E.ID_EVALUACION AND E_D.ES_ACTIVO=1
		AND E_D.ID_MATRICULA_ESTUDIANTE= ME.ID_MATRICULA_ESTUDIANTE
		LEFT JOIN (SELECT SUBCONSULTA.ID_ESTUDIANTE_INSTITUCION, MAX (SUBCONSULTA.ID_PERIODOS_LECTIVOS_POR_INSTITUCION) ID_ULT_PERIODO_LECTIVO_INSTITUCION FROM 
						(
							SELECT ID_ESTUDIANTE_INSTITUCION, ID_PERIODOS_LECTIVOS_POR_INSTITUCION FROM 
							transaccional.reserva_matricula	WHERE ES_ACTIVO=1
							UNION
							SELECT ID_ESTUDIANTE_INSTITUCION, ID_PERIODOS_LECTIVOS_POR_INSTITUCION FROM 
							transaccional.licencia_estudiante WHERE ES_ACTIVO=1
						) SUBCONSULTA
						GROUP BY SUBCONSULTA.ID_ESTUDIANTE_INSTITUCION) SUBCONSULTA_ULT_PERIODO_RESERVA_LICENCIA ON SUBCONSULTA_ULT_PERIODO_RESERVA_LICENCIA.ID_ESTUDIANTE_INSTITUCION= EI.ID_ESTUDIANTE_INSTITUCION
	   LEFT JOIN (	
						SELECT  tle.ID_LICENCIA_ESTUDIANTE,ID_ESTUDIANTE_INSTITUCION, ID_TIPO_LICENCIA, VALOR_ENUMERADO, tle.ID_PERIODOS_LECTIVOS_POR_INSTITUCION, tre.ID_REINGRESO_ESTUDIANTE
						FROM 
							transaccional.licencia_estudiante tle
							LEFT JOIN transaccional.reingreso_estudiante tre on tle.ID_LICENCIA_ESTUDIANTE = tre.ID_LICENCIA_ESTUDIANTE AND tre.ES_ACTIVO=1							 
							INNER JOIN sistema.enumerado se_tipo_lic on se_tipo_lic.ID_ENUMERADO= tle.ID_TIPO_LICENCIA						
							WHERE tle.ES_ACTIVO =1							
						)
						LICENCIAS_PENDIENTES on LICENCIAS_PENDIENTES.ID_ESTUDIANTE_INSTITUCION = EI.ID_ESTUDIANTE_INSTITUCION 
						AND LICENCIAS_PENDIENTES.ID_PERIODOS_LECTIVOS_POR_INSTITUCION= SUBCONSULTA_ULT_PERIODO_RESERVA_LICENCIA.ID_ULT_PERIODO_LECTIVO_INSTITUCION
	WHERE		
		 ME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION	= @ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND 		
		(PC.ID_SEDE_INSTITUCION					= @ID_SEDE_INSTITUCION OR @ID_SEDE_INSTITUCION=0) AND
		(PINS.ID_PERSONAL_INSTITUCION			= @ID_PERSONAL_INSTITUCION OR @ID_PERSONAL_INSTITUCION = '0') AND 				
		(PC.ID_PERIODO_ACADEMICO				= @ID_PERIODO_ACADEMICO OR @ID_PERIODO_ACADEMICO=0)	AND
		(PC.ID_TURNOS_POR_INSTITUCION			= @ID_TURNOS_POR_INSTITUCION OR @ID_TURNOS_POR_INSTITUCION=0) AND
		(PC.ID_SECCION							= @ID_SECCION OR @ID_SECCION=0) AND		
		(PC.ID_PROGRAMACION_CLASE				= @ID_PROGRAMACION_CLASE OR @ID_PROGRAMACION_CLASE=0) AND
		(CXI.ID_CARRERA							= @ID_CARRERA OR @ID_CARRERA=0)
END
GO


