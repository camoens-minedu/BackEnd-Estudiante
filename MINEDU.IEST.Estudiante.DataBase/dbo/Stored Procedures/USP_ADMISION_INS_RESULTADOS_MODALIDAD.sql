/*
==================
ESTADOS:		 =
==================
DESAPROBADO			177
NO ALCANZÓ VACANTE	176
ALCANZÓ VACANTE		174
==================
MODALIDADES:	 =
==================
EXONERADO		23
ORDINARIO		24
EXTRAORDINARIO	25
*/
--/***************************************************************************************************************************************
--AUTOR				:	Juan Tovar
--FECHA DE CREACION	:	20/06/2019
--LLAMADO POR			:
--DESCRIPCION			:	Actualización de registro de postulante
--REVISIONES			:
-------------------------------------------------------------------------------------------------------------
--VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-------------------------------------------------------------------------------------------------------------
----  TEST:		
--/*
--	1.0			08/01/2020		MALVA          MODIFICACIÓN, SE CONSIDERA EL PARÁMETRO @ES_DISCAPACITADO PARA LA ACTUALIZACIÓN DE TABLA PERSONA. 
--	1.1			10/03/2020		JTOVAR         SE RETIRO EN LA UPDATE DE LA TABLA RESULTADOPOSTULANTE EL ES_ACTIVO=0
--  1.2			04/06/2020		MALVA		   SE CONSIDERA QUE ES_ACTIVO =0 CUANDO NO SE ENVIA NOTA. 
 --*/
--USP_ADMISION_INS_RESULTADOS_MODALIDAD  1567, 441, '11678:83|11685:80|11686:80|11705:80|11768:78|11765:78|11750:75|11752:75|11736:75|11687:75|11717:73|11753:73|11728:73|11738:70|11739:70|11696:68|11760:68|11744:68|11734:65|11743:65|11679:65|11693:65|11707:63|11709:60|11712:60|11716:60|11683:60|11699:60|11703:60|11697:60|11714:60|11721:60|11742:60|11720:60|11726:60|11763:60|11755:60|11690:60|11680:', 'MALVA'
--****************************************************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_ADMISION_INS_RESULTADOS_MODALIDAD]
(	
	@ID_PERIODO_LECTIVO_INSTITUCION			INT, 
	@ID_MODALIDADES_POR_PROCESO_ADMISION	INT,
	@RESULTADOS								NVARCHAR(MAX),
	@USUARIO								VARCHAR(20)
)
AS
BEGIN 
SET NOCOUNT ON;
DECLARE @RESULT INT
SELECT	
	CONVERT(INT,SUBSTRING(SplitData,0,CHARINDEX(':',SplitData))) ID_POSTULANTES_POR_MODALIDAD,	
	CONVERT(INT,ISNULL( nullif(SUBSTRING(SplitData,CHARINDEX(':',SplitData)+1,LEN(SplitData)) ,'' ),-1)) NOTA_RESULTADO
	into #TablaTempPostulantes
	FROM dbo.UFN_SPLIT(UPPER(@RESULTADOS), '|')
	WHERE SplitData <> ''

IF  NOT EXISTS (SELECT top 1 mpa.ID_MODALIDADES_POR_PROCESO_ADMISION FROM transaccional.modalidades_por_proceso_admision mpa 
				INNER JOIN transaccional.proceso_admision_periodo pap on pap.ID_PROCESO_ADMISION_PERIODO = mpa.ID_PROCESO_ADMISION_PERIODO 
				and mpa.ES_ACTIVO=1 and pap.ES_ACTIVO=1
				where pap.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION and mpa.ID_MODALIDADES_POR_PROCESO_ADMISION = @ID_MODALIDADES_POR_PROCESO_ADMISION)
	SET @RESULT= -300
ELSE IF EXISTS (SELECT TOP 1 temp.ID_POSTULANTES_POR_MODALIDAD FROM #TablaTempPostulantes temp
			LEFT JOIN 	
			( SELECT pm.ID_POSTULANTES_POR_MODALIDAD, mpa.ID_MODALIDADES_POR_PROCESO_ADMISION
				from  transaccional.postulantes_por_modalidad pm		
				INNER JOIN transaccional.modalidades_por_proceso_admision mpa on mpa.ID_MODALIDADES_POR_PROCESO_ADMISION = pm.ID_MODALIDADES_POR_PROCESO_ADMISION
				AND pm.ES_ACTIVO=1 and mpa.ES_ACTIVO=1	) SUBCONSULTA_POSTULANTES ON SUBCONSULTA_POSTULANTES.ID_POSTULANTES_POR_MODALIDAD = temp.ID_POSTULANTES_POR_MODALIDAD
				AND SUBCONSULTA_POSTULANTES.ID_MODALIDADES_POR_PROCESO_ADMISION =@ID_MODALIDADES_POR_PROCESO_ADMISION
			where 
			 SUBCONSULTA_POSTULANTES.ID_POSTULANTES_POR_MODALIDAD IS NULL
	 )	
	 	SET @RESULT= -300
ELSE
BEGIN
	DECLARE @NOTA_MINIMA DECIMAL(10,2),@ID_MODALIDAD INT
 
	DECLARE @ID_ESTADO_PREDETERMINADO INT = 213  --Pendiente evaluación
	SET @ID_MODALIDAD = (SELECT ISNULL(ID_MODALIDAD,0) FROM transaccional.modalidades_por_proceso_admision WHERE ID_MODALIDADES_POR_PROCESO_ADMISION = @ID_MODALIDADES_POR_PROCESO_ADMISION)

	BEGIN TRY
	BEGIN TRANSACTION T1
			SET @NOTA_MINIMA = (SELECT TOP 1 NOTA_MINIMA FROM transaccional.modalidades_por_proceso_admision 
								WHERE ID_MODALIDADES_POR_PROCESO_ADMISION = 1 AND ES_ACTIVO = 1)
			MERGE INTO transaccional.resultados_por_postulante AS TARGET
			USING(
				select ID_POSTULANTES_POR_MODALIDAD,NOTA_RESULTADO   from #TablaTempPostulantes
			) AS SOURCE ON	TARGET.ID_POSTULANTES_POR_MODALIDAD = SOURCE.ID_POSTULANTES_POR_MODALIDAD				
			WHEN MATCHED AND SOURCE.NOTA_RESULTADO >=0
			THEN 
				UPDATE
				SET
					NOTA_RESULTADO = SOURCE.NOTA_RESULTADO,
					--ESTADO = CASE WHEN (SOURCE.NOTA_RESULTADO/20) >= @NOTA_MINIMA THEN 90 ELSE 91 END,
					ESTADO = @ID_ESTADO_PREDETERMINADO,
					ES_ACTIVO = 1,
					USUARIO_MODIFICACION = @USUARIO,
					FECHA_MODIFICACION = GETDATE()
			WHEN NOT MATCHED BY TARGET AND SOURCE.NOTA_RESULTADO > =0
			THEN 
				INSERT (ID_POSTULANTES_POR_MODALIDAD,NOTA_RESULTADO,ES_ACTIVO,ESTADO,USUARIO_CREACION,FECHA_CREACION)
				--VALUES (SOURCE.ID_POSTULANTES_POR_MODALIDAD,SOURCE.NOTA_RESULTADO,1,(CASE WHEN (SOURCE.NOTA_RESULTADO/20) >= @NOTA_MINIMA THEN 90 ELSE 91 END),@USUARIO,GETDATE())
				VALUES (SOURCE.ID_POSTULANTES_POR_MODALIDAD,SOURCE.NOTA_RESULTADO,1,@ID_ESTADO_PREDETERMINADO,@USUARIO,GETDATE());
			/*WHEN NOT MATCHED BY SOURCE AND TARGET.ID_POSTULANTES_POR_MODALIDAD IN (SELECT ID_POSTULANTES_POR_MODALIDAD FROM transaccional.postulantes_por_modalidad 
																					WHERE ID_MODALIDADES_POR_PROCESO_ADMISION = @ID_MODALIDADES_POR_PROCESO_ADMISION) 
			THEN 
				UPDATE 
				SET
					--ES_ACTIVO = 0, 
					USUARIO_MODIFICACION = @USUARIO,
					FECHA_MODIFICACION = GETDATE();	*/ 
		--END

		--ES_ACTIVO = 0 para registro sin nota
		update 
		TABLA_RESULTADOS 
		SET TABLA_RESULTADOS.ES_ACTIVO=0,
		FECHA_MODIFICACION = GETDATE(),
		USUARIO_MODIFICACION = @USUARIO
		FROM transaccional.resultados_por_postulante TABLA_RESULTADOS
		inner join #TablaTempPostulantes temp on TABLA_RESULTADOS.ID_POSTULANTES_POR_MODALIDAD = temp.ID_POSTULANTES_POR_MODALIDAD
		where TABLA_RESULTADOS.ES_ACTIVO=1 and temp.NOTA_RESULTADO = -1

		COMMIT TRANSACTION T1	 
			SET @RESULT = 1			
	END TRY
	BEGIN CATCH
		IF @@ERROR = 50000
		BEGIN
			ROLLBACK TRANSACTION T1	   
			SET @RESULT = -180
		END
		ELSE
			IF @@ERROR <> 0
			BEGIN
				ROLLBACK TRANSACTION T1	   
				SET @RESULT = -1
			END
			ELSE
			BEGIN
				ROLLBACK TRANSACTION T1	   
				SET @RESULT = -2
			END
	END CATCH
END
DROP TABLE #TablaTempPostulantes
SELECT @RESULT
END


/**********************************************************************************************************
AUTOR				:	Juan Tovar
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Obtiene cadena de opciones del postulante
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			20/01/2020		MALVA			SE AÑADEN RETORNO DE VALORES DE TIPO_ITINERARIO Y NOMBRE_PLAN_ESTUDIOS.
--  TEST:			
/*
*/
--**********************************************************************************************************/
GO


