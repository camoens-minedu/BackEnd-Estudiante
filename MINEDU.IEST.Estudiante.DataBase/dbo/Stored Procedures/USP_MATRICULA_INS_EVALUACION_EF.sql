/**********************************************************************************************************
AUTOR				:	Juan Chavez
FECHA DE CREACION	:	24/03/2021
LLAMADO POR			:
DESCRIPCION			:	Insertar evaluación de las unidades didacticas de experiencias formativas 
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			24/03/2021		JCHAVEZ			Creación
2.0			28/02/2022		JCHAVEZ			Optimización del registro de notas

TEST:		
	dbo.USP_MATRICULA_INS_EVALUACION_EF 223474,'108740:17|108741:13','70557821'
**********************************************************************************************************/
CREATE PROCEDURE dbo.USP_MATRICULA_INS_EVALUACION_EF
(
	@ID_MATRICULA_ESTUDIANTE INT,
	@DETALLE_EVALUACION	NVARCHAR(max),
	@USUARIO			VARCHAR(20)
)
AS
BEGIN
	DECLARE @RESULT INT

	SELECT n.ID_MATRICULA_ESTUDIANTE,udpe.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE,n.ID_UNIDAD_DIDACTICA,n.NOTA, n.NRO
	INTO #TempNotasEF
	FROM (
		SELECT 
		@ID_MATRICULA_ESTUDIANTE ID_MATRICULA_ESTUDIANTE,
		SUBSTRING(SplitData, 0, CHARINDEX(':', SplitData)) ID_UNIDAD_DIDACTICA,
		SUBSTRING(SplitData, CHARINDEX(':', SplitData)+1, LEN(SplitData)-CHARINDEX(':', SplitData)) NOTA	
		,ROW_NUMBER() OVER(ORDER BY @ID_MATRICULA_ESTUDIANTE) NRO
		FROM dbo.UFN_SPLIT(@DETALLE_EVALUACION, '|')
	)n
	INNER JOIN transaccional.unidades_didacticas_por_enfoque udpe ON n.ID_UNIDAD_DIDACTICA=udpe.ID_UNIDAD_DIDACTICA
	
	BEGIN TRY
	BEGIN TRANSACTION T1
		IF (CHARINDEX('E',@DETALLE_EVALUACION) > 0)
		BEGIN
			UPDATE transaccional.evaluacion_experiencia_formativa
			SET ES_ACTIVO = 0, NOTA = NULL, USUARIO_MODIFICACION = @USUARIO, FECHA_MODIFICACION = GETDATE()
			WHERE ID_MATRICULA_ESTUDIANTE = @ID_MATRICULA_ESTUDIANTE
		END
		ELSE BEGIN
			--MERGE transaccional.evaluacion_experiencia_formativa AS TARGET
			--USING #TempNotasEF AS SOURCE ON TARGET.ID_MATRICULA_ESTUDIANTE = SOURCE.ID_MATRICULA_ESTUDIANTE	AND TARGET.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = SOURCE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE
			--WHEN MATCHED
			--THEN
			--	UPDATE
			--	SET 
			--	NOTA = SOURCE.NOTA,
			--	ES_ACTIVO = 1,
			--	ESTADO = 1,
			--	USUARIO_MODIFICACION = @USUARIO,
			--	FECHA_MODIFICACION = GETDATE()
			--WHEN NOT MATCHED BY TARGET
			--THEN
			--	INSERT (ID_MATRICULA_ESTUDIANTE,ID_UNIDADES_DIDACTICAS_POR_ENFOQUE,NOTA,ES_ACTIVO,ESTADO,USUARIO_CREACION,FECHA_CREACION)
			--	VALUES(
			--		SOURCE.ID_MATRICULA_ESTUDIANTE,
			--		SOURCE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE,
			--		SOURCE.NOTA,
			--		1,
			--		1,
			--		@USUARIO,
			--		GETDATE()
			--		);

			DECLARE @I INT = 1
			DECLARE @TOTAL INT = (SELECT COUNT(1) FROM #TempNotasEF)
			DECLARE @ID_UNIDADES_DIDACTICAS_POR_ENFOQUE INT, @NOTA DECIMAL_DOS

			UPDATE transaccional.evaluacion_experiencia_formativa SET
				NOTA=NULL,ES_ACTIVO=0,USUARIO_MODIFICACION=@USUARIO,FECHA_MODIFICACION=GETDATE()
			WHERE ID_MATRICULA_ESTUDIANTE=@ID_MATRICULA_ESTUDIANTE AND ES_ACTIVO=1

			WHILE (@I <= @TOTAL)
			BEGIN
				SELECT @ID_UNIDADES_DIDACTICAS_POR_ENFOQUE=ID_UNIDADES_DIDACTICAS_POR_ENFOQUE,@NOTA=NOTA FROM #TempNotasEF WHERE NRO = @I

				IF EXISTS (SELECT eef.ID_MATRICULA_ESTUDIANTE
							FROM transaccional.evaluacion_experiencia_formativa eef
							WHERE eef.ID_MATRICULA_ESTUDIANTE = @ID_MATRICULA_ESTUDIANTE 
								AND eef.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = @ID_UNIDADES_DIDACTICAS_POR_ENFOQUE)
				BEGIN
					UPDATE transaccional.evaluacion_experiencia_formativa SET
						NOTA=@NOTA,ES_ACTIVO=1,USUARIO_MODIFICACION=@USUARIO,FECHA_MODIFICACION=GETDATE()
					WHERE ID_MATRICULA_ESTUDIANTE = @ID_MATRICULA_ESTUDIANTE AND ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = @ID_UNIDADES_DIDACTICAS_POR_ENFOQUE
                END
                ELSE BEGIN
					INSERT INTO transaccional.evaluacion_experiencia_formativa
						    (ID_MATRICULA_ESTUDIANTE,ID_UNIDADES_DIDACTICAS_POR_ENFOQUE,NOTA,ES_ACTIVO,ESTADO,USUARIO_CREACION,FECHA_CREACION)
					VALUES  (@ID_MATRICULA_ESTUDIANTE,@ID_UNIDADES_DIDACTICAS_POR_ENFOQUE,@NOTA,1,1,@USUARIO,GETDATE())
                END
				SET @I = @I + 1
			END
		END
	COMMIT TRANSACTION T1
	SET @RESULT = 1
	END TRY
	BEGIN CATCH
		IF @@ERROR<>0
		BEGIN
			ROLLBACK TRANSACTION T1
			SELECT @@ERROR
			SET @RESULT = -1
		END
	END CATCH
	
	DROP TABLE #TempNotasEF
	SELECT @RESULT
END