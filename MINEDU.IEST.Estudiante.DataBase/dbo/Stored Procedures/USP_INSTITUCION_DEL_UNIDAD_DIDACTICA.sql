/**********************************************************************************************************
AUTOR				:	Juan Chavez
FECHA DE CREACION	:	05/02/2021
LLAMADO POR			:
DESCRIPCION			:	Elimina una unidad didáctica
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
--	1.0		 05/02/2021		JCHAVEZ
--  TEST:  
--			USP_INSTITUCION_DEL_UNIDAD_DIDACTICA 3648,106088,'70557821' 
**********************************************************************************************************/
CREATE PROCEDURE dbo.USP_INSTITUCION_DEL_UNIDAD_DIDACTICA
(
	@ID_PLAN_ESTUDIO INT,
	@ID_UNIDAD_DIDACTICA INT, 
    @USUARIO VARCHAR(8)
)
AS
BEGIN
	DECLARE @MSG_TRANS VARCHAR(MAX)
	DECLARE @ID_CORRELATIVO INT,
		@NUM_CORRELATIVO INT,
		@NEW_CORRELATIVO INT,
		@CODIGO_GENERADO NVARCHAR(12)

	BEGIN TRY

	BEGIN TRAN TransactSQL

	DECLARE @RESULT INT

	DECLARE @PLAN_ASIGNATURA INT = 99
	DECLARE @PLAN_TRANSVERSAL INT = 100
	DECLARE @PLAN_MODULAR INT = 101
	DECLARE @ID_TIPO_ITINERARIO INT 
	DECLARE @ID_MODULO INT

	SET @ID_TIPO_ITINERARIO = (SELECT ID_TIPO_ITINERARIO FROM transaccional.plan_estudio WHERE ID_PLAN_ESTUDIO=@ID_PLAN_ESTUDIO)
	SET @ID_MODULO = (SELECT ID_MODULO FROM transaccional.unidad_didactica WHERE ID_UNIDAD_DIDACTICA = @ID_UNIDAD_DIDACTICA)

	IF EXISTS (SELECT udxpc.ID_PROGRAMACION_CLASE,ud.ID_UNIDAD_DIDACTICA
			   FROM transaccional.unidades_didacticas_por_programacion_clase udxpc
			   INNER JOIN transaccional.unidades_didacticas_por_enfoque udxe ON udxe.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = udxpc.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND udxe.ES_ACTIVO=1
			   INNER JOIN transaccional.unidad_didactica ud ON ud.ID_UNIDAD_DIDACTICA = udxe.ID_UNIDAD_DIDACTICA
			   WHERE udxpc.ES_ACTIVO=1 AND ud.ID_UNIDAD_DIDACTICA = @ID_UNIDAD_DIDACTICA)
	BEGIN
		SET @RESULT = -379
	END
	ELSE BEGIN
		UPDATE transaccional.unidad_didactica SET
			ES_ACTIVO = 0,
			USUARIO_MODIFICACION = @USUARIO,
			FECHA_MODIFICACION = GETDATE()
		WHERE ID_UNIDAD_DIDACTICA = @ID_UNIDAD_DIDACTICA

		SET @RESULT = @@ROWCOUNT

		UPDATE m SET 
			m.HORAS_ME = (CASE @ID_TIPO_ITINERARIO WHEN @PLAN_TRANSVERSAL THEN mx.TOTAL_CREDITOS ELSE NULL END),
			m.TOTAL_HORAS = (CASE @ID_TIPO_ITINERARIO WHEN @PLAN_TRANSVERSAL THEN mx.TOTAL_HORAS ELSE NULL END),
			--CREDITOS_ME = (CASE @ID_TIPO_ITINERARIO WHEN @PLAN_TRANSVERSAL THEN mx.TOTAL_CREDITOS ELSE NULL END),
			m.TOTAL_HORAS_UD = (CASE @ID_TIPO_ITINERARIO WHEN @PLAN_MODULAR THEN mx.TOTAL_HORAS ELSE NULL END),
			m.TOTAL_CREDITOS_UD = (CASE @ID_TIPO_ITINERARIO WHEN @PLAN_MODULAR THEN mx.TOTAL_CREDITOS ELSE NULL END),
			m.USUARIO_MODIFICACION = @USUARIO,
			m.FECHA_MODIFICACION = GETDATE()
		FROM transaccional.modulo m
		INNER JOIN (SELECT ID_MODULO,TOTAL_HORAS=SUM(ud.HORAS),TOTAL_CREDITOS=SUM(ud.CREDITOS)
					FROM transaccional.unidad_didactica ud
					WHERE ID_MODULO = @ID_MODULO AND ud.ES_ACTIVO=1
					GROUP BY ID_MODULO) mx ON mx.ID_MODULO = m.ID_MODULO
	END

	COMMIT TRAN TransactSQL
	SELECT @RESULT AS valor

	END TRY

	BEGIN CATCH
		ROLLBACK TRAN TransactSQL
		DECLARE @ERROR_MESSAGE VARCHAR(MAX) = ''
		SET @ERROR_MESSAGE = ERROR_MESSAGE() + ' -- '
		SELECT 'Error: ' + @ERROR_MESSAGE
		SELECT 0 AS valor
	END CATCH
END