/************************************************************************************************************************************
AUTOR				:	Henry Orellano
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Reporte de acta consolidada notas
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			26/12/2019		MALVA			MODIFICACIÓN DE CONSULTA PARA PRECISAR ID_SECCION Y ID_TURNOS_POR_INSTITUCION
1.1			29/01/2020		MALVA		    SE AÑADE PARÁMETRO @ID_PLAN_ESTUDIO, SE QUITA @ID_TIPO_ITINERARIO.
											SE MODIFICA VALOR DE COLUMNA PlanEstudios.
1.2			08/06/2021		JCHAVEZ			SE AGREGÓ INNER EN EVALUACIÓN PARA MATCH DE UNIDAD DIDÁCTICA CON PROGRAMACION DE CLASE
2.0			07/02/2022		JCHAVEZ			SE INCLUYERON DATOS DE UNIDADES DIDÁCTICAS CONVALIDADAS
2.1			14/02/2022		JCHAVEZ			SE INCLUYERON DATOS DE ESTUDIANTES TRASLADADOS A MODO HISTÓRICO
3.0			28/02/2022		JCHAVEZ			SE INCLUYERON DATOS DE EVALUACIONES EXTRAORDINARIAS Y COMPLEMENTARIAS

TEST:		USP_EVALUACION_RPT_ACTA_CONSOLIDADA_NOTAS 383,3938,68,114,1171,921,3804,39,105
*************************************************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_EVALUACION_RPT_ACTA_CONSOLIDADA_NOTAS]
(	
	@ID_INSTITUCION							INT,	
	@ID_PERIODOS_LECTIVOS_POR_INSTITUCION	INT,	
	@ID_SEDE_INSTITUCION			INT,
	@ID_SEMESTRE_ACADEMICO			INT,	
	@ID_CARRERA						INT,
	@ID_PLAN_ESTUDIO				INT,
	@ID_PERIODO_ACADEMICO			INT,	
	@ID_TURNOS_POR_INSTITUCION		INT,
	@ID_SECCION						INT

)
AS 
BEGIN

	declare @TotalRegistros int =0
	declare @NOMBRE_PERIODO_LECTIVO VARCHAR(16)
	SET @NOMBRE_PERIODO_LECTIVO = (SELECT PL.CODIGO_PERIODO_LECTIVO FROM transaccional.periodos_lectivos_por_institucion PLXI 
											INNER JOIN maestro.periodo_lectivo PL ON PL.ID_PERIODO_LECTIVO=PLXI.ID_PERIODO_LECTIVO AND PLXI.ES_ACTIVO=1
											WHERE PLXI.ID_PERIODOS_LECTIVOS_POR_INSTITUCION= @ID_PERIODOS_LECTIVOS_POR_INSTITUCION)

	BEGIN --> Variable estado periodo de clase 
	DECLARE @ESTADO_PERIODO_CLASE VARCHAR(30) = '';
	DECLARE @ETIQUETA_ESTADO_PERIODO_CLASE VARCHAR(30) = '';
	END

	BEGIN --> Eliminar Temporales 
	IF (OBJECT_ID('tempdb.dbo.#TEMP01','U')) IS NOT NULL DROP TABLE #TEMP01
	IF (OBJECT_ID('tempdb.dbo.#TEMP02','U')) IS NOT NULL DROP TABLE #TEMP02
	IF (OBJECT_ID('tempdb.dbo.#TEMP03','U')) IS NOT NULL DROP TABLE #TEMP03
	IF (OBJECT_ID('tempdb.dbo.#TemporalAN','U')) IS NOT NULL DROP TABLE #TemporalAN
	END

	BEGIN --> Tabla temporal 1 
		SELECT
		DISTINCT 
			ID_PERIODO_ACADEMICO,ID_PERIODOS_LECTIVOS_POR_INSTITUCION,NOMBRE_PERIODO_ACADEMICO

		INTO #TEMP01

		FROM  transaccional.periodo_academico 
		WHERE ID_PERIODOS_LECTIVOS_POR_INSTITUCION= @ID_PERIODOS_LECTIVOS_POR_INSTITUCION
		AND ES_ACTIVO=1

	--SELECT * FROM #TEMP01 t; --BORRAR LEER TEMPORAL 1
	END

	BEGIN --> Tabla temporal 2 
		SELECT 
		DISTINCT 
		A.ID_PERIODOS_LECTIVOS_POR_INSTITUCION,
		A.ID_PERIODO_ACADEMICO,
		A.NOMBRE_PERIODO_ACADEMICO						AS PeriodoAcademico,
		B.ESTADO										AS ESTADO_pc,
		CASE ISNULL(B.ESTADO,0) 
			WHEN 1 THEN 'ABIERTO'
			WHEN 0 THEN 'CERRADO'
			END 										AS ESTADO
		INTO #TEMP02
		FROM transaccional.periodo_academico A
		INNER JOIN transaccional.programacion_clase B	ON A.ID_PERIODO_ACADEMICO=B.ID_PERIODO_ACADEMICO AND A.ES_ACTIVO=1 AND B.ES_ACTIVO=1			
		INNER JOIN transaccional.evaluacion C			ON B.ID_PROGRAMACION_CLASE=C.ID_PROGRAMACION_CLASE AND C.ES_ACTIVO=1
		WHERE A.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODOS_LECTIVOS_POR_INSTITUCION

	--SELECT * FROM #TEMP02 t; --BORRAR LEER TEMPORAL 2			
	END

	BEGIN  --> Tabla temporal 3 

		SELECT 
		A.ID_PERIODOS_LECTIVOS_POR_INSTITUCION AS IdPeriodosLectivosInstitucion,
		A.ID_PERIODO_ACADEMICO,
		A.NOMBRE_PERIODO_ACADEMICO AS PeriodoAcademico,
		B.ESTADO_pc,
		ISNULL(B.ESTADO,'ABIERTO') AS estado,
		ROW_NUMBER() OVER ( ORDER BY A.ID_PERIODO_ACADEMICO) AS Row,
		Total = count(1) OVER ()
		INTO #TEMP03
		FROM #TEMP01 A
		LEFT JOIN #TEMP02 B ON A.ID_PERIODOS_LECTIVOS_POR_INSTITUCION=B.ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND A.ID_PERIODO_ACADEMICO=B.ID_PERIODO_ACADEMICO	

	--SELECT * FROM #TEMP03 t; --BORRAR LEER TEMPORAL 3
	END 
 
	BEGIN --> Obtener Estado Periodo Clase 

	SET @ESTADO_PERIODO_CLASE = (SELECT TOP 1 t.estado FROM #TEMP03 t WHERE t.IdPeriodosLectivosInstitucion = @ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND t.ID_PERIODO_ACADEMICO = @ID_PERIODO_ACADEMICO)

	IF @ESTADO_PERIODO_CLASE = 'ABIERTO'
	BEGIN
		SET @ETIQUETA_ESTADO_PERIODO_CLASE = 'PROVISIONAL'
	END

	IF @ESTADO_PERIODO_CLASE = 'CERRADO'
	BEGIN
		SET @ETIQUETA_ESTADO_PERIODO_CLASE = 'OFICIAL'
	END

	SET @ESTADO_PERIODO_CLASE = @ETIQUETA_ESTADO_PERIODO_CLASE;

	--SELECT @ESTADO_PERIODO_CLASE AS '@ESTADO_PERIODO_CLASE'
	END 

	SELECT ID_MATRICULA_ESTUDIANTE,ID_SEDE_INSTITUCION,ID_TURNOS_POR_INSTITUCION,ID_SECCION,COUNT(1) CANT
	INTO #TempClasesMatriculados
	FROM transaccional.programacion_clase_por_matricula_estudiante pcme
		INNER JOIN transaccional.programacion_clase pc ON pc.ID_PROGRAMACION_CLASE = pcme.ID_PROGRAMACION_CLASE AND pcme.ES_ACTIVO=1 AND pc.ES_ACTIVO=1
	GROUP BY ID_MATRICULA_ESTUDIANTE,ID_SEDE_INSTITUCION,ID_TURNOS_POR_INSTITUCION,ID_SECCION
	
	SELECT DISTINCT me.ID_ESTUDIANTE_INSTITUCION,me.ID_MATRICULA_ESTUDIANTE, pe.ID_PLAN_ESTUDIO, ei.ID_PERSONA_INSTITUCION, cxi.ID_CARRERA, CARRERA.NOMBRE_CARRERA,
		CARRERA.ID_NIVEL_FORMACION, CARRERA.NIVEL_FORMACION, pa.ID_PERIODO_ACADEMICO, pa.NOMBRE_PERIODO_ACADEMICO, e_ciclo.VALOR_ENUMERADO Ciclo,
		pc.ID_SECCION, e_seccion.VALOR_ENUMERADO Seccion, si.ID_SEDE_INSTITUCION, si.DIRECCION_SEDE,pc.ID_TURNOS_POR_INSTITUCION
	INTO #TempEstudiantes
	FROM transaccional.evaluacion_detalle ed
	INNER JOIN transaccional.matricula_estudiante me on ed.ID_MATRICULA_ESTUDIANTE = me.ID_MATRICULA_ESTUDIANTE and ed.ES_ACTIVO=1 and me.ES_ACTIVO=1
	INNER JOIN transaccional.estudiante_institucion ei on ei.ID_ESTUDIANTE_INSTITUCION= me.ID_ESTUDIANTE_INSTITUCION and (ei.ES_ACTIVO=1 OR ei.ESTADO=333)
	INNER JOIN transaccional.carreras_por_institucion_detalle cxid on cxid.ID_CARRERAS_POR_INSTITUCION_DETALLE= ei.ID_CARRERAS_POR_INSTITUCION_DETALLE and cxid.ES_ACTIVO=1
	INNER JOIN transaccional.carreras_por_institucion cxi on cxi.ID_CARRERAS_POR_INSTITUCION= cxid.ID_CARRERAS_POR_INSTITUCION and cxi.ES_ACTIVO=1
	INNER JOIN transaccional.programacion_clase_por_matricula_estudiante pcxme on pcxme.ID_MATRICULA_ESTUDIANTE = me.ID_MATRICULA_ESTUDIANTE and pcxme.ES_ACTIVO=1
	INNER JOIN transaccional.programacion_clase pc on pc.ID_PROGRAMACION_CLASE= pcxme.ID_PROGRAMACION_CLASE and pc.ES_ACTIVO=1
	INNER JOIN transaccional.unidades_didacticas_por_programacion_clase udxpc on udxpc.ID_PROGRAMACION_CLASE = pc.ID_PROGRAMACION_CLASE and udxpc.ES_ACTIVO=1
	INNER JOIN transaccional.unidades_didacticas_por_enfoque udxe on udxe.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE= udxpc.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE and udxe.ES_ACTIVO=1
	INNER JOIN transaccional.unidad_didactica ud on ud.ID_UNIDAD_DIDACTICA = udxe.ID_UNIDAD_DIDACTICA and ud.ES_ACTIVO=1
	INNER JOIN transaccional.plan_estudio pe on ei.ID_PLAN_ESTUDIO = pe.ID_PLAN_ESTUDIO AND pe.ES_ACTIVO=1
	INNER JOIN db_auxiliar.dbo.UVW_CARRERA CARRERA on CARRERA.ID_CARRERA = cxi.ID_CARRERA
	INNER JOIN transaccional.periodo_academico pa on pa.ID_PERIODO_ACADEMICO = pc.ID_PERIODO_ACADEMICO and pa.ES_ACTIVO=1
	INNER JOIN sistema.enumerado e_ciclo on e_ciclo.ID_ENUMERADO= ud.ID_SEMESTRE_ACADEMICO
	INNER JOIN sistema.enumerado e_seccion on e_seccion.ID_ENUMERADO= pc.ID_SECCION
	INNER JOIN maestro.sede_institucion si on si.ID_SEDE_INSTITUCION= cxid.ID_SEDE_INSTITUCION and si.ES_ACTIVO=1
	WHERE
		me.ID_PERIODOS_LECTIVOS_POR_INSTITUCION			= @ID_PERIODOS_LECTIVOS_POR_INSTITUCION
		AND pc.ID_SEDE_INSTITUCION						= @ID_SEDE_INSTITUCION
		AND cxi.ID_CARRERA								= @ID_CARRERA	
		AND ei.ID_PLAN_ESTUDIO							= @ID_PLAN_ESTUDIO
		AND me.ID_PERIODO_ACADEMICO						= @ID_PERIODO_ACADEMICO
		AND pc.ID_TURNOS_POR_INSTITUCION				= @ID_TURNOS_POR_INSTITUCION		
		AND pc.ID_SECCION								= @ID_SECCION
		AND ud.ID_SEMESTRE_ACADEMICO					= @ID_SEMESTRE_ACADEMICO

	/** EF **************************/
	INSERT INTO #TempEstudiantes
	SELECT DISTINCT me.ID_ESTUDIANTE_INSTITUCION,me.ID_MATRICULA_ESTUDIANTE,ei.ID_PLAN_ESTUDIO,ei.ID_PERSONA_INSTITUCION,cxi.ID_CARRERA,CARRERA.NOMBRE_CARRERA,
	CARRERA.ID_NIVEL_FORMACION, CARRERA.NIVEL_FORMACION, pa.ID_PERIODO_ACADEMICO, pa.NOMBRE_PERIODO_ACADEMICO, e_ciclo.VALOR_ENUMERADO Ciclo,
		pc.ID_SECCION, e_seccion.VALOR_ENUMERADO, si.ID_SEDE_INSTITUCION, si.DIRECCION_SEDE,pc.ID_TURNOS_POR_INSTITUCION
	FROM transaccional.matricula_estudiante me
	INNER JOIN transaccional.evaluacion_experiencia_formativa eef ON eef.ID_MATRICULA_ESTUDIANTE = me.ID_MATRICULA_ESTUDIANTE AND eef.ES_ACTIVO = 1 and me.ES_ACTIVO=1
	INNER JOIN transaccional.estudiante_institucion ei ON ei.ID_ESTUDIANTE_INSTITUCION = me.ID_ESTUDIANTE_INSTITUCION AND (ei.ES_ACTIVO=1 OR ei.ESTADO=333)
	INNER JOIN transaccional.carreras_por_institucion_detalle cxid on cxid.ID_CARRERAS_POR_INSTITUCION_DETALLE= ei.ID_CARRERAS_POR_INSTITUCION_DETALLE and cxid.ES_ACTIVO=1
	INNER JOIN transaccional.carreras_por_institucion cxi on cxi.ID_CARRERAS_POR_INSTITUCION= cxid.ID_CARRERAS_POR_INSTITUCION and cxi.ES_ACTIVO=1
	INNER JOIN db_auxiliar.dbo.UVW_CARRERA CARRERA on CARRERA.ID_CARRERA = cxi.ID_CARRERA
	INNER JOIN transaccional.periodo_academico pa ON pa.ID_PERIODO_ACADEMICO = me.ID_PERIODO_ACADEMICO AND pa.ES_ACTIVO = 1
	INNER JOIN transaccional.unidades_didacticas_por_enfoque udxe ON udxe.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = eef.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE
	INNER JOIN transaccional.unidad_didactica ud ON ud.ID_UNIDAD_DIDACTICA = udxe.ID_UNIDAD_DIDACTICA
	INNER JOIN sistema.enumerado e_ciclo on e_ciclo.ID_ENUMERADO= ud.ID_SEMESTRE_ACADEMICO
	LEFT JOIN (	
				SELECT pc_max.ID_MATRICULA_ESTUDIANTE,MIN(ID_SEDE_INSTITUCION) ID_SEDE_INSTITUCION,
				MIN(ID_TURNOS_POR_INSTITUCION) ID_TURNOS_POR_INSTITUCION,MIN(ID_SECCION) ID_SECCION
				FROM (SELECT ID_MATRICULA_ESTUDIANTE, MAX(CANT) CANT FROM #TempClasesMatriculados pc_sum GROUP BY ID_MATRICULA_ESTUDIANTE) pc_max
					INNER JOIN #TempClasesMatriculados pc_sum ON pc_max.ID_MATRICULA_ESTUDIANTE = pc_sum.ID_MATRICULA_ESTUDIANTE AND pc_max.CANT = pc_sum.CANT
				GROUP BY pc_max.ID_MATRICULA_ESTUDIANTE
				) pc ON pc.ID_MATRICULA_ESTUDIANTE = me.ID_MATRICULA_ESTUDIANTE
	LEFT JOIN sistema.enumerado e_seccion on e_seccion.ID_ENUMERADO= pc.ID_SECCION
	LEFT JOIN maestro.sede_institucion si on si.ID_SEDE_INSTITUCION= cxid.ID_SEDE_INSTITUCION and si.ES_ACTIVO=1
	WHERE eef.ID_MATRICULA_ESTUDIANTE NOT IN (SELECT ID_MATRICULA_ESTUDIANTE FROM #TempEstudiantes)
		AND me.ID_PERIODOS_LECTIVOS_POR_INSTITUCION		= @ID_PERIODOS_LECTIVOS_POR_INSTITUCION
		--AND pc.ID_SEDE_INSTITUCION					= @ID_SEDE_INSTITUCION
		AND cxi.ID_CARRERA								= @ID_CARRERA	
		AND ei.ID_PLAN_ESTUDIO							= @ID_PLAN_ESTUDIO
		AND me.ID_PERIODO_ACADEMICO						= @ID_PERIODO_ACADEMICO
		--AND pc.ID_TURNOS_POR_INSTITUCION				= @ID_TURNOS_POR_INSTITUCION		
		--AND pc.ID_SECCION								= @ID_SECCION
		AND ud.ID_SEMESTRE_ACADEMICO					= @ID_SEMESTRE_ACADEMICO 
	/********************************/
	/** EEX *************************/
	INSERT INTO #TempEstudiantes
	SELECT DISTINCT eex.ID_ESTUDIANTE_INSTITUCION,me.ID_MATRICULA_ESTUDIANTE,ei.ID_PLAN_ESTUDIO,ei.ID_PERSONA_INSTITUCION,cxi.ID_CARRERA,CARRERA.NOMBRE_CARRERA,
	CARRERA.ID_NIVEL_FORMACION, CARRERA.NIVEL_FORMACION, pa.ID_PERIODO_ACADEMICO, pa.NOMBRE_PERIODO_ACADEMICO, e_ciclo.VALOR_ENUMERADO Ciclo,
		pc.ID_SECCION, e_seccion.VALOR_ENUMERADO, si.ID_SEDE_INSTITUCION, si.DIRECCION_SEDE,pc.ID_TURNOS_POR_INSTITUCION
	FROM transaccional.evaluacion_extraordinaria eex 
	INNER JOIN transaccional.evaluacion_extraordinaria_detalle eexd ON eexd.ID_EVALUACION_EXTRAORDINARIA = eex.ID_EVALUACION_EXTRAORDINARIA AND eexd.ES_ACTIVO = 1 AND eexd.NOTA IS NOT NULL
	INNER JOIN transaccional.estudiante_institucion ei ON ei.ID_ESTUDIANTE_INSTITUCION = eex.ID_ESTUDIANTE_INSTITUCION AND (ei.ES_ACTIVO=1 OR ei.ESTADO=333)
	INNER JOIN transaccional.carreras_por_institucion_detalle cxid on cxid.ID_CARRERAS_POR_INSTITUCION_DETALLE= ei.ID_CARRERAS_POR_INSTITUCION_DETALLE and cxid.ES_ACTIVO=1
	INNER JOIN transaccional.carreras_por_institucion cxi on cxi.ID_CARRERAS_POR_INSTITUCION= cxid.ID_CARRERAS_POR_INSTITUCION and cxi.ES_ACTIVO=1
	INNER JOIN db_auxiliar.dbo.UVW_CARRERA CARRERA on CARRERA.ID_CARRERA = cxi.ID_CARRERA
	INNER JOIN transaccional.periodos_lectivos_por_institucion plxi ON plxi.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = eex.ID_PERIODOS_LECTIVOS_POR_INSTITUCION
	INNER JOIN transaccional.periodo_academico pa ON pa.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = eex.ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND pa.ES_ACTIVO = 1
	INNER JOIN transaccional.unidad_didactica ud ON ud.ID_UNIDAD_DIDACTICA = eexd.ID_UNIDAD_DIDACTICA
	INNER JOIN sistema.enumerado e_ciclo on e_ciclo.ID_ENUMERADO= ud.ID_SEMESTRE_ACADEMICO
	LEFT JOIN transaccional.matricula_estudiante me ON me.ID_ESTUDIANTE_INSTITUCION = ei.ID_ESTUDIANTE_INSTITUCION AND me.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = eex.ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND me.ES_ACTIVO = 1
	LEFT JOIN (	
				SELECT pc_max.ID_MATRICULA_ESTUDIANTE,MIN(ID_SEDE_INSTITUCION) ID_SEDE_INSTITUCION,
				MIN(ID_TURNOS_POR_INSTITUCION) ID_TURNOS_POR_INSTITUCION,MIN(ID_SECCION) ID_SECCION
				FROM (SELECT ID_MATRICULA_ESTUDIANTE, MAX(CANT) CANT FROM #TempClasesMatriculados pc_sum GROUP BY ID_MATRICULA_ESTUDIANTE) pc_max
					INNER JOIN #TempClasesMatriculados pc_sum ON pc_max.ID_MATRICULA_ESTUDIANTE = pc_sum.ID_MATRICULA_ESTUDIANTE AND pc_max.CANT = pc_sum.CANT
				GROUP BY pc_max.ID_MATRICULA_ESTUDIANTE
				) pc ON pc.ID_MATRICULA_ESTUDIANTE = me.ID_MATRICULA_ESTUDIANTE
	LEFT JOIN sistema.enumerado e_seccion on e_seccion.ID_ENUMERADO= pc.ID_SECCION
	LEFT JOIN maestro.sede_institucion si on si.ID_SEDE_INSTITUCION= cxid.ID_SEDE_INSTITUCION and si.ES_ACTIVO=1
	WHERE eex.ES_ACTIVO = 1
		AND eex.ID_ESTUDIANTE_INSTITUCION NOT IN (SELECT ID_ESTUDIANTE_INSTITUCION FROM #TempEstudiantes)
		AND eex.ID_PERIODOS_LECTIVOS_POR_INSTITUCION		= @ID_PERIODOS_LECTIVOS_POR_INSTITUCION
		--AND pc.ID_SEDE_INSTITUCION					= @ID_SEDE_INSTITUCION
		AND cxi.ID_CARRERA								= @ID_CARRERA	
		AND ei.ID_PLAN_ESTUDIO							= @ID_PLAN_ESTUDIO
		AND me.ID_PERIODO_ACADEMICO						= @ID_PERIODO_ACADEMICO
		--AND pc.ID_TURNOS_POR_INSTITUCION				= @ID_TURNOS_POR_INSTITUCION		
		--AND pc.ID_SECCION								= @ID_SECCION
		AND ud.ID_SEMESTRE_ACADEMICO					= @ID_SEMESTRE_ACADEMICO 
	/********************************/

	--1646	
	DECLARE @ID_TURNO INT 
	DECLARE @Turno VARCHAR(20)
	SELECT @ID_TURNO = te.ID_TURNO, @Turno = e.VALOR_ENUMERADO FROM maestro.turnos_por_institucion ti
	inner join maestro.turno_equivalencia te on ti.ID_TURNO_EQUIVALENCIA = te.ID_TURNO_EQUIVALENCIA and ti.ES_ACTIVO =1 
	inner join sistema.enumerado e on e.ID_ENUMERADO = te.ID_TURNO
	where ti.ID_TURNOS_POR_INSTITUCION=@ID_TURNOS_POR_INSTITUCION
	
	SELECT
		INS.DRE_GRE						Dre_gre,
		mpi.ID_INSTITUCION,
		INS.NOMBRE_INSTITUCION			NombreInstituto,
		INS.CODIGO_DISTRITO				CODIGO_UBIGEO,
		UB.DEPARTAMENTO_UBIGEO,
		UB.PROVINCIA_UBIGEO,
		UB.DISTRITO_UBIGEO,
		pe.NOMBRE_PLAN_ESTUDIOS + ' (' +PES.VALOR_ENUMERADO + ')'		PlanEstudios,
		@ID_TURNO														ID_TURNO,
		@Turno															Turno,
		temp.ID_ESTUDIANTE_INSTITUCION, 
		temp.ID_CARRERA,
		temp.NOMBRE_CARRERA												carrera,
		temp.ID_NIVEL_FORMACION,
		temp.NIVEL_FORMACION											NOMBRE_NIVEL_FORMACION, 
		temp.ID_PERIODO_ACADEMICO										IdPeriodoClases,
		temp.NOMBRE_PERIODO_ACADEMICO									Periodo_clases,
		@ESTADO_PERIODO_CLASE											Estado_Periodo_clases,
		temp.Ciclo,
		temp.ID_SECCION													IdSeccion,
		temp.Seccion, 
		INS.CODIGO_MODULAR												CodigoModular,	
		temp.ID_SEDE_INSTITUCION,
		temp.DIRECCION_SEDE												DireccionSede,
		INS.TIPO_GESTION_NOMBRE											TipoGestion,
		temp.ID_ESTUDIANTE_INSTITUCION									IdEstudiante,
		P.NUMERO_DOCUMENTO_PERSONA										NroDocumentoIdentidad,
		P.APELLIDO_PATERNO_PERSONA, 
		P.APELLIDO_MATERNO_PERSONA,
		P.NOMBRE_PERSONA, 
		UPPER(P.APELLIDO_PATERNO_PERSONA) + ' ' + UPPER(P.APELLIDO_MATERNO_PERSONA)  + ', ' + dbo.UFN_CAPITALIZAR( P.NOMBRE_PERSONA) NombreAlumno,
		@NOMBRE_PERIODO_LECTIVO PERIODO_LECTIVO, 
		ud.ID_UNIDAD_DIDACTICA, 
		ud.NOMBRE_UNIDAD_DIDACTICA  UnidadDidactica, 
		CASE WHEN SUBCONSULTA_EVALUACION.ID_ESTUDIANTE_INSTITUCION IS NULL THEN 'NM' 
			WHEN SUBCONSULTA_EVALUACION.NOTA IS NULL THEN ''
			ELSE RIGHT('00' + CONVERT(VARCHAR(5), CONVERT(INT, SUBCONSULTA_EVALUACION.NOTA)),2)
			END
			Nota
		--CASE WHEN SUBCONSULTA_EVALUACION.ID_ESTUDIANTE_INSTITUCION IS NULL AND SUBCONSULTA_EVALUACION.ID_MATRICULA_ESTUDIANTE_EF IS NULL THEN 'NM' 
		--	WHEN SUBCONSULTA_EVALUACION.NOTA IS NULL AND SUBCONSULTA_EVALUACION.NOTA_EF IS NULL THEN ''
		--	ELSE RIGHT('00' + CONVERT(VARCHAR(5), CONVERT(INT, ISNULL(SUBCONSULTA_EVALUACION.NOTA,SUBCONSULTA_EVALUACION.NOTA_EF))),2)
		--	END
		--	Nota
		,Total = count(1) OVER ()
		INTO #TemporalAN	
	from 
	#TempEstudiantes temp 
	inner join maestro.persona_institucion mpi on mpi.ID_PERSONA_INSTITUCION = temp.ID_PERSONA_INSTITUCION
	inner join db_auxiliar.dbo.UVW_INSTITUCION INS ON INS.ID_INSTITUCION= mpi.ID_INSTITUCION
	INNER JOIN maestro.persona mp on mp.ID_PERSONA = mpi.ID_PERSONA
	INNER JOIN transaccional.plan_estudio pe on pe.ID_PLAN_ESTUDIO= temp.ID_PLAN_ESTUDIO
	inner join transaccional.modulo m on m.ID_PLAN_ESTUDIO= temp.ID_PLAN_ESTUDIO AND m.ES_ACTIVO=1
	INNER JOIN transaccional.unidad_didactica ud on ud.ID_MODULO= m.ID_MODULO and ud.ES_ACTIVO=1
	INNER JOIN db_auxiliar.dbo.UVW_UBIGEO UB									ON INS.CODIGO_DISTRITO=UB.CODIGO_UBIGEO 	--reemplazoPorVista
	INNER JOIN sistema.enumerado PES											ON pe.ID_TIPO_ITINERARIO= PES.ID_ENUMERADO 
	INNER JOIN maestro.persona P ON P.ID_PERSONA = mpi.ID_PERSONA
	LEFT JOIN (
		select tme.ID_ESTUDIANTE_INSTITUCION, udxe.ID_UNIDAD_DIDACTICA, ted.NOTA, tme.ID_PERIODOS_LECTIVOS_POR_INSTITUCION, pc.ID_TURNOS_POR_INSTITUCION, pc.ID_SECCION, e.ID_CARRERA
		from #TempEstudiantes tmpEst
		INNER JOIN transaccional.matricula_estudiante tme ON tme.ID_MATRICULA_ESTUDIANTE = tmpEst.ID_MATRICULA_ESTUDIANTE
		INNER JOIN transaccional.programacion_clase_por_matricula_estudiante pcxme on pcxme.ID_MATRICULA_ESTUDIANTE= tme.ID_MATRICULA_ESTUDIANTE and tme.ES_ACTIVO=1 and pcxme.ES_ACTIVO=1
		INNER JOIN transaccional.programacion_clase pc on pc.ID_PROGRAMACION_CLASE = pcxme.ID_PROGRAMACION_CLASE and pc.ES_ACTIVO=1 
		INNER JOIN transaccional.unidades_didacticas_por_programacion_clase udxpc on udxpc.ID_PROGRAMACION_CLASE= pcxme.ID_PROGRAMACION_CLASE  and udxpc.ES_ACTIVO=1
		INNER JOIN transaccional.unidades_didacticas_por_enfoque udxe on udxe.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = udxpc.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE and udxe.ES_ACTIVO=1
		LEFT JOIN transaccional.evaluacion e on e.ID_PROGRAMACION_CLASE = pc.ID_PROGRAMACION_CLASE AND e.ID_UNIDAD_DIDACTICA=udxe.ID_UNIDAD_DIDACTICA AND e.ES_ACTIVO=1
		LEFT JOIN transaccional.evaluacion_detalle ted on ted.ID_MATRICULA_ESTUDIANTE= tme.ID_MATRICULA_ESTUDIANTE and ted.ID_EVALUACION = e.ID_EVALUACION and ted.ES_ACTIVO=1       
		UNION ALL
        /** NOTAS EF **************************/
		SELECT tme.ID_ESTUDIANTE_INSTITUCION,ud.ID_UNIDAD_DIDACTICA,eef.NOTA,tme.ID_PERIODOS_LECTIVOS_POR_INSTITUCION,tmpEst.ID_TURNOS_POR_INSTITUCION,tmpEst.ID_SECCION,tmpEst.ID_CARRERA
		from #TempEstudiantes tmpEst
		INNER JOIN transaccional.matricula_estudiante tme ON tme.ID_MATRICULA_ESTUDIANTE = tmpEst.ID_MATRICULA_ESTUDIANTE AND tme.ES_ACTIVO = 1
		INNER JOIN transaccional.evaluacion_experiencia_formativa eef ON eef.ID_MATRICULA_ESTUDIANTE = tme.ID_MATRICULA_ESTUDIANTE AND eef.ES_ACTIVO = 1
		INNER JOIN transaccional.unidades_didacticas_por_enfoque udxe ON udxe.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = eef.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND udxe.ES_ACTIVO=1
		INNER JOIN transaccional.unidad_didactica ud ON ud.ID_UNIDAD_DIDACTICA = udxe.ID_UNIDAD_DIDACTICA AND ud.ES_ACTIVO=1
		/**************************************/
		UNION ALL
		/** NOTAS CONVALIDACION *********/ --versión 2.0
		SELECT tme.ID_ESTUDIANTE_INSTITUCION,ud.ID_UNIDAD_DIDACTICA,cd.NOTA,tme.ID_PERIODOS_LECTIVOS_POR_INSTITUCION,tmpEst.ID_TURNOS_POR_INSTITUCION,tmpEst.ID_SECCION,tmpEst.ID_CARRERA
		from #TempEstudiantes tmpEst
		INNER JOIN transaccional.matricula_estudiante tme ON tme.ID_MATRICULA_ESTUDIANTE = tmpEst.ID_MATRICULA_ESTUDIANTE AND tme.ES_ACTIVO = 1
		INNER JOIN transaccional.convalidacion c ON c.ID_ESTUDIANTE_INSTITUCION = tme.ID_ESTUDIANTE_INSTITUCION AND c.ES_ACTIVO = 1
		INNER JOIN transaccional.convalidacion_detalle cd ON cd.ID_CONVALIDACION = c.ID_CONVALIDACION AND cd.ES_ACTIVO = 1
		INNER JOIN transaccional.unidad_didactica ud ON ud.ID_UNIDAD_DIDACTICA = cd.ID_UNIDAD_DIDACTICA AND ud.ES_ACTIVO=1
		/********************************/
		UNION ALL
		/** NOTAS EVALUACIONES EXTRAORDINARIAS *********/ --versión 3.0
		SELECT eex.ID_ESTUDIANTE_INSTITUCION,ud.ID_UNIDAD_DIDACTICA,eexd.NOTA,eex.ID_PERIODOS_LECTIVOS_POR_INSTITUCION,tmpEst.ID_TURNOS_POR_INSTITUCION,tmpEst.ID_SECCION,tmpEst.ID_CARRERA
		from #TempEstudiantes tmpEst
		INNER JOIN transaccional.evaluacion_extraordinaria eex ON eex.ID_ESTUDIANTE_INSTITUCION = tmpEst.ID_ESTUDIANTE_INSTITUCION AND eex.ES_ACTIVO = 1
		INNER JOIN transaccional.evaluacion_extraordinaria_detalle eexd ON eexd.ID_EVALUACION_EXTRAORDINARIA = eex.ID_EVALUACION_EXTRAORDINARIA AND eexd.ES_ACTIVO = 1 --AND eexd.NOTA IS NOT NULL
		INNER JOIN transaccional.unidad_didactica ud ON ud.ID_UNIDAD_DIDACTICA = eexd.ID_UNIDAD_DIDACTICA AND ud.ES_ACTIVO=1
		/***********************************************/
	) SUBCONSULTA_EVALUACION ON 
	SUBCONSULTA_EVALUACION.ID_UNIDAD_DIDACTICA = ud.ID_UNIDAD_DIDACTICA and SUBCONSULTA_EVALUACION.ID_ESTUDIANTE_INSTITUCION = temp.ID_ESTUDIANTE_INSTITUCION
	AND SUBCONSULTA_EVALUACION.ID_TURNOS_POR_INSTITUCION=temp.ID_TURNOS_POR_INSTITUCION	AND SUBCONSULTA_EVALUACION.ID_SECCION = temp.ID_SECCION
	WHERE ud.ID_SEMESTRE_ACADEMICO = @ID_SEMESTRE_ACADEMICO 
	ORDER BY ud.NOMBRE_UNIDAD_DIDACTICA
	
	DROP TABLE #TempClasesMatriculados
	DROP TABLE #TempEstudiantes

	IF EXISTS (SELECT * from #TemporalAN)
	BEGIN
		SELECT * from #TemporalAN
		DROP TABLE #TemporalAN
	END
	ELSE
	BEGIN
		SELECT	0 AS Total,
				'' AS Dre_gre,
				'' AS ID_INSTITUCION,
				'' AS NombreInstituto,
				'' AS CODIGO_UBIGEO,
				'' AS DEPARTAMENTO_UBIGEO,
				'' AS PROVINCIA_UBIGEO,
				'' AS DISTRITO_UBIGEO,
				'' AS PlanEstudios,
				'' AS ID_TURNO,
				'' AS Turno,
				'' AS ID_ESTUDIANTE_INSTITUCION,
				'' AS ID_CARRERA,
				'' AS carrera,
				'' AS ID_NIVEL_FORMACION,
				'' AS NOMBRE_NIVEL_FORMACION,
				'' AS IdPeriodoClases,
				'' AS Periodo_clases,
				'' AS Estado_Periodo_clases,
				'' AS Ciclo,
				'' AS IdSeccion,
				'' AS Seccion,
				'' AS CodigoModular,
				'' AS ID_SEDE_INSTITUCION,
				'' AS DireccionSede,
				'' AS TipoGestion,
				'' AS IdEstudiante,
				'' AS NroDocumentoIdentidad,
				'' AS APELLIDO_PATERNO_PERSONA,
				'' AS APELLIDO_MATERNO_PERSONA,
				'' AS NOMBRE_PERSONA,
				'' AS NombreAlumno,
				'' AS UnidadDidactica,
				'' AS Nota
	END	
END
GO


