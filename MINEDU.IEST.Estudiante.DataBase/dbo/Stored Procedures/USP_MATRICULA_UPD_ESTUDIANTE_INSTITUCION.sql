/*******************************************************************************************************************************
AUTOR				:	Mayra Alva
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Actualiza el registro de matricula de un estudiante de una institución
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			06/01/2020		MALVA           MODIFICACIÓN, EN LA INSERCIÓN O MODIFICACIÓN DE INSTITUCIÓN BÁSICA DE TIPO EBA
											SE CONSIDERA QUE NO TRAE CÓDIGO MODULAR. 
1.1			07/01/2020		MALVA           MODIFICACIÓN SE AÑADE PARÁMETRO @ID_PLAN_ESTUDIO para actualizar estudiante institución. 
2.0			04/04/2022		JCHAVEZ			ACTUALIZACIÓN DE VALIDACIÓN -233 DE ACUERDO AL PROCESO DE INSERCIÓN DE ESTUDIANTE
2.1			17/05/2022		JCHAVEZ			SE QUITÓ VALIDACIÓN -198
TEST:	
	EXEC USP_MATRICULA_UPD_ESTUDIANTE_INSTITUCION 32, 31, 35, 26,  'ANA MARIA', 'ARNAO', 'LINARES',
		36,69,'1984-05-29', 0, 92330, '140101', 0, '','','', 0,
		443, 
		32, 92330, '140132', 'MZ 7-L LT 10 SAN FRANCISCO TABLADA DE LURIN', '5498784', '954546412', 'ana_arnao@gmail.com',0,
		0, 2016, '', 70,'0207480', 'CESAR ABRAHAM VALLEJO', 75, 3, 92330, '30101', 'AVENIDA PACHACUTEC', 'imagen.jpg',
		'\\10.1.1.74\FileSystem\Fabrica\Regia\dev\ESTUDIANTES_HIST_FOTOS\imagen.jpg', 
		442, 48, 101,  773,111, 193,895, 'MALVA'
**********************************************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_MATRICULA_UPD_ESTUDIANTE_INSTITUCION]
(
	
	@ID_PERSONA						INT,
	@ID_PERSONA_INSTITUCION			INT,
	@ID_ESTUDIANTE_INSTITUCION		INT,
	@ID_TIPO_DOCUMENTO				INT,
	@NUMERO_DOCUMENTO_PERSONA		VARCHAR(16),	
	@NOMBRE_PERSONA					VARCHAR(50),
	@APELLIDO_PATERNO_PERSONA		VARCHAR(40),
	@APELLIDO_MATERNO_PERSONA		VARCHAR(40),	
	@SEXO_PERSONA					INT,
	@ID_LENGUA_MATERNA				INT,
	@FECHA_NACIMIENTO_PERSONA		DATETIME,
	@ES_DISCAPACITADO				INT,
	@PAIS_NACIMIENTO				INT,
	@UBIGEO_NACIMIENTO				VARCHAR(6),
	@ID_TIPO_DOCUMENTO_APODERADO	INT,
	@NUMERO_DOCUMENTO_APODERADO		VARCHAR(16),
	@NOMBRE_APODERADO				VARCHAR(50),
	@APELLIDO_APODERADO				VARCHAR(150),
	@ID_TIPO_PARENTESCO				INT,
	@ID_INSTITUCION					INT,
	@ESTADO_CIVIL					INT,
	@PAIS_PERSONA					INT,
	@UBIGEO_PERSONA					VARCHAR(6),
	@DIRECCION_PERSONA				VARCHAR(255),
	@TELEFONO						VARCHAR(15),
	@CELULAR						VARCHAR(15),
	@CORREO							VARCHAR(100),
	@ID_TIPO_DISCAPACIDAD			INT,
	@ID_INSTITUCION_BASICA			INT,
	@ANIO_EGRESO					INT,
	@CODIGO_ESTUDIANTE				VARCHAR(16),
	@ID_TIPO_INSTITUCION_BASICA		INT,
	@CODIGO_MODULAR					VARCHAR(7),
	@NOMBRE_IE_BASICA				VARCHAR(150),
	@ID_NIVEL_IE_BASICA				INT,
	@ID_TIPO_GESTION_IE_BASICA		INT,
	@ID_PAIS_BASICA					INT,
	@UBIGEO_IE_BASICA				VARCHAR(6),
	@DIRECCION_IE_BASICA			VARCHAR(255),
	@ARCHIVO_FOTO					VARCHAR(50),
	@ARCHIVO_RUTA					VARCHAR(255),	
	@ID_SEDE_INSTITUCION			INT, 
	@ID_CARRERA						INT,
	@ID_TIPO_ITINERARIO				INT, 
	@ID_TURNOS_POR_INSTITUCION		INT,
	@ID_SEMESTRE_ACADEMICO			INT,	
	@ID_TIPO_ESTUDIANTE				INT,
	@ID_PERIODO_LECTIVO_INSTITUCION	INT,
	@ID_PLAN_ESTUDIO				INT, 
	@USUARIO						VARCHAR(20),
	@ACTUALIZA_DATOS_PERS			BIT,
	@ACTUALIZA_ESTADO_REG			BIT
)
AS
DECLARE 
	@RESULT INT,
	@ID_TURNO INT,
	@TIPO_DOCUMENTO INT,
	@ESTADO_CIVIL_UPDATE INT,
	@ESTADO_TRASLADADO INT = 334

	--En caso el tipo de documento sea DNI no debe permitirse modificar el valor ya que los datos se obtienen de la validación de RENIEC

	SET @TIPO_DOCUMENTO = (SELECT ID_TIPO_DOCUMENTO FROM maestro.persona WHERE ID_PERSONA = @ID_PERSONA)

	IF @TIPO_DOCUMENTO = 26
	BEGIN
		SET @ESTADO_CIVIL_UPDATE = (SELECT ESTADO_CIVIL FROM maestro.persona_institucion WHERE ID_PERSONA_INSTITUCION = @ID_PERSONA_INSTITUCION)
	END
	ELSE
	BEGIN
		SET @ESTADO_CIVIL_UPDATE = @ESTADO_CIVIL
	END

	SET @ID_TURNO =(SELECT mte.ID_TURNO FROM maestro.turnos_por_institucion mti
	INNER JOIN maestro.turno_equivalencia mte on mti.ID_TURNO_EQUIVALENCIA= mte.ID_TURNO_EQUIVALENCIA and mti.ES_ACTIVO=1
	WHERE mti.ID_TURNOS_POR_INSTITUCION= @ID_TURNOS_POR_INSTITUCION)

	IF EXISTS ( SELECT TOP 1 tei.ID_ESTUDIANTE_INSTITUCION FROM maestro.persona mp 
				INNER JOIN maestro.persona_institucion mpi on mp.ID_PERSONA=mpi.ID_PERSONA
				inner join transaccional.estudiante_institucion tei on tei.ID_PERSONA_INSTITUCION= mpi.ID_PERSONA_INSTITUCION and tei.ES_ACTIVO=1
				inner join transaccional.carreras_por_institucion_detalle tcid on tcid.ID_CARRERAS_POR_INSTITUCION_DETALLE= tei.ID_CARRERAS_POR_INSTITUCION_DETALLE and tcid.ES_ACTIVO=1
				inner join transaccional.carreras_por_institucion tci on tci.ID_CARRERAS_POR_INSTITUCION= tcid.ID_CARRERAS_POR_INSTITUCION and tci.ES_ACTIVO=1
				inner join maestro.turnos_por_institucion mtxi on mtxi.ID_TURNOS_POR_INSTITUCION= tei.ID_TURNOS_POR_INSTITUCION and mtxi.ES_ACTIVO=1
				inner join maestro.turno_equivalencia mte on mte.ID_TURNO_EQUIVALENCIA= mtxi.ID_TURNO_EQUIVALENCIA
				inner join transaccional.plan_estudio pestudio on tei.ID_PLAN_ESTUDIO = pestudio.ID_PLAN_ESTUDIO
				WHERE mp.ID_TIPO_DOCUMENTO=@ID_TIPO_DOCUMENTO AND mp.NUMERO_DOCUMENTO_PERSONA=@NUMERO_DOCUMENTO_PERSONA
				and tci.ID_CARRERA=@ID_CARRERA and mte.ID_TURNO=@ID_TURNO AND mpi.ID_INSTITUCION = @ID_INSTITUCION

				AND pestudio.ID_TIPO_ITINERARIO=@ID_TIPO_ITINERARIO
				AND pestudio.ID_PLAN_ESTUDIO=@ID_PLAN_ESTUDIO
				AND tei.ES_ACTIVO=1 AND tcid.ES_ACTIVO = 1 AND tci.ES_ACTIVO=1 AND pestudio.ES_ACTIVO=1 
				AND tei.ID_ESTUDIANTE_INSTITUCION <> @ID_ESTUDIANTE_INSTITUCION
	) 
		SET @RESULT=-233
	--ELSE IF EXISTS (select top 1 ei.ID_ESTUDIANTE_INSTITUCION from maestro.persona p
	--	inner join maestro.persona_institucion pin on p.ID_PERSONA = pin.ID_PERSONA 
	--	inner join transaccional.estudiante_institucion ei on ei.ID_PERSONA_INSTITUCION = pin.ID_PERSONA_INSTITUCION and ei.ES_ACTIVO=1
	--	AND ei.ESTADO <> @ESTADO_TRASLADADO
	--	inner join transaccional.plan_estudio pe on pe.ID_PLAN_ESTUDIO = ei.ID_PLAN_ESTUDIO and pe.ES_ACTIVO=1
	--	inner join transaccional.carreras_por_institucion ci on ci.ID_CARRERAS_POR_INSTITUCION = pe.ID_CARRERAS_POR_INSTITUCION and ci.ES_ACTIVO=1
	--	WHERE p.NUMERO_DOCUMENTO_PERSONA =@NUMERO_DOCUMENTO_PERSONA AND p.ID_TIPO_DOCUMENTO = @ID_TIPO_DOCUMENTO
	--	and ci.ID_CARRERA = @ID_CARRERA AND ei.ID_ESTUDIANTE_INSTITUCION<> @ID_ESTUDIANTE_INSTITUCION)
	--		SET @RESULT = -198
	ELSE
	BEGIN
		DECLARE
		@ID_CARRERAS_POR_INSTITUCION_DETALLE INT
		BEGIN TRY
		BEGIN TRANSACTION T1	
			DECLARE @REGISTRO_EXISTE BIT = 0, @ID_INSTITUCION_BASICA_PREVIO INT 
						
		
	IF  @ID_TIPO_INSTITUCION_BASICA = 70   -- IE BÁSICA EBR 
			AND EXISTS (SELECT TOP 1 ID_INSTITUCION_BASICA FROM maestro.institucion_basica (NOLOCK)
									WHERE ID_TIPO_INSTITUCION_BASICA = @ID_TIPO_INSTITUCION_BASICA AND CODIGO_MODULAR_IE_BASICA = @CODIGO_MODULAR
									AND ID_PAIS = @ID_PAIS_BASICA AND ID_NIVEL_IE_BASICA=@ID_NIVEL_IE_BASICA 
									AND ID_TIPO_GESTION_IE_BASICA= @ID_TIPO_GESTION_IE_BASICA)
									SET @REGISTRO_EXISTE =1
			
			IF @ID_INSTITUCION_BASICA = 0 --Indica que ha habido un cambio de código modular
			BEGIN
				--Eliminar el registro previo (eba)
				SET @ID_INSTITUCION_BASICA_PREVIO = (SELECT TOP 1 ID_INSTITUCION_BASICA FROM transaccional.estudiante_institucion WHERE ID_ESTUDIANTE_INSTITUCION = @ID_ESTUDIANTE_INSTITUCION AND ES_ACTIVO=1)
				UPDATE maestro.institucion_basica set ESTADO=0, USUARIO_MODIFICACION=@USUARIO, FECHA_MODIFICACION= GETDATE()  where ID_INSTITUCION_BASICA= @ID_INSTITUCION_BASICA_PREVIO and ID_TIPO_INSTITUCION_BASICA<>70
				IF @REGISTRO_EXISTE = 0

				BEGIN
					INSERT INTO maestro.institucion_basica(
						ID_TIPO_INSTITUCION_BASICA,
						CODIGO_MODULAR_IE_BASICA,
						NOMBRE_IE_BASICA,
						ID_NIVEL_IE_BASICA,
						ID_TIPO_GESTION_IE_BASICA,
						DIRECCION_IE_BASICA,
						ID_PAIS,
						UBIGEO_IE_BASICA,
						ESTADO,
						USUARIO_CREACION,
						FECHA_CREACION
					)VALUES(
						@ID_TIPO_INSTITUCION_BASICA,
						@CODIGO_MODULAR,
						@NOMBRE_IE_BASICA,
						@ID_NIVEL_IE_BASICA,
						@ID_TIPO_GESTION_IE_BASICA,
						@DIRECCION_IE_BASICA,
						@ID_PAIS_BASICA,
						RIGHT(REPLICATE('0',6) + @UBIGEO_IE_BASICA,6),
						1,
						@USUARIO,
						GETDATE()
					)

					SET @ID_INSTITUCION_BASICA = CONVERT(INT,@@IDENTITY)			
				END
				ELSE
				BEGIN
					SET @ID_INSTITUCION_BASICA = (SELECT TOP 1 ID_INSTITUCION_BASICA FROM maestro.institucion_basica (NOLOCK)
									WHERE ID_TIPO_INSTITUCION_BASICA = @ID_TIPO_INSTITUCION_BASICA AND CODIGO_MODULAR_IE_BASICA = @CODIGO_MODULAR						
									AND ID_PAIS = @ID_PAIS_BASICA AND ID_NIVEL_IE_BASICA=@ID_NIVEL_IE_BASICA 
									AND ID_TIPO_GESTION_IE_BASICA= @ID_TIPO_GESTION_IE_BASICA)

					UPDATE maestro.institucion_basica
					SET NOMBRE_IE_BASICA = @NOMBRE_IE_BASICA,
						ID_NIVEL_IE_BASICA = @ID_NIVEL_IE_BASICA,
						ID_TIPO_GESTION_IE_BASICA = @ID_TIPO_GESTION_IE_BASICA,
						DIRECCION_IE_BASICA = @DIRECCION_IE_BASICA,
						UBIGEO_IE_BASICA = RIGHT(REPLICATE('0',6) + @UBIGEO_IE_BASICA,6),
						USUARIO_MODIFICACION = @USUARIO,
						FECHA_MODIFICACION = GETDATE()
					WHERE 
						ID_INSTITUCION_BASICA = @ID_INSTITUCION_BASICA			
				
				END
			END
			ELSE
			BEGIN
				UPDATE maestro.institucion_basica
				SET ID_TIPO_INSTITUCION_BASICA = @ID_TIPO_INSTITUCION_BASICA,
					CODIGO_MODULAR_IE_BASICA = @CODIGO_MODULAR,
					NOMBRE_IE_BASICA = @NOMBRE_IE_BASICA,
					ID_NIVEL_IE_BASICA = @ID_NIVEL_IE_BASICA,
					ID_TIPO_GESTION_IE_BASICA = @ID_TIPO_GESTION_IE_BASICA,
					DIRECCION_IE_BASICA = @DIRECCION_IE_BASICA,
					UBIGEO_IE_BASICA = RIGHT(REPLICATE('0',6) + @UBIGEO_IE_BASICA,6),

					USUARIO_MODIFICACION = @USUARIO,
					FECHA_MODIFICACION = GETDATE()
				WHERE 
					ID_INSTITUCION_BASICA = @ID_INSTITUCION_BASICA						
			END			

			IF @ID_TIPO_DOCUMENTO <> 26
			BEGIN
				UPDATE maestro.persona
				SET NOMBRE_PERSONA=@NOMBRE_PERSONA,
				APELLIDO_PATERNO_PERSONA=@APELLIDO_PATERNO_PERSONA,
				APELLIDO_MATERNO_PERSONA=@APELLIDO_MATERNO_PERSONA,
				SEXO_PERSONA = @SEXO_PERSONA ,
				FECHA_NACIMIENTO_PERSONA=@FECHA_NACIMIENTO_PERSONA,
				ID_LENGUA_MATERNA=@ID_LENGUA_MATERNA,
				ES_DISCAPACITADO=@ES_DISCAPACITADO,
				PAIS_NACIMIENTO=@PAIS_NACIMIENTO,
				UBIGEO_NACIMIENTO=RIGHT(REPLICATE('0',6) + @UBIGEO_NACIMIENTO,6)
				WHERE ID_PERSONA= @ID_PERSONA
			END
			ELSE
			BEGIN
				UPDATE maestro.persona
				SET
				NOMBRE_PERSONA=(CASE @ACTUALIZA_DATOS_PERS WHEN 1 THEN @NOMBRE_PERSONA ELSE NOMBRE_PERSONA END),
				APELLIDO_PATERNO_PERSONA=(CASE @ACTUALIZA_DATOS_PERS WHEN 1 THEN @APELLIDO_PATERNO_PERSONA ELSE APELLIDO_PATERNO_PERSONA END),
				APELLIDO_MATERNO_PERSONA=(CASE @ACTUALIZA_DATOS_PERS WHEN 1 THEN @APELLIDO_MATERNO_PERSONA ELSE APELLIDO_MATERNO_PERSONA END),
				SEXO_PERSONA = (CASE @ACTUALIZA_DATOS_PERS WHEN 1 THEN @SEXO_PERSONA ELSE SEXO_PERSONA END),
				FECHA_NACIMIENTO_PERSONA=(CASE @ACTUALIZA_DATOS_PERS WHEN 1 THEN @FECHA_NACIMIENTO_PERSONA ELSE FECHA_NACIMIENTO_PERSONA END),
				ID_LENGUA_MATERNA=@ID_LENGUA_MATERNA,
				ES_DISCAPACITADO=@ES_DISCAPACITADO		
				WHERE ID_PERSONA= @ID_PERSONA
			END


			UPDATE maestro.persona_institucion
			SET 
				ESTADO_CIVIL = @ESTADO_CIVIL_UPDATE,
				PAIS_PERSONA = @PAIS_PERSONA,
				UBIGEO_PERSONA = RIGHT(REPLICATE('0',6) + @UBIGEO_PERSONA,6),
				DIRECCION_PERSONA = @DIRECCION_PERSONA,
				TELEFONO = @TELEFONO,
				CELULAR = @CELULAR,
				CORREO = @CORREO,
				ID_TIPO_DISCAPACIDAD = @ID_TIPO_DISCAPACIDAD,
				ESTADO = 1,
				USUARIO_MODIFICACION = @USUARIO,
				FECHA_MODIFICACION = GETDATE()
			WHERE ID_PERSONA_INSTITUCION = @ID_PERSONA_INSTITUCION
			SET @ID_CARRERAS_POR_INSTITUCION_DETALLE = (SELECT 
																CXID.ID_CARRERAS_POR_INSTITUCION_DETALLE 
															FROM transaccional.carreras_por_institucion_detalle CXID 
																INNER JOIN transaccional.carreras_por_institucion CXI ON CXI.ID_CARRERAS_POR_INSTITUCION= CXID.ID_CARRERAS_POR_INSTITUCION 
							
																						 AND CXI.ES_ACTIVO=1 
															WHERE
																CXID.ID_SEDE_INSTITUCION=@ID_SEDE_INSTITUCION 
																AND CXID.ES_ACTIVO=1 
																AND CXI.ID_CARRERA=@ID_CARRERA
																AND CXI.ID_TIPO_ITINERARIO=@ID_TIPO_ITINERARIO)	
			UPDATE transaccional.estudiante_institucion
			SET --ID_PERSONA_INSTITUCION = @ID_PERSONA_INSTITUCION 
				ID_PERIODOS_LECTIVOS_POR_INSTITUCION =@ID_PERIODO_LECTIVO_INSTITUCION,
				ID_INSTITUCION_BASICA = @ID_INSTITUCION_BASICA 
,
				ID_CARRERAS_POR_INSTITUCION_DETALLE  = @ID_CARRERAS_POR_INSTITUCION_DETALLE,
				ID_TURNOS_POR_INSTITUCION = @ID_TURNOS_POR_INSTITUCION,
				ID_SEMESTRE_ACADEMICO = @ID_SEMESTRE_ACADEMICO,
				ID_TIPO_ESTUDIANTE = @ID_TIPO_ESTUDIANTE,
				ID_TIPO_DOCUMENTO_APODERADO = @ID_TIPO_DOCUMENTO_APODERADO,
				NUMERO_DOCUMENTO_APODERADO = @NUMERO_DOCUMENTO_APODERADO,
				NOMBRE_APODERADO=@NOMBRE_APODERADO,
				APELLIDO_APODERADO = @APELLIDO_APODERADO,
				ID_TIPO_PARENTESCO = @ID_TIPO_PARENTESCO,
				ANIO_EGRESO = @ANIO_EGRESO,
				ARCHIVO_FOTO = @ARCHIVO_FOTO,
				ARCHIVO_RUTA = @ARCHIVO_RUTA,
				ID_PLAN_ESTUDIO = @ID_PLAN_ESTUDIO, 
				ESTADO = (CASE @ACTUALIZA_ESTADO_REG WHEN 1 THEN 1 ELSE ESTADO END),
				USUARIO_MODIFICACION=@USUARIO,
				FECHA_MODIFICACION=GETDATE()
				WHERE ID_ESTUDIANTE_INSTITUCION=@ID_ESTUDIANTE_INSTITUCION

		
		COMMIT TRANSACTION T1		
			SET @RESULT = 1
		END TRY
		BEGIN CATCH	
			IF @@ERROR <> 0
			BEGIN
				ROLLBACK TRANSACTION T1	   
				SET @RESULT = -1
			END
			ELSE
				ROLLBACK TRANSACTION T1	   
		END CATCH
	END
SELECT @RESULT
GO


