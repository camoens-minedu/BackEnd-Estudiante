/**********************************************************************************************************
AUTOR				:	FERNANDO RAMOS C.
CREACION			:	16/04/2019
LLAMADO POR			:
DESCRIPCION			:	MODIFICA LOS DATOS DE UNA RESOLUCIÓN
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			13/09/2021		FRAMOS			CREACIÓN
1.1			07/02/2022		JCHAVEZ			ACTUALIZACIÓN DE LA VALICACIÓN -180

TEST:			
	EXEC USP_ADMISION_UPD_APERTURA_EVALUACION_POR_PERIODO_LECTIVO 443,1209,24,'20078244'
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_MAESTROS_UPD_RESOLUCION]
(
    @ID_RESOLUCION	int,
    @NUMERO_RESOLUCION nvarchar(50) ,
    @ARCHIVO_RESOLUCION nvarchar(50),
    @ID_TIPO_RESOLUCION int,
	--@ID_INSTITUCION	nvarchar(max), 
	@ID_INSTITUCION		INT,
	@ID_CARRERAS_INSTITUCION NVARCHAR(max),
	@ID_PERIODOS_LECTIVOS_POR_INSTITUCION int,
    --@ID_ESTADO	 int,
    @USUARIO nvarchar(20)
)
AS
DECLARE @RESULT INT, @ANIO INT
select @ANIO= mpl.ANIO from transaccional.periodos_lectivos_por_institucion tplxi 
inner join maestro.periodo_lectivo mpl on tplxi.ID_PERIODO_LECTIVO= mpl.ID_PERIODO_LECTIVO
where tplxi.ID_PERIODOS_LECTIVOS_POR_INSTITUCION=@ID_PERIODOS_LECTIVOS_POR_INSTITUCION

--IF EXISTS(SELECT TOP 1 r.ID_RESOLUCION FROM maestro.resolucion r WHERE r.ESTADO=1 AND r.NUMERO_RESOLUCION=@NUMERO_RESOLUCION AND r.ID_TIPO_RESOLUCION=@ID_TIPO_RESOLUCION AND ID_RESOLUCION <> @ID_RESOLUCION)
IF EXISTS(SELECT TOP 1 r.ID_RESOLUCION
			FROM maestro.resolucion r 
			INNER JOIN transaccional.resoluciones_por_carreras_por_institucion rc ON r.ID_RESOLUCION=rc.ID_RESOLUCION
			INNER JOIN transaccional.carreras_por_institucion ci ON rc.ID_CARRERAS_POR_INSTITUCION=ci.ID_CARRERAS_POR_INSTITUCION
			WHERE r.ESTADO=1 AND r.NUMERO_RESOLUCION=@NUMERO_RESOLUCION AND r.ID_TIPO_RESOLUCION=@ID_TIPO_RESOLUCION AND r.ID_RESOLUCION <> @ID_RESOLUCION
			AND ci.ID_INSTITUCION=@ID_INSTITUCION)
BEGIN 
    SET @RESULT = -180
END
ELSE IF (EXISTS(SELECT TOP 1 ID_RESOLUCION FROM maestro.resolucion WHERE ARCHIVO_RESOLUCION = @ARCHIVO_RESOLUCION AND ES_ACTIVO=1 AND ESTADO=1 AND ID_RESOLUCION<>@ID_RESOLUCION ))
	SET @RESULT = -260
ELSE
BEGIN 
	--SET @RESULT = (SELECT ISNULL((SELECT TOP 1 c.ID_INSTITUCION FROM transaccional.meta_carrera_institucion a
	--					INNER JOIN transaccional.resoluciones_por_periodo_lectivo_institucion b ON a.ID_RESOLUCIONES_POR_PERIODO_LECTIVO_INSTITUCION = b.ID_RESOLUCIONES_POR_PERIODO_LECTIVO_INSTITUCION
	--					INNER JOIN transaccional.periodos_lectivos_por_institucion c ON c.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = b.ID_PERIODOS_LECTIVOS_POR_INSTITUCION
	--					WHERE b.ID_RESOLUCION = @ID_RESOLUCION AND c.ID_INSTITUCION NOT IN (SELECT SplitData FROM dbo.UFN_SPLIT(UPPER(@ID_INSTITUCION), ','))
	--					AND a.META > 0 AND b.ES_ACTIVO = 1 AND a.ES_ACTIVO = 1 AND c.ES_ACTIVO = 1),0))

	BEGIN TRANSACTION T1
		BEGIN TRY
			--IF @RESULT = 0			
			--BEGIN
				UPDATE [maestro].[resolucion]
				SET 
					[NUMERO_RESOLUCION] = @NUMERO_RESOLUCION
					,[ARCHIVO_RESOLUCION] = @ARCHIVO_RESOLUCION
					,[ID_TIPO_RESOLUCION] = @ID_TIPO_RESOLUCION     
					--,[ESTADO] = @ID_ESTADO
					,[FECHA_MODIFICACION] = getdate()
					,[USUARIO_MODIFICACION] = @USUARIO
				WHERE [ID_RESOLUCION] = @ID_RESOLUCION					
				--EXEC [USP_ADMISION_INS_RESOLUCION_INSTITUCION_MASIVO] @ID_INSTITUCION,@ID_RESOLUCION,@ANIO,@ID_TIPO_RESOLUCION,@USUARIO
				--SET @RESULT = (
				--EXEC [USP_ADMISION_INS_RESOLUCION_CARRERAS_INSTITUCION_MASIVO] @ID_CARRERAS_INSTITUCION,@ID_TIPO_RESOLUCION, @ID_RESOLUCION, @USUARIO --)
				PRINT 'ANTES'
				EXECUTE @RESULT = [USP_ADMISION_INS_RESOLUCION_CARRERAS_INSTITUCION_MASIVO] @ID_CARRERAS_INSTITUCION,@ID_TIPO_RESOLUCION, @ID_RESOLUCION, @USUARIO				
				--SET @RESULT = 1
				PRINT 'PRIMER RESULTA:' + CONVERT (VARCHAR(5),@RESULT)
				COMMIT TRANSACTION T1				
			--END			
		END TRY	   
		BEGIN CATCH
			IF @@ERROR<>0
			BEGIN
				ROLLBACK TRANSACTION T1	 
				PRINT ERROR_MESSAGE()  
				SET @RESULT = - 1				
			END
		END CATCH    
END
SELECT @RESULT
GO


