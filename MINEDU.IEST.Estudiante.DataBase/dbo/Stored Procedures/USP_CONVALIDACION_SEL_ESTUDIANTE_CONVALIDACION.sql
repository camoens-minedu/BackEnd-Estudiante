/**********************************************************************************************************
AUTOR				:	Mayra Alva
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Consulta la situación del estudiante con respecto a convalidación.
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			15/01/2020		MALVA			SE OBTIENE LA COLUMNA PlanEstudios
1.1			21/10/2021		JCHAVEZ			Se agregó ORDER BY para obtener el último registro para la convalidación
1.2			14/02/2022		JCHAVEZ			Se cambió INNER por LEFT en las tablas persona_institucion y estudiante_institucion			

TEST:			
	USP_CONVALIDACION_SEL_ESTUDIANTE_CONVALIDACION 1911, 26, '70557820'
	USP_CONVALIDACION_SEL_ESTUDIANTE_CONVALIDACION 1911, 26, '71210166'
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_CONVALIDACION_SEL_ESTUDIANTE_CONVALIDACION]
(  
 @ID_INSTITUCION INT,
 @ID_TIPO_DOCUMENTO INT,
 @NUMERO_DOCUMENTO_PERSONA VARCHAR(16)
)  
AS  
BEGIN  
	SET NOCOUNT ON;  
	DECLARE 
			@ID_TIPO_CONVALIDACION_TRASLADO_INTERNO	INT =194,
			@ID_TIPO_CONVALIDACION_TRASLADO_EXTERNO	INT =197,			
			@ID_TIPO_TRASLADO_INTERNO	INT =141,
			@ID_TIPO_TRASLADO_EXTERNO	INT =142
	SELECT 
		MP.ID_PERSONA						IdPersona,
		MP.APELLIDO_PATERNO_PERSONA			ApPaterno,
		MP.APELLIDO_MATERNO_PERSONA			ApMaterno,
		MP.NOMBRE_PERSONA					Nombres,
		MP.APELLIDO_PATERNO_PERSONA + ' ' +MP.APELLIDO_MATERNO_PERSONA +', '  + dbo.UFN_CAPITALIZAR(MP.NOMBRE_PERSONA) Estudiante,
		CASE WHEN A.IdEstudianteInstitucionPropio IS NOT NULL THEN A.IdEstudianteInstitucionPropio ELSE 0 END IdEstudianteInstitucionPropio,
		CASE WHEN B.IdEstudianteInstitucionDeTraslado IS NOT NULL THEN B.IdEstudianteInstitucionDeTraslado ELSE 0 END IdEstudianteInstitucionDeTraslado,
		B.ID_TRASLADO_ESTUDIANTE			IdTrasladoEstudiante,
		(	SELECT SI.ID_SEDE_INSTITUCION 
			FROM maestro.sede_institucion SI 
			WHERE SI.ID_SEDE_INSTITUCION=(CASE WHEN B.ID_SEDE_INSTITUCION IS NOT NULL THEN B.ID_SEDE_INSTITUCION ELSE A.ID_SEDE_INSTITUCION END ) 
		)	IdSedeInstitucion, 	
		(	SELECT SI.NOMBRE_SEDE 
			FROM maestro.sede_institucion SI 
			WHERE SI.ID_SEDE_INSTITUCION=(CASE WHEN B.ID_SEDE_INSTITUCION IS NOT NULL THEN B.ID_SEDE_INSTITUCION ELSE A.ID_SEDE_INSTITUCION END ) 
		)	SedeInstitucion, 	
		CASE 
			WHEN B.ID_CARRERAS_POR_INSTITUCION IS NOT NULL 
						THEN (	SELECT 
									C.ID_CARRERA 
							FROM 
									transaccional.carreras_por_institucion CI 
							INNER JOIN db_auxiliar.dbo.UVW_CARRERA C	ON C.ID_CARRERA= CI.ID_CARRERA AND CI.ES_ACTIVO=1 
															AND CI.ID_CARRERAS_POR_INSTITUCION=B.ID_CARRERAS_POR_INSTITUCION 
						 ) 
			WHEN A.ID_CARRERAS_POR_INSTITUCION IS NOT NULL 
					THEN (	SELECT 
									C.ID_CARRERA 
							FROM 
									db_auxiliar.dbo.UVW_CARRERA C	WHERE C.ID_CARRERA= A.ID_CARRERA														
						 ) 
			 ELSE 0
			 END	IdCarrera,	
		CASE 
			WHEN B.ID_CARRERAS_POR_INSTITUCION IS NOT NULL 
						THEN (	SELECT 
									C.NOMBRE_CARRERA 
							FROM 
									transaccional.carreras_por_institucion CI 
							INNER JOIN db_auxiliar.dbo.UVW_CARRERA C	ON C.ID_CARRERA= CI.ID_CARRERA AND CI.ES_ACTIVO=1 
															AND CI.ID_CARRERAS_POR_INSTITUCION=B.ID_CARRERAS_POR_INSTITUCION 
						 ) 
			WHEN A.ID_CARRERAS_POR_INSTITUCION IS NOT NULL 
					THEN (	SELECT 
									C.NOMBRE_CARRERA 
							FROM 
									db_auxiliar.dbo.UVW_CARRERA C	WHERE C.ID_CARRERA= A.ID_CARRERA														
						 ) 
			 ELSE '' 
			 END	ProgramaEstudios,	
		(	SELECT VALOR_ENUMERADO 
			FROM sistema.enumerado 
			WHERE ID_ENUMERADO= (CASE WHEN B.ID_TIPO_ITINERARIO IS NOT NULL THEN B.ID_TIPO_ITINERARIO ELSE A.ID_TIPO_ITINERARIO END) 
		)	TipoItinerario,
		CASE WHEN B.ID_PLAN_ESTUDIO IS NOT NULL
				  THEN  (SELECT tpe.NOMBRE_PLAN_ESTUDIOS FROM transaccional.plan_estudio tpe WHERE tpe.ID_PLAN_ESTUDIO=B.ID_PLAN_ESTUDIO )
				  ELSE	(SELECT tpe.NOMBRE_PLAN_ESTUDIOS FROM transaccional.plan_estudio tpe WHERE tpe.ID_PLAN_ESTUDIO=A.ID_PLAN_ESTUDIO ) END PlanEstudios,
		CASE WHEN B.ID_TRASLADO_ESTUDIANTE IS NOT NULL
			THEN	(
					
						SELECT CASE WHEN ID_TIPO_TRASLADO = @ID_TIPO_TRASLADO_INTERNO 
						THEN  @ID_TIPO_CONVALIDACION_TRASLADO_INTERNO
						ELSE @ID_TIPO_CONVALIDACION_TRASLADO_EXTERNO
						END 
						FROM transaccional.traslado_estudiante where ID_TRASLADO_ESTUDIANTE=B.ID_TRASLADO_ESTUDIANTE AND ES_ACTIVO=1					
					)
			ELSE 0 END  IdTipoConvalidacion,
		CASE WHEN A.ID_TURNOS_POR_INSTITUCION IS NOT NULL 
		THEN A.ID_TURNOS_POR_INSTITUCION 
		ELSE 0	END		IdTurnoInstitucion,
		ISNULL(A.ID_LIBERACION_ESTUDIANTE, 0) IdLiberacionEstudiante,
		A.ID_CARRERAS_POR_INSTITUCION  colA, 
		B.ID_CARRERAS_POR_INSTITUCION  colB, 
		CASE WHEN B.ID_TRASLADO_ESTUDIANTE IS NULL THEN A.ID_SEMESTRE_ACADEMICO ELSE 0 END IdSemestreAcademico
		FROM maestro.persona MP	
		LEFT JOIN maestro.persona_institucion PINS ON MP.ID_PERSONA = PINS.ID_PERSONA AND PINS.ESTADO=1 AND PINS.ID_INSTITUCION = @ID_INSTITUCION
		LEFT JOIN transaccional.estudiante_institucion EI ON EI.ID_PERSONA_INSTITUCION= PINS.ID_PERSONA_INSTITUCION AND EI.ES_ACTIVO=1
		LEFT JOIN (SELECT	TEI.ID_ESTUDIANTE_INSTITUCION IdEstudianteInstitucionPropio, 
							ID_PERSONA,
							TCID.ID_SEDE_INSTITUCION,
							TCID.ID_CARRERAS_POR_INSTITUCION,
							TCI.ID_TIPO_ITINERARIO,
							TCI.ID_CARRERA,
							TEI.ID_TURNOS_POR_INSTITUCION,
							TLE.ID_LIBERACION_ESTUDIANTE,
							TEI.ID_SEMESTRE_ACADEMICO,
							TEI.ID_PLAN_ESTUDIO
					FROM maestro.persona_institucion MPI
						INNER JOIN transaccional.estudiante_institucion TEI ON TEI.ID_PERSONA_INSTITUCION= MPI.ID_PERSONA_INSTITUCION AND TEI.ES_ACTIVO=1
						AND MPI.ID_INSTITUCION=@ID_INSTITUCION
						INNER JOIN transaccional.carreras_por_institucion_detalle TCID ON TCID.ID_CARRERAS_POR_INSTITUCION_DETALLE = TEI.ID_CARRERAS_POR_INSTITUCION_DETALLE 				
						AND TCID.ES_ACTIVO=1						
						INNER JOIN transaccional.carreras_por_institucion TCI ON TCI.ID_CARRERAS_POR_INSTITUCION= TCID.ID_CARRERAS_POR_INSTITUCION AND TCI.ES_ACTIVO=1
						LEFT JOIN transaccional.liberacion_estudiante TLE ON TLE.ID_ESTUDIANTE_INSTITUCION= TEI.ID_ESTUDIANTE_INSTITUCION AND TLE.ES_ACTIVO=1
					)A ON A.ID_PERSONA= MP.ID_PERSONA
		LEFT JOIN (SELECT	TTE.ID_ESTUDIANTE_INSTITUCION IdEstudianteInstitucionDeTraslado,
							MPI.ID_PERSONA, 
							TTE.ID_TRASLADO_ESTUDIANTE ,
							TSAE.ID_SEDE_INSTITUCION,
							TPE.ID_CARRERAS_POR_INSTITUCION,
							TPE.ID_TIPO_ITINERARIO,
							TSAE.ID_PLAN_ESTUDIO
					FROM transaccional.traslado_estudiante TTE 
						INNER JOIN transaccional.estudiante_institucion TEI ON TEI.ID_ESTUDIANTE_INSTITUCION= TTE.ID_ESTUDIANTE_INSTITUCION AND TEI.ES_ACTIVO=1 AND TTE.ES_ACTIVO=1				
						INNER JOIN maestro.persona_institucion MPI ON MPI.ID_PERSONA_INSTITUCION= TEI.ID_PERSONA_INSTITUCION 
						INNER JOIN transaccional.situacion_academica_estudiante TSAE ON TSAE.ID_SITUACION_ACADEMICA_ESTUDIANTE= TTE.ID_SITUACION_ACADEMICA_DESTINO AND TSAE.ES_ACTIVO=1
						INNER JOIN transaccional.plan_estudio TPE ON TPE.ID_PLAN_ESTUDIO= TSAE.ID_PLAN_ESTUDIO AND TPE.ES_ACTIVO=1
					) B ON B.ID_PERSONA =MP.ID_PERSONA 
	WHERE 	MP.ID_TIPO_DOCUMENTO=@ID_TIPO_DOCUMENTO and MP.NUMERO_DOCUMENTO_PERSONA=@NUMERO_DOCUMENTO_PERSONA 
	AND (A.ID_SEDE_INSTITUCION IS NOT NULL OR B.ID_SEDE_INSTITUCION IS NOT NULL)
	ORDER BY IdEstudianteInstitucionPropio DESC, IdEstudianteInstitucionDeTraslado DESC
END
GO


