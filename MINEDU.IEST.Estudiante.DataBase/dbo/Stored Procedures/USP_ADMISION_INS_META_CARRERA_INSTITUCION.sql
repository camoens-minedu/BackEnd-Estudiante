/**********************************************************************************************************
AUTOR				:	Juan Tovar
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Inserta un registro de la meta para una carrera de la institución
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------

**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_ADMISION_INS_META_CARRERA_INSTITUCION]
(
@ID_INSTITUCION						INT,
@ID_PERIODO_LECTIVO_INSTITUCION		INT, 
@METAS_CARRERA_INSTITUCION			nvarchar(max),
@USUARIO							VARCHAR(20)
)
AS
BEGIN
BEGIN TRY
BEGIN TRANSACTION T1
	
	DECLARE @ANIO INT

	SET @ANIO = (SELECT mpl.ANIO FROM transaccional.periodos_lectivos_por_institucion tplxi
				INNER JOIN maestro.periodo_lectivo mpl on tplxi.ID_PERIODO_LECTIVO= mpl.ID_PERIODO_LECTIVO
				WHERE ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION)

	
	MERGE INTO transaccional.meta_carrera_institucion AS TARGET
		USING (

			SELECT 
					SUBSTRING (SplitData, 0, CHARINDEX(':', SplitData)) ID_TURNOS_POR_INSTITUCION,
					SUBSTRING (SplitData, CHARINDEX(':', SplitData)+1, CHARINDEX(';', SplitData) -  CHARINDEX(':', SplitData)-1) ID_RESOLUCIONES_POR_PERIODO_LECTIVO_INSTITUCION,
					SUBSTRING (SplitData, CHARINDEX(';', SplitData)+1, CHARINDEX('#', SplitData) -  CHARINDEX(';', SplitData)-1) ID_CARRERAS_POR_INSTITUCION,
					SUBSTRING (SplitData, CHARINDEX('#', SplitData)+1, LEN(SplitData)-  CHARINDEX('#', SplitData)) META
					FROM dbo.UFN_SPLIT(@METAS_CARRERA_INSTITUCION, '|')

		) AS SOURCE ON TARGET.ID_TURNOS_POR_INSTITUCION = SOURCE.ID_TURNOS_POR_INSTITUCION		
		AND TARGET.ID_RESOLUCIONES_POR_PERIODO_LECTIVO_INSTITUCION 	= SOURCE.ID_RESOLUCIONES_POR_PERIODO_LECTIVO_INSTITUCION
		AND TARGET.ID_CARRERAS_POR_INSTITUCION = SOURCE.ID_CARRERAS_POR_INSTITUCION 
		WHEN MATCHED 
		THEN
			UPDATE
			--SET ES_ACTIVO = (CASE WHEN SOURCE.META >0 THEN 1 ELSE 0 END),
				SET ESTADO =(CASE WHEN SOURCE.META >0 THEN 1 ELSE 2 END), --PENDIENTE DE EVALUAR CON 2
				ES_ACTIVO = 1,
				META = ( CASE WHEN  SOURCE.META>0 THEN SOURCE.META ELSE TARGET.META END),								
				USUARIO_MODIFICACION = @USUARIO,
				FECHA_MODIFICACION = GETDATE()
		WHEN NOT MATCHED BY TARGET
		THEN
			INSERT (ID_TURNOS_POR_INSTITUCION, ID_RESOLUCIONES_POR_PERIODO_LECTIVO_INSTITUCION, ID_CARRERAS_POR_INSTITUCION, ANIO, META, ES_ACTIVO, ESTADO, USUARIO_CREACION,FECHA_CREACION)
			VALUES(
				SOURCE.ID_TURNOS_POR_INSTITUCION,
				SOURCE.ID_RESOLUCIONES_POR_PERIODO_LECTIVO_INSTITUCION,
				SOURCE.ID_CARRERAS_POR_INSTITUCION,
				@ANIO,
				SOURCE.META,
				1,
				1,	
				@USUARIO,
				GETDATE()		
			);

			UPDATE TABLA_META 
			SET TABLA_META.ES_ACTIVO=0, TABLA_META.ESTADO=1,  META=0
			FROM transaccional.meta_carrera_institucion TABLA_META
			WHERE TABLA_META.ID_META_CARRERA_INSTITUCION IN (
							SELECT MCI.ID_META_CARRERA_INSTITUCION 
							FROM  transaccional.meta_carrera_institucion MCI 
							LEFT JOIN transaccional.meta_carrera_institucion_detalle MCID ON MCID.ID_META_CARRERA_INSTITUCION= MCI.ID_META_CARRERA_INSTITUCION 
							AND MCID.ES_ACTIVO=1 AND MCI.ESTADO=2			
							GROUP BY MCI.ID_META_CARRERA_INSTITUCION
							HAVING COUNT (MCID.ID_META_CARRERA_INSTITUCION_DETALLE)>0)

			UPDATE transaccional.meta_carrera_institucion SET ESTADO=1 WHERE ESTADO=2

	COMMIT TRANSACTION T1
	SELECT 1
END TRY
BEGIN CATCH
    IF @@ERROR<>0
    BEGIN
	   ROLLBACK TRANSACTION T1	 
	   PRINT ERROR_MESSAGE()  
	   SELECT -1
	   PRINT @@ERROR
    END
END CATCH
END
GO


