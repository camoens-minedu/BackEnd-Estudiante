/**********************************************************************************************************
AUTOR				:	Mayra Alva
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Obtiene los datos detallados que se muestran en el reporte de nomina de matricula
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			20/06/2019		MALVA			CREACIÓN
2.0			29/01/2020		MALVA			SE REEMPLAZÓ @ID_TIPO_ITINERARIO POR @ID_PLAN_ESTUDIO
2.1			05/01/2021		JCHAVEZ			Corrección en condición @ID_SEDE_INSTITUCION para validar sede de la clase y no de la carrera
3.0			07/02/2022		JCHAVEZ			Se incluyeron datos de unidades didácticas convalidadas
3.1			14/02/2022		JCHAVEZ			Se incluyeron datos de estudiantes trasladados a modo histórico
4.0			28/02/2022		JCHAVEZ			Se incluyeron datos de evaluaciones extraordinarias y complementarias

TEST:			
	EXEC USP_MATRICULA_RPT_NOMINA_MATRICULA_DETALLE 10319,4221,1101,6043,2255,2898,10091,113,4306
	EXEC USP_MATRICULA_RPT_NOMINA_MATRICULA_DETALLE 3870,31,1171,2541,3733,33,105,112,4143
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_MATRICULA_RPT_NOMINA_MATRICULA_DETALLE]
(
	@ID_PERIODO_LECTIVO_INSTITUCION	INT,
	@ID_SEDE_INSTITUCION			INT,
	@ID_CARRERA						INT,
	@ID_PLAN_ESTUDIO				INT,
	@ID_PERIODO_ACADEMICO			INT,
	@ID_TURNO_INSTITUCION			INT,
	@ID_SECCION						INT,
	@ID_SEMESTRE_ACADEMICO			INT,
	@ID_PROGRAMACION_MATRICULA		INT
)
AS 
BEGIN

	SELECT DISTINCT
	E.ID_ESTUDIANTE_INSTITUCION,
	P.NUMERO_DOCUMENTO_PERSONA,
	P.APELLIDO_PATERNO_PERSONA,
	P.APELLIDO_MATERNO_PERSONA,
	P.NOMBRE_PERSONA,
	UPPER(P.APELLIDO_PATERNO_PERSONA) + ' ' +
	UPPER(P.APELLIDO_MATERNO_PERSONA) + ', ' + 
	dbo.UFN_CAPITALIZAR(P.NOMBRE_PERSONA)								NOMBRE_COMPLETO,
	LEFT(EN.VALOR_ENUMERADO,1)											SEXO,
	(SELECT (CONVERT(int,CONVERT(char(8),GETDATE(),112))-CONVERT(char(8),P.FECHA_NACIMIENTO_PERSONA,112))/10000) AS EDAD,
	(CASE WHEN P.ES_DISCAPACITADO IS NULL OR ES_DISCAPACITADO =0 
		THEN 'NO'
		ELSE 'SI'
		END
	) CON_DISCAPACIDAD,
	--PC.ID_PROGRAMACION_CLASE,
	TUD.NOMBRE_UNIDAD_DIDACTICA,
	 TUD.ID_UNIDAD_DIDACTICA,
	 --PC.ID_SECCION,	 
	CASE WHEN EXISTS (	--Matrículas regulares			
						SELECT TOP 1 UD.ID_UNIDAD_DIDACTICA FROM transaccional.matricula_estudiante ME									
						INNER JOIN transaccional.programacion_clase_por_matricula_estudiante PCXME ON ME.ID_MATRICULA_ESTUDIANTE =  PCXME.ID_MATRICULA_ESTUDIANTE AND PCXME.ES_ACTIVO=1
						INNER JOIN transaccional.programacion_clase tpc ON tpc.ID_PROGRAMACION_CLASE= PCXME.ID_PROGRAMACION_CLASE AND PC.ES_ACTIVO=1
						INNER JOIN transaccional.unidades_didacticas_por_programacion_clase UDXPC ON UDXPC.ID_PROGRAMACION_CLASE = PCXME.ID_PROGRAMACION_CLASE AND UDXPC.ES_ACTIVO=1
						INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO=1
						INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA= UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
						WHERE ME.ID_ESTUDIANTE_INSTITUCION=TME.ID_ESTUDIANTE_INSTITUCION 
							AND UD.ID_SEMESTRE_ACADEMICO=@ID_SEMESTRE_ACADEMICO 
							AND ME.ES_ACTIVO=1  
							AND UD.ID_UNIDAD_DIDACTICA= TUD.ID_UNIDAD_DIDACTICA 
							AND ME.ID_ESTUDIANTE_INSTITUCION=  TME.ID_ESTUDIANTE_INSTITUCION
							AND tpc.ID_PROGRAMACION_CLASE= PC.ID_PROGRAMACION_CLASE								 
										 
						) THEN 'SI' 
		WHEN EXISTS (	--Evaluación de EFSRT			
						SELECT TOP 1 UD.ID_UNIDAD_DIDACTICA FROM transaccional.matricula_estudiante ME									
						INNER JOIN transaccional.evaluacion_experiencia_formativa EEF ON EEF.ID_MATRICULA_ESTUDIANTE = ME.ID_MATRICULA_ESTUDIANTE AND EEF.ES_ACTIVO=1 AND EEF.NOTA IS NOT NULL
						INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = EEF.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO=1
						INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA= UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
						WHERE ME.ID_ESTUDIANTE_INSTITUCION=TME.ID_ESTUDIANTE_INSTITUCION 
							AND UD.ID_SEMESTRE_ACADEMICO=@ID_SEMESTRE_ACADEMICO 
							AND ME.ES_ACTIVO=1  
							AND UD.ID_UNIDAD_DIDACTICA= TUD.ID_UNIDAD_DIDACTICA								 
						) THEN 'SI' 
		WHEN EXISTS (	--Evaluaciones extraordinarias y complementarias
						SELECT TOP 1 UD.ID_UNIDAD_DIDACTICA FROM transaccional.matricula_estudiante ME	
						INNER JOIN transaccional.evaluacion_extraordinaria EEX ON EEX.ID_ESTUDIANTE_INSTITUCION = ME.ID_ESTUDIANTE_INSTITUCION AND ME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = EEX.ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND EEX.ES_ACTIVO=1
						INNER JOIN transaccional.evaluacion_extraordinaria_detalle EEXD ON EEX.ID_EVALUACION_EXTRAORDINARIA = EEXD.ID_EVALUACION_EXTRAORDINARIA AND EEXD.ES_ACTIVO=1
						INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA= EEXD.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
						WHERE ME.ID_ESTUDIANTE_INSTITUCION=TME.ID_ESTUDIANTE_INSTITUCION
							AND UD.ID_SEMESTRE_ACADEMICO=@ID_SEMESTRE_ACADEMICO  
							AND ME.ES_ACTIVO=1
							AND UD.ID_UNIDAD_DIDACTICA= TUD.ID_UNIDAD_DIDACTICA					 
						) THEN 'SI'
		WHEN EXISTS (	--versión 3.0		
						SELECT TOP 1 UD.ID_UNIDAD_DIDACTICA FROM transaccional.matricula_estudiante ME	
						INNER JOIN transaccional.convalidacion C ON C.ID_ESTUDIANTE_INSTITUCION = ME.ID_ESTUDIANTE_INSTITUCION AND ME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = C.ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND C.ES_ACTIVO=1
						INNER JOIN transaccional.convalidacion_detalle CD ON CD.ID_CONVALIDACION = C.ID_CONVALIDACION AND CD.ES_ACTIVO=1 AND CD.NOTA IS NOT NULL
						INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA= CD.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
						WHERE ME.ID_ESTUDIANTE_INSTITUCION=TME.ID_ESTUDIANTE_INSTITUCION
							AND UD.ID_SEMESTRE_ACADEMICO=@ID_SEMESTRE_ACADEMICO 
							AND ME.ES_ACTIVO=1  
							AND UD.ID_UNIDAD_DIDACTICA= TUD.ID_UNIDAD_DIDACTICA								 
						) THEN 'C' ELSE 'NO' END MATRICULADO,
		/*CASE WHEN TME.ID_SEMESTRE_ACADEMICO > @ID_SEMESTRE_ACADEMICO THEN 'SUBSANACIÓN'
			WHEN TME.ID_SEMESTRE_ACADEMICO < @ID_SEMESTRE_ACADEMICO THEN 'ADELANTO'
			ELSE '' END		*/		
			'' OBSERVACIONES

	FROM transaccional.matricula_estudiante TME
	
	INNER JOIN transaccional.estudiante_institucion E 
																				ON TME.ID_ESTUDIANTE_INSTITUCION=E.ID_ESTUDIANTE_INSTITUCION AND (E.ES_ACTIVO=1 OR E.ESTADO=333)
	INNER JOIN transaccional.carreras_por_institucion_detalle CXID 
																				ON CXID.ID_CARRERAS_POR_INSTITUCION_DETALLE=E.ID_CARRERAS_POR_INSTITUCION_DETALLE
	INNER JOIN transaccional.carreras_por_institucion CXI 
																				ON CXI.ID_CARRERAS_POR_INSTITUCION= CXID.ID_CARRERAS_POR_INSTITUCION AND CXI.ES_ACTIVO=1
	INNER JOIN maestro.persona_institucion PINS 
																				ON PINS.ID_PERSONA_INSTITUCION=E.ID_PERSONA_INSTITUCION
	INNER JOIN maestro.persona P									
																				ON P.ID_PERSONA= PINS.ID_PERSONA
	INNER JOIN sistema.enumerado EN 
																				ON EN.ID_ENUMERADO= P.SEXO_PERSONA
	INNER JOIN transaccional.programacion_clase_por_matricula_estudiante TPCXME 
																				ON TME.ID_MATRICULA_ESTUDIANTE= TPCXME.ID_MATRICULA_ESTUDIANTE AND TPCXME.ES_ACTIVO=1
	INNER JOIN transaccional.programacion_clase PC 
																				ON PC.ID_PROGRAMACION_CLASE= TPCXME.ID_PROGRAMACION_CLASE AND PC.ES_ACTIVO=1 																				
	INNER JOIN transaccional.plan_estudio PE									ON PE.ID_PLAN_ESTUDIO= E.ID_PLAN_ESTUDIO AND PE.ES_ACTIVO=1
	INNER JOIN transaccional.modulo M											ON M.ID_PLAN_ESTUDIO= PE.ID_PLAN_ESTUDIO AND M.ES_ACTIVO=1
	INNER JOIN transaccional.unidad_didactica	TUD								ON TUD.ID_MODULO= M.ID_MODULO AND TUD.ES_ACTIVO=1 
	INNER JOIN
	(	SELECT ME.ID_ESTUDIANTE_INSTITUCION, TUD_CLASE.ID_SEMESTRE_ACADEMICO 
		FROM transaccional.matricula_estudiante ME
		INNER JOIN transaccional.programacion_clase_por_matricula_estudiante PCME ON PCME.ID_MATRICULA_ESTUDIANTE = ME.ID_MATRICULA_ESTUDIANTE AND PCME.ES_ACTIVO=1
		INNER JOIN transaccional.unidades_didacticas_por_programacion_clase TUDXPC ON PCME.ID_PROGRAMACION_CLASE = TUDXPC.ID_PROGRAMACION_CLASE AND TUDXPC.ES_ACTIVO=1
		INNER JOIN transaccional.unidades_didacticas_por_enfoque TUDXE ON TUDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = TUDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND TUDXE.ES_ACTIVO=1 
		INNER JOIN transaccional.unidad_didactica TUD_CLASE ON TUD_CLASE.ID_UNIDAD_DIDACTICA= TUDXE.ID_UNIDAD_DIDACTICA AND TUD_CLASE.ES_ACTIVO=1
		WHERE ME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION AND ME.ES_ACTIVO = 1
		UNION
		SELECT DISTINCT ME.ID_ESTUDIANTE_INSTITUCION,UD.ID_SEMESTRE_ACADEMICO
		FROM transaccional.matricula_estudiante ME
		INNER JOIN  transaccional.evaluacion_experiencia_formativa EEF ON EEF.ID_MATRICULA_ESTUDIANTE = ME.ID_MATRICULA_ESTUDIANTE AND EEF.ES_ACTIVO = 1
		INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = EEF.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO = 1
		INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA = UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO = 1
		WHERE ME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION AND ME.ES_ACTIVO = 1
		UNION
		SELECT DISTINCT EEX.ID_ESTUDIANTE_INSTITUCION,UD.ID_SEMESTRE_ACADEMICO
		FROM transaccional.evaluacion_extraordinaria EEX
		INNER JOIN transaccional.evaluacion_extraordinaria_detalle EEXD ON EEX.ID_EVALUACION_EXTRAORDINARIA = EEXD.ID_EVALUACION_EXTRAORDINARIA AND EEXD.ES_ACTIVO = 1
		INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA = EEXD.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO = 1
		WHERE EEX.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION AND EEX.ES_ACTIVO = 1
		UNION
		SELECT DISTINCT C.ID_ESTUDIANTE_INSTITUCION,UD.ID_SEMESTRE_ACADEMICO
		FROM transaccional.convalidacion C
		INNER JOIN transaccional.convalidacion_detalle CD ON CD.ID_CONVALIDACION = C.ID_CONVALIDACION AND CD.ES_ACTIVO = 1
		INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA = CD.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO = 1
		WHERE C.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION AND C.ES_ACTIVO = 1
	 ) SUBCONSULTA_SEMESTRE_MATRICULADO ON SUBCONSULTA_SEMESTRE_MATRICULADO.ID_ESTUDIANTE_INSTITUCION = TME.ID_ESTUDIANTE_INSTITUCION
	 AND TUD.ID_SEMESTRE_ACADEMICO = SUBCONSULTA_SEMESTRE_MATRICULADO.ID_SEMESTRE_ACADEMICO AND SUBCONSULTA_SEMESTRE_MATRICULADO.ID_SEMESTRE_ACADEMICO=@ID_SEMESTRE_ACADEMICO
	WHERE 
		TME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION	=	@ID_PERIODO_LECTIVO_INSTITUCION
		AND TME.ID_PERIODO_ACADEMICO				=	@ID_PERIODO_ACADEMICO
		AND CXI.ID_CARRERA							=	@ID_CARRERA
		AND PE.ID_PLAN_ESTUDIO						=	@ID_PLAN_ESTUDIO
		--AND CXID.ID_SEDE_INSTITUCION				=	@ID_SEDE_INSTITUCION
		AND PC.ID_SEDE_INSTITUCION					=	@ID_SEDE_INSTITUCION --v2.1
		AND PC.ID_TURNOS_POR_INSTITUCION			=	@ID_TURNO_INSTITUCION
		AND PC.ID_SECCION							=	@ID_SECCION		
		AND TME.ID_PROGRAMACION_MATRICULA			=	@ID_PROGRAMACION_MATRICULA
		--AND TUD.ID_SEMESTRE_ACADEMICO = @ID_SEMESTRE_ACADEMICO  
		AND TME.ES_ACTIVO	=1
	ORDER BY 
		P.APELLIDO_PATERNO_PERSONA, P.APELLIDO_MATERNO_PERSONA, P.NOMBRE_PERSONA, TUD.ID_UNIDAD_DIDACTICA ASC, MATRICULADO DESC 
END
GO


