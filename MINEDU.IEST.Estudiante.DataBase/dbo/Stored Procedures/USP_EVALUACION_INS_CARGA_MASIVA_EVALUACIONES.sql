CREATE PROCEDURE [dbo].[USP_EVALUACION_INS_CARGA_MASIVA_EVALUACIONES]
(
	@ID_CARGA INT,
	@ID_SEDE_INSTITUCION INT , 
	@ID_PERIODO_ACADEMICO INT,
	@ID_CARRERA INT,
	@ID_TIPO_ITINERARIO INT, 
	@ID_SEMESTRE_ACADEMICO INT ,
	@ID_TURNO_INSTITUCION INT ,
	@ID_SECCION INT , 
	@ID_PROGRAMACION_MATRICULA INT, --?	
	@TIPO_DOCUMENTO VARCHAR(30), --DE ENUMERADO
	@NUMERO_DOCUMENTO VARCHAR(16),
	@APELLIDO_PATERNO VARCHAR(50),
	@APELLIDO_MATERNO VARCHAR(50),
	@NOMBRES VARCHAR(50),
	@SEXO	VARCHAR(10), --MASCULINO / FEMENINO
	@FECHA_NACIMIENTO VARCHAR(10), --1978-05-30
	@DISCAPACIDAD CHAR(2), --SI / NO
	@TIPO_DISCAPACIDAD VARCHAR(20), --AUDITIVA
	@NOTAS_UNIDADES_DIDACTICAS NVARCHAR(MAX), --'4379:20|4380:15|4381:18|4382:17|4383:14|4384:16'
	
	@UBIGEO_NACIMIENTO VARCHAR(6),  --si se obtiene de Reniec, caso contrario ''
	@UBIGEO_RESIDENCIA VARCHAR(6),  --si se obtiene de Reniec, caso contrario ''
	@ID_ESTADO_CIVIL INT, --DE ENUMERADO
	@ID_PAIS_NACIMIENTO INT, ----0
	@ID_PAIS_RESIDENCIA INT, ----0
	@DIRECCION_RESIDENCIA VARCHAR (255), ---si se obtiene de Reniec, caso contrario '' 
	@VALIDACION_RENIEC INT, 
	@ITEM_REGISTRO_EXCEL INT, --Fila de excel con errores
	@MENSAJES NVARCHAR(MAX),
	@USUARIO VARCHAR(20)

)
AS
DECLARE @RESULT INT
BEGIN

	BEGIN TRANSACTION T1
	BEGIN TRY
			DECLARE @ID_INSTITUCION INT, 
					@ID_TIPO_DOCUMENTO INT, 
					@ID_SEXO INT, 
					@ID_PERSONA INT, 
					@ID_LENGUA_MATERNA INT = 69, --ESPAÑOL
					@ES_DISCAPACITADO INT, 
					@ID_PERSONA_INSTITUCION INT, 						
					@ID_TIPO_DISCAPACIDAD INT,
					@ID_ESTUDIANTE_INSTITUCION INT, 
					@ID_CARRERAS_POR_INSTITUCION_DETALLE INT,
					@ID_TIPO_ESTUDIANTE INT = 190, --ESTUDIANTE HISTÓRICO
					@ID_EVALUACION_CARGA_MASIVA INT, 
					@ES_CORRECTO BIT,
					@ID_DET_ARCHIVO INT
					
			SET @ID_INSTITUCION = (SELECT ID_INSTITUCION FROM maestro.sede_institucion WHERE ID_SEDE_INSTITUCION= @ID_SEDE_INSTITUCION)							


			SET @ID_TIPO_DOCUMENTO =(SELECT ID_ENUMERADO FROM sistema.enumerado WHERE VALOR_ENUMERADO=@TIPO_DOCUMENTO AND ID_TIPO_ENUMERADO=9)

			SET @ID_SEXO = CASE WHEN @SEXO ='MASCULINO' THEN 35
								WHEN @SEXO = 'FEMENINO' THEN 36
						   END

			SET @ES_DISCAPACITADO =	CASE WHEN @DISCAPACIDAD ='SI'THEN  1
										 WHEN @DISCAPACIDAD ='NO' THEN 0
									END


			SET @ID_PERSONA  = (SELECT MP.ID_PERSONA FROM maestro.persona MP					
								WHERE MP.ID_TIPO_DOCUMENTO= @ID_TIPO_DOCUMENTO 
								AND MP.NUMERO_DOCUMENTO_PERSONA= @NUMERO_DOCUMENTO)


		
			SET @ID_TIPO_DISCAPACIDAD = (SELECT ID_ENUMERADO FROM sistema.enumerado where VALOR_ENUMERADO=@TIPO_DISCAPACIDAD)
			SET @ES_CORRECTO = (CASE WHEN @MENSAJES <> '' THEN 0 ELSE 1 END)

			--EXEC USP_ARCHIVO_UPD_CARGA @ID_CARGA, @ID_INSTITUCION, @ID_SEDE_INSTITUCION, @ID_PERIODO_ACADEMICO, @ID_CARRERA,
			--											@ID_TIPO_ITINERARIO, @ID_SEMESTRE_ACADEMICO,@ID_TURNO_INSTITUCION, @ID_SECCION, @ID_PROGRAMACION_MATRICULA

			EXEC @ID_DET_ARCHIVO = USP_ARCHIVO_INS_CARGA_DETALLE	@ID_CARGA,
														@ID_TIPO_DOCUMENTO, @NUMERO_DOCUMENTO, @APELLIDO_PATERNO, @APELLIDO_MATERNO, @NOMBRES, @ID_SEXO, 
														@FECHA_NACIMIENTO, @ES_DISCAPACITADO, @ID_TIPO_DISCAPACIDAD, @NOTAS_UNIDADES_DIDACTICAS, @UBIGEO_NACIMIENTO, 
														@UBIGEO_RESIDENCIA, @ID_ESTADO_CIVIL, @ID_PAIS_NACIMIENTO, @ID_PAIS_RESIDENCIA, @DIRECCION_RESIDENCIA,
														@ES_CORRECTO , 0, @USUARIO

			IF @MENSAJES <> ''
			BEGIN	
				INSERT INTO transaccional.log_carga
				(ID_DET_ARCHIVO, NRO_REGISTRO_EXCEL, MENSAJE, FECHA_CREACION, USUARIO_CREACION, ES_BORRADO  )
				VALUES ( @ID_DET_ARCHIVO, @ITEM_REGISTRO_EXCEL, @MENSAJES, GETDATE(), @USUARIO, 0)
				
			END 
			ELSE
			BEGIN
				IF @ID_PERSONA IS NULL 
			BEGIN
				INSERT INTO maestro.persona 
					(	ID_TIPO_DOCUMENTO,
						NUMERO_DOCUMENTO_PERSONA,
						NOMBRE_PERSONA, 
						APELLIDO_PATERNO_PERSONA, 
						APELLIDO_MATERNO_PERSONA, 
						FECHA_NACIMIENTO_PERSONA, 
						SEXO_PERSONA, 
						ID_LENGUA_MATERNA, 
						ES_DISCAPACITADO, 
						UBIGEO_NACIMIENTO, 
						PAIS_NACIMIENTO, 
						ESTADO, 
						USUARIO_CREACION, 
						FECHA_CREACION)
				VALUES (
						@ID_TIPO_DOCUMENTO, 
						@NUMERO_DOCUMENTO, 
						@NOMBRES, 
						@APELLIDO_PATERNO, 
						@APELLIDO_MATERNO,
						@FECHA_NACIMIENTO,
						@ID_SEXO,
						@ID_LENGUA_MATERNA, 
						@ES_DISCAPACITADO,
						CASE WHEN @UBIGEO_NACIMIENTO<>'' THEN @UBIGEO_NACIMIENTO ELSE NULL END,
						@ID_PAIS_NACIMIENTO,
						1,
						@USUARIO,
						GETDATE()
				)
				SET @ID_PERSONA = CONVERT(INT,@@IDENTITY)
			END
			ELSE
				UPDATE maestro.persona
				SET NOMBRE_PERSONA = @NOMBRES,
					APELLIDO_PATERNO_PERSONA= @APELLIDO_PATERNO,
					APELLIDO_MATERNO_PERSONA = @APELLIDO_MATERNO,
					FECHA_NACIMIENTO_PERSONA = @FECHA_NACIMIENTO,
					SEXO_PERSONA=@ID_SEXO,
					ID_LENGUA_MATERNA= @ID_LENGUA_MATERNA,
					ES_DISCAPACITADO= @ES_DISCAPACITADO,
					UBIGEO_NACIMIENTO= CASE WHEN @UBIGEO_NACIMIENTO<>'' THEN @UBIGEO_NACIMIENTO ELSE NULL END,
					PAIS_NACIMIENTO = @ID_PAIS_NACIMIENTO ,
					USUARIO_MODIFICACION= @USUARIO, 
					FECHA_MODIFICACION = GETDATE()
				WHERE ID_PERSONA= @ID_PERSONA

				SET @ID_PERSONA_INSTITUCION =(SELECT ID_PERSONA_INSTITUCION FROM maestro.persona_institucion WHERE ID_PERSONA = @ID_PERSONA AND ID_INSTITUCION= @ID_INSTITUCION)
	
				IF @ID_PERSONA_INSTITUCION IS NULL
			BEGIN
				INSERT INTO maestro.persona_institucion
						(	ID_PERSONA, 
							ID_INSTITUCION,
							ESTADO_CIVIL,
							PAIS_PERSONA,
							UBIGEO_PERSONA,
							DIRECCION_PERSONA,
							TELEFONO,
							CELULAR,
							CORREO, 
							ID_TIPO_DISCAPACIDAD, 
							ID_GRADO_PROFESIONAL,
							OCUPACION_PERSONA,
							TITULO_PROFESIONAL,
							ID_CARRERA_PROFESIONAL,
							INSTITUCION_PROFESIONAL,
							ANIO_INICIO,
							ANIO_FIN,
							NIVEL_EDUCATIVO,
							ESTADO,
							USUARIO_CREACION,
							FECHA_CREACION  )
				VALUES (
							@ID_PERSONA,
							@ID_INSTITUCION,
							ISNULL(@ID_ESTADO_CIVIL,0),
							@ID_PAIS_RESIDENCIA,
							CASE WHEN @UBIGEO_RESIDENCIA <>'' THEN @UBIGEO_RESIDENCIA ELSE NULL END ,
							CASE WHEN @DIRECCION_RESIDENCIA <> '' THEN @DIRECCION_RESIDENCIA ELSE NULL END,
							'',
							NULL, 
							NULL,
							ISNULL(@ID_TIPO_DISCAPACIDAD,0),
							0,
							NULL, 
							NULL, 
							NULL,
							NULL,
							NULL,
							NULL, 0, 
							1, @USUARIO, GETDATE()	)

				SET @ID_PERSONA_INSTITUCION = CONVERT(INT,@@IDENTITY)				
			END
			ELSE
				UPDATE maestro.persona_institucion
				SET ESTADO_CIVIL = ISNULL(@ID_ESTADO_CIVIL,0),
					PAIS_PERSONA = @ID_PAIS_RESIDENCIA,
					UBIGEO_PERSONA = CASE WHEN @UBIGEO_RESIDENCIA <>'' THEN @UBIGEO_RESIDENCIA ELSE NULL END,
					DIRECCION_PERSONA = CASE WHEN @DIRECCION_RESIDENCIA <> '' THEN @DIRECCION_RESIDENCIA  ELSE NULL END,
					ID_TIPO_DISCAPACIDAD = ISNULL(@ID_TIPO_DISCAPACIDAD,0),
					USUARIO_MODIFICACION = @USUARIO,
					FECHA_MODIFICACION = GETDATE()
				WHERE ID_PERSONA_INSTITUCION= @ID_PERSONA_INSTITUCION

				SET @ID_ESTUDIANTE_INSTITUCION =(SELECT ID_ESTUDIANTE_INSTITUCION FROM transaccional.estudiante_institucion WHERE ID_PERSONA_INSTITUCION = @ID_PERSONA_INSTITUCION AND ID_TURNOS_POR_INSTITUCION = @ID_TURNO_INSTITUCION AND ES_ACTIVO=1)

				SET @ID_CARRERAS_POR_INSTITUCION_DETALLE =  (SELECT TCXID.ID_CARRERAS_POR_INSTITUCION_DETALLE 
															 FROM transaccional.carreras_por_institucion_detalle TCXID 
															 INNER JOIN transaccional.carreras_por_institucion TCIX ON TCIX.ID_CARRERAS_POR_INSTITUCION= TCXID.ID_CARRERAS_POR_INSTITUCION 
															 AND TCIX.ES_ACTIVO=1 AND TCXID.ES_ACTIVO=1
															 WHERE TCIX.ID_CARRERA= @ID_CARRERA AND TCIX.ID_TIPO_ITINERARIO= @ID_TIPO_ITINERARIO 
															 AND TCXID.ID_SEDE_INSTITUCION= @ID_SEDE_INSTITUCION)
				IF @ID_ESTUDIANTE_INSTITUCION IS NULL
			BEGIN
				INSERT INTO transaccional.estudiante_institucion
				(
					ID_PERSONA_INSTITUCION,
					ID_INSTITUCION_BASICA, 
					ID_CARRERAS_POR_INSTITUCION_DETALLE, 
					ID_TURNOS_POR_INSTITUCION, 
					ID_SEMESTRE_ACADEMICO, 
					ID_TIPO_ESTUDIANTE, 
					CODIGO_ESTUDIANTE, 
					ANIO_EGRESO, 
					ID_TIPO_DOCUMENTO_APODERADO,
					ID_TIPO_PARENTESCO, 
					NUMERO_DOCUMENTO_APODERADO,
					NOMBRE_APODERADO,
					APELLIDO_APODERADO,
					ARCHIVO_FOTO,
					ARCHIVO_RUTA, 
					ES_ACTIVO,
					ESTADO, 
					USUARIO_CREACION, 
					FECHA_CREACION
				)
				VALUES (
					@ID_PERSONA_INSTITUCION,
					NULL,
					@ID_CARRERAS_POR_INSTITUCION_DETALLE,
					@ID_TURNO_INSTITUCION,
					@ID_SEMESTRE_ACADEMICO,
					@ID_TIPO_ESTUDIANTE,
					NULL,
					NULL,
					0,
					0,
					NULL,
					NULL,
					NULL,
					'',
					NULL, 
					1,
					1,
					@USUARIO,
					GETDATE()
				)
				SET @ID_ESTUDIANTE_INSTITUCION = CONVERT(INT,@@IDENTITY)
			END		

				SET @ID_EVALUACION_CARGA_MASIVA = (SELECT ID_EVALUACION_CARGA_MASIVA FROM  transaccional.evaluacion_carga_masiva 
							WHERE ID_ESTUDIANTE_INSTITUCION = @ID_ESTUDIANTE_INSTITUCION AND ID_PERIODO_ACADEMICO = @ID_PERIODO_ACADEMICO
							AND ID_TURNOS_POR_INSTITUCION = @ID_TURNO_INSTITUCION AND ID_SECCION = @ID_SECCION AND ID_SEDE_INSTITUCION = @ID_SEDE_INSTITUCION
							AND ID_SEMESTRE_ACADEMICO = @ID_SEMESTRE_ACADEMICO AND ES_ACTIVO=1 AND ID_CARGA= @ID_CARGA)

				IF @ID_EVALUACION_CARGA_MASIVA IS NULL
					BEGIN
								INSERT INTO transaccional.evaluacion_carga_masiva
								(	ID_ESTUDIANTE_INSTITUCION,
									ID_PERIODO_ACADEMICO,
									ID_TURNOS_POR_INSTITUCION,
									ID_SECCION, 
									ID_SEDE_INSTITUCION,
									ID_SEMESTRE_ACADEMICO,								
									ES_ACTIVO,
									ESTADO,
									USUARIO_CREACION,
									FECHA_CREACION,
									ID_CARGA
								)
								VALUES 
								(
									@ID_ESTUDIANTE_INSTITUCION,
									@ID_PERIODO_ACADEMICO,
									@ID_TURNO_INSTITUCION, 
									@ID_SECCION, 
									@ID_SEDE_INSTITUCION, 
									@ID_SEMESTRE_ACADEMICO, 						
									1,
									1,
									@USUARIO, 
									GETDATE(),
									@ID_CARGA
								)
								SET @ID_EVALUACION_CARGA_MASIVA= CONVERT(INT,@@IDENTITY)
					END					
				
				EXEC USP_EVALUACION_INS_CARGA_MASIVA_EVALUACIONES_NOTAS @ID_EVALUACION_CARGA_MASIVA, @NOTAS_UNIDADES_DIDACTICAS, @USUARIO
			END
			COMMIT TRANSACTION T1
			SET @RESULT = 1
	END TRY
	BEGIN CATCH
			IF @@ERROR<>0
			BEGIN
			   ROLLBACK TRANSACTION T1	   
			   SET @RESULT = -1
			   PRINT ERROR_MESSAGE()
			END
	END CATCH
	SELECT @RESULT
END
GO


