/**********************************************************************************************************
AUTOR				:	Juan Tovar
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Inserta periodo lectivo para las instituciones seleccionadas
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			20/06/2019		JTOVAR			Creación
2.0			10/09/2021		JCHAVEZ			Se cambió el parámetro @CODIGO_MODULAR por @ID_INSTITUCION para asignar por id y no por código modular
	
	TEST:			
	EXEC [USP_MAESTROS_INS_PERIODO_LECTIVO_INSTITUCION_MASIVO] '0635995|0719807|0737544',3,'2018-01-01 00:00:00','2018-01-21  00:00:00','MR','','gg',1
	EXEC [USP_MAESTROS_INS_PERIODO_LECTIVO_INSTITUCION_MASIVO] '0591941|1102763',3,'2018-07-15','2018-11-28','MALVA','','',1
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_MAESTROS_INS_PERIODO_LECTIVO_INSTITUCION_MASIVO]
(
	@ID_INSTITUCION NVARCHAR(max) ,
	@ID_PERIODO_LECTIVO INT =2,
	@FECHA_INICIO DATE,
	@FECHA_FIN DATE,
	@USUARIO VARCHAR(20),
	@NOMBRE_PERIODO_LECTIVO_INSTITUCION VARCHAR(30)='',
	@DESCRIPCION VARCHAR(100),
	@TODOS BIT
)
AS
DECLARE @ID_TIPO_GESTION INT = (SELECT ISNULL((SELECT ID_TIPO_OPCION FROM maestro.periodo_lectivo WHERE ID_PERIODO_LECTIVO = @ID_PERIODO_LECTIVO),0))
DECLARE @CODIGOS_MODULARES_EN_USO NVARCHAR(MAX), @RESULT NVARCHAR(MAX) =''
BEGIN TRANSACTION T1
BEGIN TRY
	MERGE INTO transaccional.periodos_lectivos_por_institucion AS TARGET
		USING (
			SELECT DISTINCT			
				I.ID_INSTITUCION ID_INSTITUCION		
			FROM db_auxiliar.dbo.UVW_INSTITUCION I
			WHERE 
				--I.CODIGO_MODULAR  IN (SELECT SplitData FROM dbo.UFN_SPLIT(UPPER(@CODIGO_MODULAR), '|'))
				I.ID_INSTITUCION IN (SELECT SplitData FROM dbo.UFN_SPLIT(UPPER(@ID_INSTITUCION), '|'))
				AND (I.TIPO_GESTION = @ID_TIPO_GESTION OR @ID_TIPO_GESTION = 5)
		) AS SOURCE ON TARGET.ID_INSTITUCION = SOURCE.ID_INSTITUCION AND TARGET.ID_PERIODO_LECTIVO= @ID_PERIODO_LECTIVO
		WHEN MATCHED
		THEN		
			UPDATE 
			SET ES_ACTIVO = 1,
				USUARIO_MODIFICACION =@USUARIO,		
				FECHA_MODIFICACION = GETDATE()
			
		WHEN NOT MATCHED BY TARGET
		THEN
			
			INSERT (
				ID_PERIODO_LECTIVO,
				ID_INSTITUCION,
				NOMBRE_PERIODO_LECTIVO_INSTITUCION,
				FECHA_INICIO_INSTITUCION,
				FECHA_FIN_INSTITUCION,
				ES_ACTIVO,
				ESTADO,
				USUARIO_CREACION,
				FECHA_CREACION
			) VALUES (
				@ID_PERIODO_LECTIVO,
				SOURCE.ID_INSTITUCION,
				'',
				@FECHA_INICIO,
				@FECHA_FIN,
				1,
				6,
				@USUARIO,
				GETDATE()
			)
		WHEN NOT MATCHED BY SOURCE AND TARGET.ESTADO=6 AND TARGET.ID_PERIODO_LECTIVO= @ID_PERIODO_LECTIVO
		THEN
		UPDATE 
			SET ES_ACTIVO=0,
				USUARIO_MODIFICACION =@USUARIO,		
				FECHA_MODIFICACION = GETDATE();

	
	   SELECT @CODIGOS_MODULARES_EN_USO =COALESCE(@CODIGOS_MODULARES_EN_USO+', ','')  + MI.CODIGO_MODULAR FROM transaccional.periodos_lectivos_por_institucion PLXI
	   INNER JOIN db_auxiliar.dbo.UVW_INSTITUCION MI ON PLXI.ID_INSTITUCION= MI.ID_INSTITUCION AND PLXI.ES_ACTIVO=1 AND PLXI.ESTADO =7
	   --WHERE MI.CODIGO_MODULAR NOT IN (SELECT SplitData FROM dbo.UFN_SPLIT(UPPER(@CODIGO_MODULAR), '|'))
	   WHERE MI.ID_INSTITUCION NOT IN (SELECT SplitData FROM dbo.UFN_SPLIT(UPPER(@ID_INSTITUCION), '|'))
	   AND   PLXI.ID_PERIODO_LECTIVO=@ID_PERIODO_LECTIVO


COMMIT TRANSACTION T1
IF @CODIGOS_MODULARES_EN_USO <>'' SET @RESULT= CONVERT(VARCHAR(MAX), @CODIGOS_MODULARES_EN_USO)
ELSE 	SET @RESULT  = '1'
END TRY
BEGIN CATCH
    IF @@ERROR<>0
    BEGIN		
	   ROLLBACK TRANSACTION T1
	   
	   SET @RESULT = '-1'

    END
END CATCH
SELECT @RESULT
GO


