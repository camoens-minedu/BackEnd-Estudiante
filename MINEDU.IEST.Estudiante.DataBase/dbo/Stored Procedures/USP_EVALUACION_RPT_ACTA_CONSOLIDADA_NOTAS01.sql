--select * from transaccional.matricula_estudiante where ID_PERIODOS_LECTIVOS_POR_INSTITUCION=895
-- USP_MATRICULA_RPT_NOMINA_MATRICULA_DETALLE_henry 443,895,442,7,101,3,773,105,112,6
-- USP_EVALUACION_RPT_ACTA_CONSOLIDADA_NOTAS 443,895,442,112,7,101,3,773,105
-- USP_EVALUACION_RPT_ACTA_CONSOLIDADA_NOTAS 443,895,442,112,7,101,3,773,105


CREATE PROCEDURE [dbo].[USP_EVALUACION_RPT_ACTA_CONSOLIDADA_NOTAS01]
(	
	@ID_INSTITUCION							INT,	
	@ID_PERIODOS_LECTIVOS_POR_INSTITUCION	INT,
	@ID_SEDE_INSTITUCION			INT,
	@ID_SEMESTRE_ACADEMICO			INT,	
	@ID_CARRERA						INT,
	@ID_TIPO_ITINERARIO				INT,
	@ID_PERIODO_ACADEMICO			INT,	
	@ID_TURNOS_POR_INSTITUCION		INT,
	@ID_SECCION						INT

)
AS 
BEGIN

declare @TotalRegistros int =0

SELECT DISTINCT
	SD2.DRE_GRE									AS Dre_gre,
	SD2.ID_INSTITUCION,
	SD2.NOMBRE_INSTITUCION						AS NombreInstituto,
	SD2.CODIGO_DISTRITO							AS CODIGO_UBIGEO,
	UB.DEPARTAMENTO_UBIGEO,UB.PROVINCIA_UBIGEO,UB.DISTRITO_UBIGEO,
	PES.VALOR_ENUMERADO							AS PlanEstudios,
	TN2.ID_TURNO,
	TN3.VALOR_ENUMERADO							AS Turno,
	E.ID_ESTUDIANTE_INSTITUCION,
	G.ID_CARRERA,
	upper(G.NOMBRE_CARRERA)						as carrera,
	NF.ID_NIVEL_FORMACION,
	NF.NOMBRE_NIVEL_FORMACION,
	PA1.ID_PERIODO_ACADEMICO					AS IdPeriodoClases,
	PA1.NOMBRE_PERIODO_ACADEMICO				AS Periodo_clases,
	SA1.VALOR_ENUMERADO							AS Ciclo,
	PC.ID_SECCION								AS IdSeccion,
	S1.VALOR_ENUMERADO							AS Seccion,
	SD2.CODIGO_MODULAR							AS CodigoModular,
	PC.ID_SEDE_INSTITUCION,
	SD1.DIRECCION_SEDE							AS DireccionSede,
	TG.VALOR_ENUMERADO							AS TipoGestion,

	P.NUMERO_DOCUMENTO_PERSONA as IdEstudiante,
	P.APELLIDO_PATERNO_PERSONA ,
	P.APELLIDO_MATERNO_PERSONA,
	P.NOMBRE_PERSONA,
	UPPER(P.APELLIDO_PATERNO_PERSONA) + ' ' +
	UPPER(P.APELLIDO_MATERNO_PERSONA) + ', ' + 
	dbo.UFN_CAPITALIZAR(P.NOMBRE_PERSONA)								NombreAlumno,
	--LEFT(EN.VALOR_ENUMERADO,1)											SEXO,
	--(SELECT DATEDIFF(year,      
	--				P.FECHA_NACIMIENTO_PERSONA, 
	--				GETDATE()))											EDAD,
	--(CASE WHEN P.ES_DISCAPACITADO IS NULL OR ES_DISCAPACITADO =0 
	--	THEN 'NO'
	--	ELSE 'SI'
	--	END
	--)																	CON_DISCAPACIDAD,
	TUD.NOMBRE_UNIDAD_DIDACTICA as UnidadDidactica
	-- TUD.ID_UNIDAD_DIDACTICA,
	-- --TUD.ID_MODULO,	 
	-- PCXME.ID_PROGRAMACION_CLASE,
	-- PCXME.ID_MATRICULA_ESTUDIANTE,
	-- --EV1.NOTA as Nota,
	,CASE WHEN EXISTS (				
									SELECT DISTINCT TOP 1 UD.ID_UNIDAD_DIDACTICA,EV1.NOTA FROM transaccional.matricula_estudiante ME
									INNER JOIN transaccional.programacion_clase_por_matricula_estudiante PCXME ON ME.ID_MATRICULA_ESTUDIANTE =  PCXME.ID_MATRICULA_ESTUDIANTE AND PCXME.ES_ACTIVO=1
									INNER JOIN transaccional.unidades_didacticas_por_programacion_clase UDXPC ON UDXPC.ID_PROGRAMACION_CLASE = PCXME.ID_PROGRAMACION_CLASE AND UDXPC.ES_ACTIVO=1
									INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE = UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO=1
									INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA= UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
									INNER JOIN transaccional.evaluacion EV ON PCXME.ID_PROGRAMACION_CLASE= EV.ID_PROGRAMACION_CLASE AND EV.ES_ACTIVO=1 
									INNER JOIN transaccional.evaluacion_detalle EV1 ON EV.ID_EVALUACION= EV1.ID_EVALUACION AND PCXME.ID_MATRICULA_ESTUDIANTE= EV1.ID_MATRICULA_ESTUDIANTE AND EV1.ES_ACTIVO=1
									WHERE ME.ID_ESTUDIANTE_INSTITUCION=TME.ID_ESTUDIANTE_INSTITUCION 
										 AND UD.ID_SEMESTRE_ACADEMICO=@ID_SEMESTRE_ACADEMICO 
										 AND ME.ES_ACTIVO=1  
										 AND UD.ID_UNIDAD_DIDACTICA= TUD.ID_UNIDAD_DIDACTICA										 

									) THEN NOTA ELSE 0 END Nota
		--CASE WHEN TME.ID_SEMESTRE_ACADEMICO > @ID_SEMESTRE_ACADEMICO THEN 'SUBSANACIÓN'
		--	WHEN TME.ID_SEMESTRE_ACADEMICO < @ID_SEMESTRE_ACADEMICO THEN 'ADELANTO'
		--	ELSE '' END				OBSERVACIONES,

	--,ROW_NUMBER() OVER ( ORDER BY P.NUMERO_DOCUMENTO_PERSONA) AS Row
	,Total = count(1) OVER ()
	
	--INTO #TemporalAN	

	FROM transaccional.matricula_estudiante TME
	
	INNER JOIN transaccional.estudiante_institucion E 
																				ON TME.ID_ESTUDIANTE_INSTITUCION=E.ID_ESTUDIANTE_INSTITUCION AND E.ES_ACTIVO=1
	INNER JOIN transaccional.carreras_por_institucion_detalle CXID 
																				ON CXID.ID_CARRERAS_POR_INSTITUCION_DETALLE=E.ID_CARRERAS_POR_INSTITUCION_DETALLE
	INNER JOIN transaccional.carreras_por_institucion CXI 
																				ON CXI.ID_CARRERAS_POR_INSTITUCION= CXID.ID_CARRERAS_POR_INSTITUCION AND CXI.ES_ACTIVO=1
	INNER JOIN maestro.persona_institucion PINS 
																				ON PINS.ID_PERSONA_INSTITUCION=E.ID_PERSONA_INSTITUCION
	INNER JOIN maestro.persona P									
																				ON P.ID_PERSONA= PINS.ID_PERSONA
	INNER JOIN sistema.enumerado EN 
																				ON EN.ID_ENUMERADO= P.SEXO_PERSONA
	INNER JOIN transaccional.programacion_clase_por_matricula_estudiante PCXME 
																				ON TME.ID_MATRICULA_ESTUDIANTE= PCXME.ID_MATRICULA_ESTUDIANTE AND PCXME.ES_ACTIVO=1
	INNER JOIN transaccional.programacion_clase PC 
																				ON PC.ID_PROGRAMACION_CLASE= PCXME.ID_PROGRAMACION_CLASE AND PC.ES_ACTIVO=1
	INNER JOIN transaccional.plan_estudio PE									ON PE.ID_CARRERAS_POR_INSTITUCION= CXI.ID_CARRERAS_POR_INSTITUCION AND PE.ES_ACTIVO=1
	INNER JOIN transaccional.modulo M											ON M.ID_PLAN_ESTUDIO= PE.ID_PLAN_ESTUDIO AND M.ES_ACTIVO=1
	INNER JOIN transaccional.unidad_didactica	TUD								ON TUD.ID_MODULO= M.ID_MODULO AND TUD.ES_ACTIVO=1 AND TUD.ID_SEMESTRE_ACADEMICO =@ID_SEMESTRE_ACADEMICO
	--SEDES
	INNER JOIN maestro.sede_institucion	SD1										ON CXID.ID_SEDE_INSTITUCION=SD1.ID_SEDE_INSTITUCION
	INNER JOIN db_auxiliar.dbo.UVW_INSTITUCION SD2							ON SD1.ID_INSTITUCION=SD2.ID_INSTITUCION
	--UBIGEO
	INNER JOIN db_auxiliar.dbo.UVW_UBIGEO UB									ON SD2.CODIGO_DISTRITO=UB.CODIGO_UBIGEO 	--reemplazoPorVista
	--PLAN DE ESTUDIOS
	INNER JOIN sistema.enumerado PES											ON PE.ID_TIPO_ITINERARIO = PES.ID_ENUMERADO 
	--TURNO
	INNER JOIN maestro.turnos_por_institucion TN1								ON PC.ID_TURNOS_POR_INSTITUCION=TN1.ID_TURNOS_POR_INSTITUCION AND TN1.ES_ACTIVO=1
	INNER JOIN maestro.turno_equivalencia TN2									ON TN1.ID_TURNO_EQUIVALENCIA=TN2.ID_TURNO_EQUIVALENCIA AND TN2.ESTADO=1
	INNER JOIN sistema.enumerado TN3											ON TN2.ID_TURNO= TN3.ID_ENUMERADO AND TN3.ESTADO=1
	--CARRERA
	INNER JOIN transaccional.carreras_por_institucion F							ON PE.ID_CARRERAS_POR_INSTITUCION =F.ID_CARRERAS_POR_INSTITUCION AND F.ES_ACTIVO=1
	INNER JOIN db_auxiliar.dbo.UVW_CARRERA G									ON F.ID_CARRERA=G.ID_CARRERA --AND G.ESTADO=1	--reemplazoPorVista
	--NIVEL DE FORMACION
	INNER JOIN maestro.nivel_formacion NF										ON G.TIPO_NIVEL_FORMACION = NF.CODIGO_TIPO --G.ID_NIVEL_FORMACION=NF.ID_NIVEL_FORMACION --reemplazoPorVista
																				AND NF.ESTADO=1
	--PERIODO ACADEMICO / CLASES
	INNER JOIN transaccional.periodo_academico PA1								ON TME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION=PA1.ID_PERIODOS_LECTIVOS_POR_INSTITUCION and PC.ID_PERIODO_ACADEMICO=PA1.ID_PERIODO_ACADEMICO AND PA1.ES_ACTIVO=1
	--SEMESTRE academico (ciclo)
	INNER JOIN sistema.enumerado SA1											ON TME.ID_SEMESTRE_ACADEMICO =SA1.ID_ENUMERADO AND SA1.ESTADO=1
	--SECCION
	INNER JOIN sistema.enumerado S1												ON PC.ID_SECCION=S1.ID_ENUMERADO AND S1.ESTADO=1
	--TIPO DE GESTION
	INNER JOIN sistema.enumerado TG												ON SD2.TIPO_GESTION= TG.ID_ENUMERADO	--reemplazoPorVista
	----NOTAS
	INNER JOIN transaccional.evaluacion EV										ON PCXME.ID_PROGRAMACION_CLASE= EV.ID_PROGRAMACION_CLASE AND EV.ES_ACTIVO=1 AND PC.ID_PROGRAMACION_CLASE= EV.ID_PROGRAMACION_CLASE
	INNER JOIN transaccional.evaluacion_detalle EV1								ON EV.ID_EVALUACION= EV1.ID_EVALUACION AND PCXME.ID_MATRICULA_ESTUDIANTE= EV1.ID_MATRICULA_ESTUDIANTE AND EV1.ES_ACTIVO=1	
	
	WHERE 
		CXI.ID_INSTITUCION								= @ID_INSTITUCION 
		AND TME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION	= @ID_PERIODOS_LECTIVOS_POR_INSTITUCION
		AND CXID.ID_SEDE_INSTITUCION					= @ID_SEDE_INSTITUCION
		AND CXI.ID_CARRERA								= @ID_CARRERA
		AND CXI.ID_TIPO_ITINERARIO						= @ID_TIPO_ITINERARIO
		AND TME.ID_PERIODO_ACADEMICO					= @ID_PERIODO_ACADEMICO
		AND E.ID_TURNOS_POR_INSTITUCION					= @ID_TURNOS_POR_INSTITUCION		
		AND PC.ID_SECCION								= @ID_SECCION
		--AND TME.ID_PROGRAMACION_MATRICULA				= @ID_PROGRAMACION_MATRICULA
		--AND @ID_PROGRAMACION_MATRICULA.ID_PROGRAMACION_MATRICULA= @ID_PROGRAMACION_MATRICULA
		AND TME.ES_ACTIVO	=1
		--AND TME.ID_SEMESTRE_ACADEMICO			=   @ID_SEMESTRE_ACADEMICO
		--and E.ID_ESTUDIANTE_INSTITUCION=16
		--AND NUMERO_DOCUMENTO_PERSONA IN ('44492255','10656200')
		ORDER BY  TUD.NOMBRE_UNIDAD_DIDACTICA
		
	--IF(select COUNT(*) from #TemporalAN)>0
	--	BEGIN
	--		select * from #TemporalAN
	--	END
	--ELSE
	--	BEGIN
	--		SELECT 0 AS Total
	--	END


END

--select *  into #TemporalAN001 from #TemporalAN
--drop table #TemporalAN
GO


