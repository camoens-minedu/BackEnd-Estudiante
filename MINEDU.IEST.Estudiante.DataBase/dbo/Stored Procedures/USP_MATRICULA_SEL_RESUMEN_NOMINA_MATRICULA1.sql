/**********************************************************************************************************
AUTOR				:	Juan Tovar
FECHA DE CREACION	:	10/09/2021
LLAMADO POR			:
DESCRIPCION			:	Obtiene información del total registros de la consulta. 
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			10/09/2021		JTOVAR			CREACIÓN
1.2			07/02/2022		JCHAVEZ			MODIFICACION, OPTIMIZACIÓN DE REPORTE

TEST:			
	EXEC USP_MATRICULA_SEL_RESUMEN_NOMINA_MATRICULA1 3938,68,1171,921,3804,39,105,114,0,1,10
	EXEC USP_MATRICULA_SEL_RESUMEN_NOMINA_MATRICULA1 3913,0,1171,0,0,0,0,112,0,1,100
	EXEC USP_MATRICULA_SEL_RESUMEN_NOMINA_MATRICULA1 3913,0,0,0,0,0,0,0,0,1,1000
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_MATRICULA_SEL_RESUMEN_NOMINA_MATRICULA1]
(
	@ID_PERIODO_LECTIVO_INSTITUCION INT,
	@ID_SEDE_INSTITUCION	INT=0,
	@ID_CARRERA				INT=0,
	@ID_PLAN_ESTUDIO		INT=0,
	@ID_PERIODO_ACADEMICO	INT=0,
	@ID_TURNO_INSTITUCION	INT=0,
	@ID_SECCION				INT=0,
	@ID_SEMESTRE_ACADEMICO	INT=0,
	@TIPO_MATRICULA			INT=0,  --48-->Regular / 49-->Extemporánea / 50-->Acta
	@Pagina					int=1,
	@Registros				int=10
)
AS 
BEGIN
	DECLARE @P_ID_TIPO_DOCUMENTO INT = (SELECT CASE @TIPO_MATRICULA WHEN 48 THEN 185 WHEN 49 THEN 188 WHEN 50 THEN 50 ELSE @TIPO_MATRICULA END)

	--CREATE TABLE ##TmpResumenMatriculaActas (IdCarrerainstitucion INT,Carrera NVARCHAR(500),IdCiclo INT,Ciclo NOMBRE_LARGO,IdTurno ID,Turno NOMBRE_LARGO,IdSeccion ID,
	--								Seccion NOMBRE_LARGO,IdPeriodoClases ID,PeriodoClases NOMBRE_CORTO,IdSede ID,Sede NOMBRE_LARGO,IdPeriodoLectivo ID,
	--								IdInstitucion ID,IdProgramacionMatricula ID,IdPlanEstudio INT,TipoReporte NUMERO_ENTERO, TipoDocumento NOMBRE_LARGO,TotalRegistros INT)

	SELECT ID_MATRICULA_ESTUDIANTE,ID_ESTUDIANTE_INSTITUCION,ID_PERIODO_ACADEMICO,ID_PROGRAMACION_MATRICULA
	INTO ##TmpMatriculaEstudianteResumen
	FROM transaccional.matricula_estudiante
	WHERE ID_PERIODOS_LECTIVOS_POR_INSTITUCION=@ID_PERIODO_LECTIVO_INSTITUCION AND ES_ACTIVO=1

	SELECT ID_MATRICULA_ESTUDIANTE,ID_ESTUDIANTE_INSTITUCION,ID_PERIODO_ACADEMICO,ID_PROGRAMACION_MATRICULA,e.NOTA
	INTO ##TmpEvaluacionDetalleResumen
	FROM (
		SELECT me.ID_MATRICULA_ESTUDIANTE,ID_ESTUDIANTE_INSTITUCION,ID_PERIODO_ACADEMICO,ID_PROGRAMACION_MATRICULA,ed.NOTA
		FROM transaccional.evaluacion_detalle ed
		INNER JOIN ##TmpMatriculaEstudianteResumen me ON me.ID_MATRICULA_ESTUDIANTE = ed.ID_MATRICULA_ESTUDIANTE
		WHERE ed.ES_ACTIVO=1
		UNION ALL 
		SELECT me.ID_MATRICULA_ESTUDIANTE,ID_ESTUDIANTE_INSTITUCION,ID_PERIODO_ACADEMICO,ID_PROGRAMACION_MATRICULA,ed.NOTA
		FROM transaccional.evaluacion_experiencia_formativa ed
		INNER JOIN ##TmpMatriculaEstudianteResumen me ON me.ID_MATRICULA_ESTUDIANTE = ed.ID_MATRICULA_ESTUDIANTE
		WHERE ed.ES_ACTIVO=1
	) e

	SELECT 
	c.ID_CARRERA IdCarrerainstitucion,
	c.NOMBRE_CARRERA Carrera,
	enu.ID_ENUMERADO IdCiclo,
	enu.VALOR_ENUMERADO Ciclo,
	tpi.ID_TURNOS_POR_INSTITUCION IdTurno,
	enume.VALOR_ENUMERADO Turno,
	enumera.ID_ENUMERADO IdSeccion,
	enumera.VALOR_ENUMERADO Seccion,
	pa.ID_PERIODO_ACADEMICO IdPeriodoClases,
	pa.NOMBRE_PERIODO_ACADEMICO PeriodoClases,
	si.ID_SEDE_INSTITUCION IdSede,
	si.NOMBRE_SEDE Sede,
	@ID_PERIODO_LECTIVO_INSTITUCION IdPeriodoLectivo,
	si.ID_INSTITUCION IdInstitucion,
	PM.ID_PROGRAMACION_MATRICULA IdProgramacionMatricula,--primer cambio
	PE.ID_PLAN_ESTUDIO IdPlanEstudio,
	CASE PM.ID_TIPO_MATRICULA WHEN 185 THEN 48 WHEN 188 THEN 49 ELSE @TIPO_MATRICULA END TipoReporte,
	'MATRÍCULA ' + ENU_PM.VALOR_ENUMERADO AS TipoDocumento,
	COUNT (distinct ME.ID_ESTUDIANTE_INSTITUCION) TotalRegistros	
	INTO ##TmpResumenMatriculaActas
	FROM ##TmpMatriculaEstudianteResumen ME
		INNER JOIN transaccional.programacion_clase_por_matricula_estudiante PCXME ON ME.ID_MATRICULA_ESTUDIANTE= PCXME.ID_MATRICULA_ESTUDIANTE AND PCXME.ES_ACTIVO=1
		INNER JOIN transaccional.programacion_clase PC ON PC.ID_PROGRAMACION_CLASE= PCXME.ID_PROGRAMACION_CLASE AND PC.ES_ACTIVO=1
		INNER JOIN transaccional.unidades_didacticas_por_programacion_clase UDXPC ON UDXPC.ID_PROGRAMACION_CLASE= PCXME.ID_PROGRAMACION_CLASE AND UDXPC.ES_ACTIVO=1
		INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE= UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO =1
		INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA= UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
		INNER JOIN transaccional.modulo M ON M.ID_MODULO = UD.ID_MODULO AND M.ES_ACTIVO=1
		INNER JOIN transaccional.plan_estudio	PE on PE.ID_PLAN_ESTUDIO = M.ID_PLAN_ESTUDIO AND PE.ES_ACTIVO=1
		INNER JOIN transaccional.carreras_por_institucion CXI ON CXI.ID_CARRERAS_POR_INSTITUCION= PE.ID_CARRERAS_POR_INSTITUCION AND CXI.ES_ACTIVO=1
		INNER JOIN db_auxiliar.dbo.UVW_CARRERA c ON CXI.ID_CARRERA = c.ID_CARRERA
		INNER JOIN sistema.enumerado enu ON UD.ID_SEMESTRE_ACADEMICO = enu.ID_ENUMERADO
		INNER JOIN maestro.turnos_por_institucion tpi ON PC.ID_TURNOS_POR_INSTITUCION = tpi.ID_TURNOS_POR_INSTITUCION 
		INNER JOIN maestro.turno_equivalencia te ON tpi.ID_TURNO_EQUIVALENCIA = te.ID_TURNO_EQUIVALENCIA
		INNER JOIN sistema.enumerado enume ON te.ID_TURNO = enume.ID_ENUMERADO
		INNER JOIN sistema.enumerado enumera ON PC.ID_SECCION = enumera.ID_ENUMERADO
		INNER JOIN transaccional.periodo_academico pa ON ME.ID_PERIODO_ACADEMICO = pa.ID_PERIODO_ACADEMICO
		INNER JOIN maestro.sede_institucion si ON PC.ID_SEDE_INSTITUCION = si.ID_SEDE_INSTITUCION
		INNER JOIN transaccional.programacion_matricula PM ON PM.ID_PROGRAMACION_MATRICULA = ME.ID_PROGRAMACION_MATRICULA AND PM.ES_ACTIVO=1
		INNER JOIN sistema.enumerado ENU_PM ON PM.ID_TIPO_MATRICULA = ENU_PM.ID_ENUMERADO
	WHERE
		(PC.ID_SEDE_INSTITUCION= @ID_SEDE_INSTITUCION OR @ID_SEDE_INSTITUCION = 0)			
		AND (CXI.ID_CARRERA= @ID_CARRERA OR @ID_CARRERA = 0)
		AND (PE.ID_PLAN_ESTUDIO= @ID_PLAN_ESTUDIO OR @ID_PLAN_ESTUDIO = 0)
		AND (ME.ID_PERIODO_ACADEMICO= @ID_PERIODO_ACADEMICO OR @ID_PERIODO_ACADEMICO = 0)
		AND (UD.ID_SEMESTRE_ACADEMICO=@ID_SEMESTRE_ACADEMICO OR @ID_SEMESTRE_ACADEMICO = 0)
		AND (PC.ID_TURNOS_POR_INSTITUCION= @ID_TURNO_INSTITUCION OR @ID_TURNO_INSTITUCION = 0) 
		AND (PC.ID_SECCION= @ID_SECCION OR @ID_SECCION = 0)
		AND (PM.ID_TIPO_MATRICULA = @P_ID_TIPO_DOCUMENTO OR @P_ID_TIPO_DOCUMENTO = 0)			
	GROUP BY c.ID_CARRERA,c.NOMBRE_CARRERA,enu.ID_ENUMERADO,enu.VALOR_ENUMERADO,enume.ID_ENUMERADO,enume.VALOR_ENUMERADO,enumera.ID_ENUMERADO,enumera.VALOR_ENUMERADO,pa.ID_PERIODO_ACADEMICO,pa.NOMBRE_PERIODO_ACADEMICO,
	si.ID_SEDE_INSTITUCION,si.NOMBRE_SEDE,si.ID_INSTITUCION,PM.ID_PROGRAMACION_MATRICULA,PE.ID_PLAN_ESTUDIO,tpi.ID_TURNOS_POR_INSTITUCION,PM.ID_TIPO_MATRICULA,ENU_PM.VALOR_ENUMERADO 

	IF (@P_ID_TIPO_DOCUMENTO = 50 OR @P_ID_TIPO_DOCUMENTO = 0)
	BEGIN
		INSERT INTO ##TmpResumenMatriculaActas		
		SELECT 
		c.ID_CARRERA IdCarrerainstitucion,
		c.NOMBRE_CARRERA Carrera,
		enu.ID_ENUMERADO IdCiclo,
		enu.VALOR_ENUMERADO Ciclo,
		tpi.ID_TURNOS_POR_INSTITUCION IdTurno,
		enume.VALOR_ENUMERADO Turno,
		enumera.ID_ENUMERADO IdSeccion,
		enumera.VALOR_ENUMERADO Seccion,
		pa.ID_PERIODO_ACADEMICO IdPeriodoClases,
		pa.NOMBRE_PERIODO_ACADEMICO PeriodoClases,
		si.ID_SEDE_INSTITUCION IdSede,
		si.NOMBRE_SEDE Sede,
		@ID_PERIODO_LECTIVO_INSTITUCION IdPeriodoLectivo,
		si.ID_INSTITUCION IdInstitucion,
		ED.ID_PROGRAMACION_MATRICULA IdProgramacionMatricula,--primer cambio
		PE.ID_PLAN_ESTUDIO IdPlanEstudio,
		50 TipoReporte,
		'ACTA DE NOTAS' TipoDocumento,
		COUNT (distinct ED.ID_MATRICULA_ESTUDIANTE) TotalRegistros
		FROM ##TmpEvaluacionDetalleResumen ED
			INNER JOIN transaccional.programacion_clase_por_matricula_estudiante PCXME ON ED.ID_MATRICULA_ESTUDIANTE= PCXME.ID_MATRICULA_ESTUDIANTE AND PCXME.ES_ACTIVO=1
			INNER JOIN transaccional.programacion_clase PC ON PC.ID_PROGRAMACION_CLASE= PCXME.ID_PROGRAMACION_CLASE AND PC.ES_ACTIVO=1
			INNER JOIN transaccional.unidades_didacticas_por_programacion_clase UDXPC ON UDXPC.ID_PROGRAMACION_CLASE= PCXME.ID_PROGRAMACION_CLASE AND UDXPC.ES_ACTIVO=1
			INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE= UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO =1
			INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA= UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
			INNER JOIN transaccional.modulo M ON M.ID_MODULO = UD.ID_MODULO AND M.ES_ACTIVO=1
			INNER JOIN transaccional.plan_estudio	PE on PE.ID_PLAN_ESTUDIO = M.ID_PLAN_ESTUDIO AND PE.ES_ACTIVO=1
			INNER JOIN transaccional.carreras_por_institucion CXI ON CXI.ID_CARRERAS_POR_INSTITUCION= PE.ID_CARRERAS_POR_INSTITUCION AND CXI.ES_ACTIVO=1
			INNER JOIN db_auxiliar.dbo.UVW_CARRERA c ON CXI.ID_CARRERA = c.ID_CARRERA
			INNER JOIN sistema.enumerado enu ON UD.ID_SEMESTRE_ACADEMICO = enu.ID_ENUMERADO
			INNER JOIN maestro.turnos_por_institucion tpi ON PC.ID_TURNOS_POR_INSTITUCION = tpi.ID_TURNOS_POR_INSTITUCION 
			INNER JOIN maestro.turno_equivalencia te ON tpi.ID_TURNO_EQUIVALENCIA = te.ID_TURNO_EQUIVALENCIA
			INNER JOIN sistema.enumerado enume ON te.ID_TURNO = enume.ID_ENUMERADO
			INNER JOIN sistema.enumerado enumera ON PC.ID_SECCION = enumera.ID_ENUMERADO
			INNER JOIN transaccional.periodo_academico pa ON ED.ID_PERIODO_ACADEMICO = pa.ID_PERIODO_ACADEMICO
			INNER JOIN maestro.sede_institucion si ON PC.ID_SEDE_INSTITUCION = si.ID_SEDE_INSTITUCION
		WHERE 			
			(PC.ID_SEDE_INSTITUCION= @ID_SEDE_INSTITUCION OR @ID_SEDE_INSTITUCION = 0)			
			AND (CXI.ID_CARRERA= @ID_CARRERA OR @ID_CARRERA = 0)
			AND (PE.ID_PLAN_ESTUDIO= @ID_PLAN_ESTUDIO OR @ID_PLAN_ESTUDIO = 0)
			AND (ED.ID_PERIODO_ACADEMICO= @ID_PERIODO_ACADEMICO OR @ID_PERIODO_ACADEMICO = 0)
			AND (UD.ID_SEMESTRE_ACADEMICO=@ID_SEMESTRE_ACADEMICO OR @ID_SEMESTRE_ACADEMICO = 0)
			AND (PC.ID_TURNOS_POR_INSTITUCION= @ID_TURNO_INSTITUCION OR @ID_TURNO_INSTITUCION = 0) 
			AND (PC.ID_SECCION= @ID_SECCION OR @ID_SECCION = 0)
		GROUP BY c.ID_CARRERA,c.NOMBRE_CARRERA,enu.ID_ENUMERADO,enu.VALOR_ENUMERADO,enume.ID_ENUMERADO,enume.VALOR_ENUMERADO,enumera.ID_ENUMERADO,enumera.VALOR_ENUMERADO,
		pa.ID_PERIODO_ACADEMICO,pa.NOMBRE_PERIODO_ACADEMICO,si.ID_SEDE_INSTITUCION,si.NOMBRE_SEDE,si.ID_INSTITUCION,ED.ID_PROGRAMACION_MATRICULA,PE.ID_PLAN_ESTUDIO,tpi.ID_TURNOS_POR_INSTITUCION
	END

	DECLARE @desde INT , @hasta INT;

	SET @desde = ( @Pagina - 1 ) * @Registros;
	SET @hasta = ( @Pagina * @Registros ) + 1; 
    
	WITH    tempPaginado AS
	(
	SELECT *,
		ROW_NUMBER() OVER ( ORDER BY Sede,Carrera,IdCiclo,IdTurno,TipoReporte) AS Row,
	    Total = COUNT(1) OVER ( )
	FROM ##TmpResumenMatriculaActas
	)
	SELECT  *
    FROM    tempPaginado T   WHERE   ( T.Row > @desde  AND T.Row < @hasta) OR (@Registros = 0)
	
	DROP TABLE ##TmpResumenMatriculaActas
	DROP TABLE ##TmpMatriculaEstudianteResumen
	DROP TABLE ##TmpEvaluacionDetalleResumen
END