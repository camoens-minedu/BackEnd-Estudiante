/**********************************************************************************************************
AUTOR				:	Juan Tovar
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Cierra el registro de unidad didactica para la evaluaci>n
REVI
SIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			20/06/2019		JTOVAR			Creación
1.1			25/01/2021		JCHAVEZ			Se agregó valor a @ID_CARRERA Y @ID_UNIDAD_DIDACTICA
1.2			23/08/2021		JCHAVEZ			Modificación en validación de cierre cuando todos los estudiantes tienen licencia
1.3			07/01/2022		JCHAVEZ			Modificación, se agregó sección insert evaluación para insertar cierre en caso 
											no haya ningun estudiante con nota por licencia

  TEST:			

**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_EVALUACION_UPD_CERRAR_UNIDAD_DIDACTICA](
	@ID_INSTITUCION							INT, 
	@ID_PERIODOS_LECTIVOS_POR_INSTITUCION	INT, 
	@ID_SEDE_INSTITUCION					INT, 
	@DOC_DOCENTE							INT, 
	@ID_CARRERA								INT, -- X CAMBIO, llegará 0
	@ID_UNIDAD_DIDACTICA					INT, --X CAMBIO, llegará 0
	@ID_PERIODO_ACADEMICO					INT,
	@ID_TURNOS_POR_INSTITUCION				INT, 	
	@ID_SECCION								INT,
	@ID_SEMESTRE_ACADEMICO					INT,
	@CIERRE_PROGRAMACION					INT,
	@ID_ESTADO_CIERRE						INT,
	@ID_PROGRAMACION_CLASE					INT,
	@USUARIO								VARCHAR(20)


	--DECLARE @ID_INSTITUCION							INT=1746
	--DECLARE @ID_PERIODOS_LECTIVOS_POR_INSTITUCION	INT=1372
	--DECLARE @ID_SEDE_INSTITUCION					INT= 211
	--DECLARE @DOC_DOCENTE							INT=19537
	--DECLARE @ID_CARRERA								INT=1327--X CAMBIO, llegará 0
	--DECLARE @ID_UNIDAD_DIDACTICA					INT=0 --X CAMBIO, llegará 0
	--DECLARE @ID_PERIODO_ACADEMICO					INT=386
	--DECLARE @ID_TURNOS_POR_INSTITUCION				INT= 219	
	--DECLARE @ID_SECCION								INT= 105
	--DECLARE @ID_SEMESTRE_ACADEMICO					INT= 0
	--DECLARE @CIERRE_PROGRAMACION					INT= 0
	--DECLARE @ID_ESTADO_CIERRE						INT=235
	--DECLARE @ID_PROGRAMACION_CLASE					INT=42869
	--DECLARE @USUARIO								VARCHAR(20)='42122536'
	
)
AS  
BEGIN
	DECLARE @RESULT INT
	DECLARE @NRO_MATRICULADOS INT 
	DECLARE @NRO_EVALUADOS INT 

	SET @NRO_MATRICULADOS = (SELECT SUM( CASE WHEN ID_TIPO_LICENCIA is NOT NULL AND ID_REINGRESO_ESTUDIANTE IS NULL THEN 0 ELSE  1 END)	 
	FROM (
		SELECT DISTINCT LICENCIAS_PENDIENTES.ID_TIPO_LICENCIA,LICENCIAS_PENDIENTES.ID_REINGRESO_ESTUDIANTE,PC.ID_PROGRAMACION_CLASE,
		TME.ID_MATRICULA_ESTUDIANTE,UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE
		FROM
			--transaccional.matricula_estudiante TME 
			--INNER JOIN transaccional.programacion_clase_por_matricula_estudiante TPCXME ON TME.ID_MATRICULA_ESTUDIANTE = TPCXME.ID_MATRICULA_ESTUDIANTE 
			--AND TME.ES_ACTIVO=1 AND TPCXME.ES_ACTIVO=1
			transaccional.matricula_estudiante TME 
			INNER JOIN transaccional.programacion_clase_por_matricula_estudiante TPCXME ON TME.ID_MATRICULA_ESTUDIANTE= TPCXME.ID_MATRICULA_ESTUDIANTE AND TPCXME.ES_ACTIVO=1 AND TME.ES_ACTIVO=1
			INNER JOIN transaccional.programacion_clase PC WITH (NOLOCK)  ON PC.ID_PROGRAMACION_CLASE= TPCXME.ID_PROGRAMACION_CLASE AND PC.ES_ACTIVO=1	
			INNER JOIN transaccional.unidades_didacticas_por_programacion_clase UDXPC WITH (NOLOCK) ON UDXPC.ID_PROGRAMACION_CLASE= PC.ID_PROGRAMACION_CLASE AND UDXPC.ES_ACTIVO=1
			INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE WITH (NOLOCK) ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE= UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO=1
			INNER JOIN transaccional.unidad_didactica UD WITH (NOLOCK) ON UD.ID_UNIDAD_DIDACTICA= UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1	
			INNER JOIN transaccional.estudiante_institucion EI  WITH (NOLOCK)  ON EI.ID_ESTUDIANTE_INSTITUCION= TME.ID_ESTUDIANTE_INSTITUCION AND EI.ES_ACTIVO=1
			INNER JOIN transaccional.plan_estudio PE WITH (NOLOCK) ON PE.ID_PLAN_ESTUDIO= EI.ID_PLAN_ESTUDIO AND PE.ES_ACTIVO=1
			INNER JOIN transaccional.carreras_por_institucion CXI WITH (NOLOCK) ON CXI.ID_CARRERAS_POR_INSTITUCION= PE.ID_CARRERAS_POR_INSTITUCION AND CXI.ES_ACTIVO=1

			INNER JOIN db_auxiliar.dbo.UVW_CARRERA C ON C.ID_CARRERA = CXI.ID_CARRERA
			INNER JOIN maestro.persona_institucion PEI WITH (NOLOCK) ON PEI.ID_PERSONA_INSTITUCION= EI.ID_PERSONA_INSTITUCION 
			INNER JOIN maestro.persona P WITH (NOLOCK) ON P.ID_PERSONA=PEI.ID_PERSONA
			INNER JOIN maestro.personal_institucion PINS WITH (NOLOCK) ON PINS.ID_PERSONAL_INSTITUCION= PC.ID_PERSONAL_INSTITUCION AND PINS.ES_ACTIVO=1
			LEFT JOIN transaccional.evaluacion E WITH (NOLOCK) ON E.ID_PROGRAMACION_CLASE= PC.ID_PROGRAMACION_CLASE AND E.ES_ACTIVO=1
			LEFT JOIN transaccional.evaluacion_detalle E_D WITH (NOLOCK) ON E_D.ID_EVALUACION= E.ID_EVALUACION AND E_D.ES_ACTIVO=1
			AND E_D.ID_MATRICULA_ESTUDIANTE= TME.ID_MATRICULA_ESTUDIANTE
				LEFT JOIN (SELECT SUBCONSULTA.ID_ESTUDIANTE_INSTITUCION, MAX (SUBCONSULTA.ID_PERIODOS_LECTIVOS_POR_INSTITUCION) ID_ULT_PERIODO_LECTIVO_INSTITUCION FROM 
							(
								SELECT ID_ESTUDIANTE_INSTITUCION, ID_PERIODOS_LECTIVOS_POR_INSTITUCION FROM 
								transaccional.reserva_matricula	WHERE ES_ACTIVO=1
								UNION
								SELECT ID_ESTUDIANTE_INSTITUCION, ID_PERIODOS_LECTIVOS_POR_INSTITUCION FROM 
								transaccional.licencia_estudiante WHERE ES_ACTIVO=1
							) SUBCONSULTA
							GROUP BY SUBCONSULTA.ID_ESTUDIANTE_INSTITUCION) SUBCONSULTA_ULT_PERIODO_RESERVA_LICENCIA ON SUBCONSULTA_ULT_PERIODO_RESERVA_LICENCIA.ID_ESTUDIANTE_INSTITUCION= TME.ID_ESTUDIANTE_INSTITUCION
						
				LEFT JOIN (	
							SELECT  tle.ID_LICENCIA_ESTUDIANTE,ID_ESTUDIANTE_INSTITUCION, ID_TIPO_LICENCIA, VALOR_ENUMERADO, tle.ID_PERIODOS_LECTIVOS_POR_INSTITUCION, tre.ID_REINGRESO_ESTUDIANTE
							FROM 
								transaccional.licencia_estudiante tle
								LEFT JOIN transaccional.reingreso_estudiante tre on tle.ID_LICENCIA_ESTUDIANTE = tre.ID_LICENCIA_ESTUDIANTE AND tre.ES_ACTIVO=1							 
								INNER JOIN sistema.enumerado se_tipo_lic on se_tipo_lic.ID_ENUMERADO= tle.ID_TIPO_LICENCIA						
								WHERE tle.ES_ACTIVO =1							
							)
							LICENCIAS_PENDIENTES on LICENCIAS_PENDIENTES.ID_ESTUDIANTE_INSTITUCION = TME.ID_ESTUDIANTE_INSTITUCION 
							AND LICENCIAS_PENDIENTES.ID_PERIODOS_LECTIVOS_POR_INSTITUCION= SUBCONSULTA_ULT_PERIODO_RESERVA_LICENCIA.ID_ULT_PERIODO_LECTIVO_INSTITUCION
			WHERE TPCXME.ID_PROGRAMACION_CLASE = @ID_PROGRAMACION_CLASE AND UD.ID_UNIDAD_DIDACTICA = @ID_UNIDAD_DIDACTICA AND C.ID_CARRERA = @ID_CARRERA
		) MAT
	)--1148

	    SET @NRO_EVALUADOS = (SELECT COUNT(TED.ID_MATRICULA_ESTUDIANTE) FROM transaccional.evaluacion TE
		INNER JOIN transaccional.evaluacion_detalle TED ON TE.ID_EVALUACION = TED.ID_EVALUACION AND TE.ES_ACTIVO=1 AND TED.ES_ACTIVO=1
		WHERE TE.ID_PROGRAMACION_CLASE = @ID_PROGRAMACION_CLASE AND TE.ID_UNIDAD_DIDACTICA = @ID_UNIDAD_DIDACTICA AND TE.ID_CARRERA = @ID_CARRERA AND TED.NOTA IS NOT NULL)

	/*IF @NRO_EVALUADOS = 0 AND @ID_ESTADO_CIERRE =235 --Comentado versión 1.2
		SET @RESULT = 2
	ELSE*/ IF @NRO_MATRICULADOS > @NRO_EVALUADOS AND @ID_ESTADO_CIERRE =235
		SET @RESULT = 2-- -302
	ELSE
	BEGIN 
		IF EXISTS(	SELECT ID_EVALUACION 
					FROM transaccional.evaluacion 
					WHERE ID_PROGRAMACION_CLASE = @ID_PROGRAMACION_CLASE AND ID_CARRERA = @ID_CARRERA AND 
						  ID_UNIDAD_DIDACTICA = @ID_UNIDAD_DIDACTICA AND ES_ACTIVO=1 AND ESTADO=1)
		BEGIN
			UPDATE	transaccional.evaluacion
			SET		
					CIERRE_PROGRAMACION=@ID_ESTADO_CIERRE,	
					USUARIO_MODIFICACION=@USUARIO,
					FECHA_MODIFICACION=GETDATE()
			FROM	transaccional.evaluacion a
			WHERE a.ID_PROGRAMACION_CLASE = @ID_PROGRAMACION_CLASE
				AND a.ID_CARRERA = @ID_CARRERA
				AND a.ID_UNIDAD_DIDACTICA = @ID_UNIDAD_DIDACTICA
				AND a.ES_ACTIVO=1 AND a.ESTADO=1
			SET @RESULT = @@rowcount
		END
        ELSE BEGIN --versión 1.3
			INSERT INTO transaccional.evaluacion (	ID_PROGRAMACION_CLASE,
													FECHA_NOTA,
													ES_ACTIVO,
													ESTADO,
													CIERRE_PROGRAMACION,
													USUARIO_CREACION,
													FECHA_CREACION,
													ID_CARRERA,
													ID_UNIDAD_DIDACTICA)
			VALUES (@ID_PROGRAMACION_CLASE,GETDATE(),1,1,@ID_ESTADO_CIERRE,@USUARIO,GETDATE(),@ID_CARRERA,@ID_UNIDAD_DIDACTICA)

			SET @RESULT = 1
        END 
	END
	SELECT @RESULT	
	
END
GO


