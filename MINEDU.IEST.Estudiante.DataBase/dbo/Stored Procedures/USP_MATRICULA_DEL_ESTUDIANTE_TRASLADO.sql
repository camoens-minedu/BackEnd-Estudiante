/***************************************************************************************************************************************
AUTOR				:	Juan Tovar
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Elimina un registro de traslado de estudiante
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			20/06/2019		JTOVAR			CREACIÓNN
1.1		    11/02/2020		MALVA			SE AÑADE PARÁMETRO @ID_INSTITUCION PARA VERIFICAR SI ESTÁ PERMITIDO ELIMINAR REGISTRO. 
2.0			07/02/2022		JCHAVEZ			SE AGREGA UPDATE transaccional.estudiante_institucion para regularizar estado del estudiante

TEST:		
	USP_MATRICULA_DEL_ESTUDIANTE_TRASLADO 1106, 168, 'MALVA'
****************************************************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_MATRICULA_DEL_ESTUDIANTE_TRASLADO]
(
	@ID_INSTITUCION				INT,
	@ID_TRASLADO_ESTUDIANTE		INT,
	@USUARIO					VARCHAR(20)
)
AS
BEGIN
	SET NOCOUNT ON;
	DECLARE @RESULT INT, @ID_INSTITUCION_CONSULTA INT = 0, @ES_CONVALIDACION_EXONERADA BIT = 0, @ID_ESTUDIANTE_INSTITUCION_NUEVO INT

	SELECT @ID_INSTITUCION_CONSULTA =   pli.ID_INSTITUCION FROM transaccional.traslado_estudiante te
	INNER JOIN transaccional.situacion_academica_estudiante sae ON te.ID_SITUACION_ACADEMICA_DESTINO = sae.ID_SITUACION_ACADEMICA_ESTUDIANTE and te.ES_ACTIVO=1 and sae.ES_ACTIVO=1
	INNER JOIN transaccional.periodos_lectivos_por_institucion pli ON pli.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = sae.ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND pli.ES_ACTIVO=1 
	WHERE ID_TRASLADO_ESTUDIANTE = @ID_TRASLADO_ESTUDIANTE	

	SELECT @ES_CONVALIDACION_EXONERADA = ES_CONVALIDACION_EXONERADA, @ID_ESTUDIANTE_INSTITUCION_NUEVO = ID_ESTUDIANTE_INSTITUCION_NUEVO
	FROM transaccional.traslado_estudiante 
	WHERE ID_TRASLADO_ESTUDIANTE = @ID_TRASLADO_ESTUDIANTE

	IF @ID_INSTITUCION <> @ID_INSTITUCION_CONSULTA 
		SET @RESULT = -362
	ELSE IF EXISTS(SELECT TOP 1 ID_CONVALIDACION FROM transaccional.convalidacion WHERE ID_TRASLADO_ESTUDIANTE = @ID_TRASLADO_ESTUDIANTE
			AND ES_ACTIVO=1)		
		SET @RESULT = -220 -- YA SE ENCUENTRA REGISTRADO
	--VALIDAR SI YA TIENE MATRICULA
	ELSE
	BEGIN
		BEGIN TRANSACTION T1
		BEGIN TRY
			UPDATE transaccional.estudiante_institucion
			SET ESTADO = 1,
				ES_ACTIVO = 1,
				USUARIO_MODIFICACION = @USUARIO,
				FECHA_MODIFICACION = GETDATE()
			WHERE ID_ESTUDIANTE_INSTITUCION = (SELECT TOP 1 ID_ESTUDIANTE_INSTITUCION FROM transaccional.traslado_estudiante WHERE ID_TRASLADO_ESTUDIANTE = @ID_TRASLADO_ESTUDIANTE)

			UPDATE [transaccional].traslado_estudiante
			SET ES_ACTIVO = 0,
				USUARIO_MODIFICACION = @USUARIO,
				FECHA_MODIFICACION = GETDATE()
			WHERE ID_TRASLADO_ESTUDIANTE = @ID_TRASLADO_ESTUDIANTE

			UPDATE transaccional.traslado_estudiante_detalle
			SET ES_ACTIVO=0,
			USUARIO_MODIFICACION= @USUARIO,
			FECHA_MODIFICACION= GETDATE()
			WHERE ID_TRASLADO_ESTUDIANTE=@ID_TRASLADO_ESTUDIANTE
	
			UPDATE TablaSAE
			SET TablaSAE.ES_ACTIVO =0,
			TablaSAE.USUARIO_MODIFICACION = @USUARIO,
			FECHA_MODIFICACION=GETDATE()		
			FROM transaccional.situacion_academica_estudiante TablaSAE
			LEFT join transaccional.traslado_estudiante te_o on TablaSAE.ID_SITUACION_ACADEMICA_ESTUDIANTE=te_o.ID_SITUACION_ACADEMICA_ORIGEN	
			LEFT JOIN transaccional.traslado_estudiante te_d on TablaSAE.ID_SITUACION_ACADEMICA_ESTUDIANTE = te_d.ID_SITUACION_ACADEMICA_DESTINO
			WHERE te_o.ID_TRASLADO_ESTUDIANTE= @ID_TRASLADO_ESTUDIANTE
			or te_d.ID_TRASLADO_ESTUDIANTE= @ID_TRASLADO_ESTUDIANTE
			
			IF (@ES_CONVALIDACION_EXONERADA = 1)
			BEGIN
				UPDATE transaccional.estudiante_institucion
					SET ES_ACTIVO=0,
						USUARIO_MODIFICACION=@USUARIO,
						FECHA_MODIFICACION=GETDATE()
				WHERE ID_ESTUDIANTE_INSTITUCION = @ID_ESTUDIANTE_INSTITUCION_NUEVO
			END

			COMMIT TRANSACTION T1
			SET @RESULT = 1
		END TRY
		BEGIN CATCH
			IF @@ERROR<>0
				BEGIN
					ROLLBACK TRANSACTION T1	   
					SET @RESULT = -1
					PRINT ERROR_MESSAGE()
				END
		END CATCH
	END
	SELECT @RESULT
END
GO


