/**********************************************************************************************************
AUTOR				:	Luis Espinoza
FECHA DE CREACION	:	15/03/2021
LLAMADO POR			:
DESCRIPCION			:	Cierra las clases masivamente de un instituto en un periodo lectivo 
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			15/03/2021		LESPINOZA		Creación
2.0			28/02/2022		JCHAVEZ			Optimización

TEST:  
	EXEC USP_EVALUACION_UPD_CIERRE_CLASES_MASIVA 290,3921,0,0,0,0,0,0,0,0,0,0,'70557821'
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_EVALUACION_UPD_CIERRE_CLASES_MASIVA](
--declare
	@ID_INSTITUCION							INT=290, 
	@ID_PERIODOS_LECTIVOS_POR_INSTITUCION	INT=3921, 
	@ID_SEDE_INSTITUCION					INT=0, 	 
	@ID_CARRERA								INT=0, 
	@ID_UNIDAD_DIDACTICA					INT=0, 
	@ID_PERIODO_ACADEMICO					INT=0,
	@ID_TURNOS_POR_INSTITUCION				INT=0, 
	@ID_SECCION								INT=0, 
	@ID_SEMESTRE_ACADEMICO					INT=0,
	@ID_PROGRAMACION_CLASE					INT =0,	
	@ID_TIPO_ITINERARIO						INT =0, 
	@ID_PLAN_ESTUDIO						INT =0,
	@USUARIO								VARCHAR(20)='00000000'
)
AS
BEGIN
	DECLARE @RESULT INT = 0
	DECLARE @ID_ESTADO_CIERRE INT = 235

	BEGIN TRY
		BEGIN TRAN CerrarClasesMasivo

		SELECT 	 	
			DISTINCT
			PC.ID_SEDE_INSTITUCION  IdSedeInstitucion,
			--SI.NOMBRE_SEDE					Sede,
			PC.ID_TURNOS_POR_INSTITUCION	IdTurnoInstitucion,
			--E_TURNO.VALOR_ENUMERADO			Turno,
			PC.ID_SECCION					IdSeccion,
			--E_SECCION.VALOR_ENUMERADO		Seccion,
			PLXI.ID_PERIODO_LECTIVO,
			--PL.CODIGO_PERIODO_LECTIVO		Periodo_lectivo,
			ME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION,
			PC.ID_PERIODO_ACADEMICO			IdPeriodoClases,
			PA.NOMBRE_PERIODO_ACADEMICO		Periodo_clases,
			isnull(E.CIERRE_PROGRAMACION,234)			AS IdEstadoCierre,
			E.ID_EVALUACION							AS IdEvaluacion,
			--PINS.ID_PERSONAL_INSTITUCION	IdPersonalInstitucion,
			--(CASE WHEN P_D.APELLIDO_PATERNO_PERSONA <> '' THEN  UPPER(P_D.APELLIDO_PATERNO_PERSONA)	+' ' ELSE '' END)  + UPPER(P_D.APELLIDO_MATERNO_PERSONA)	+', '+ dbo.UFN_CAPITALIZAR( P_D.NOMBRE_PERSONA) AS Docente,
			PC.ID_PROGRAMACION_CLASE AS IdProgramacionClase,
			EC1.VALOR_ENUMERADO	AS NombreEstadoCierre,		
			--P_D.ID_TIPO_DOCUMENTO AS IdTipoDocDocente,
			--P_D.NUMERO_DOCUMENTO_PERSONA	AS NumeroDocDocente,
			UD.ID_SEMESTRE_ACADEMICO,
			CXI.ID_CARRERA IdCarrera,
			UDXE.ID_UNIDAD_DIDACTICA,
			PE.ID_PLAN_ESTUDIO IdPlanEstudios,
			PE.NOMBRE_PLAN_ESTUDIOS PlanEstudios
			INTO ##TmpClasesPorCerrar
		FROM  
			transaccional.matricula_estudiante ME 
			INNER JOIN transaccional.programacion_clase_por_matricula_estudiante PCXME ON ME.ID_MATRICULA_ESTUDIANTE= PCXME.ID_MATRICULA_ESTUDIANTE AND PCXME.ES_ACTIVO=1 AND ME.ES_ACTIVO=1
			INNER JOIN transaccional.programacion_clase PC WITH (NOLOCK)  ON PC.ID_PROGRAMACION_CLASE= PCXME.ID_PROGRAMACION_CLASE AND PC.ES_ACTIVO=1
			--INNER JOIN maestro.sede_institucion SI ON SI.ID_SEDE_INSTITUCION= PC.ID_SEDE_INSTITUCION AND SI.ES_ACTIVO=1
			INNER JOIN transaccional.unidades_didacticas_por_programacion_clase UDXPC WITH (NOLOCK) ON UDXPC.ID_PROGRAMACION_CLASE= PC.ID_PROGRAMACION_CLASE AND UDXPC.ES_ACTIVO=1
			INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE WITH (NOLOCK) ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE= UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO=1
			INNER JOIN transaccional.unidad_didactica UD WITH (NOLOCK) ON UD.ID_UNIDAD_DIDACTICA= UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
			INNER JOIN transaccional.modulo M WITH (NOLOCK) ON M.ID_MODULO= UD.ID_MODULO AND M.ES_ACTIVO=1
			INNER JOIN transaccional.plan_estudio PE WITH (NOLOCK) ON PE.ID_PLAN_ESTUDIO= M.ID_PLAN_ESTUDIO AND PE.ES_ACTIVO=1
			INNER JOIN transaccional.carreras_por_institucion CXI WITH (NOLOCK) ON CXI.ID_CARRERAS_POR_INSTITUCION= PE.ID_CARRERAS_POR_INSTITUCION AND CXI.ES_ACTIVO=1
			--INNER JOIN maestro.turnos_por_institucion TXI ON TXI.ID_TURNOS_POR_INSTITUCION= PC.ID_TURNOS_POR_INSTITUCION AND TXI.ES_ACTIVO=1
			--INNER JOIN maestro.turno_equivalencia TE ON TE.ID_TURNO_EQUIVALENCIA= TXI.ID_TURNO_EQUIVALENCIA 
			--INNER JOIN sistema.enumerado E_TURNO ON E_TURNO.ID_ENUMERADO= TE.ID_TURNO
			--INNER JOIN sistema.enumerado E_SECCION ON E_SECCION.ID_ENUMERADO= PC.ID_SECCION
			INNER JOIN transaccional.periodo_academico PA ON PA.ID_PERIODO_ACADEMICO= PC.ID_PERIODO_ACADEMICO AND PA.ES_ACTIVO=1
			INNER JOIN transaccional.estudiante_institucion EI  WITH (NOLOCK)  ON EI.ID_ESTUDIANTE_INSTITUCION= ME.ID_ESTUDIANTE_INSTITUCION AND EI.ID_PLAN_ESTUDIO=PE.ID_PLAN_ESTUDIO AND EI.ES_ACTIVO=1
			--INNER JOIN maestro.persona_institucion PEI WITH (NOLOCK) ON PEI.ID_PERSONA_INSTITUCION= EI.ID_PERSONA_INSTITUCION 
			--INNER JOIN maestro.personal_institucion PINS WITH (NOLOCK) ON PINS.ID_PERSONAL_INSTITUCION= PC.ID_PERSONAL_INSTITUCION AND PINS.ES_ACTIVO=1
			--INNER JOIN maestro.persona_institucion  PEI_D WITH (NOLOCK) ON PEI_D.ID_PERSONA_INSTITUCION=PINS.ID_PERSONA_INSTITUCION
			--INNER JOIN maestro.persona P_D  WITH (NOLOCK) ON P_D.ID_PERSONA= PEI_D.ID_PERSONA
			INNER JOIN transaccional.periodos_lectivos_por_institucion PLXI ON PLXI.ID_PERIODOS_LECTIVOS_POR_INSTITUCION= ME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION  AND PLXI.ES_ACTIVO=1
			--INNER JOIN maestro.periodo_lectivo PL ON PL.ID_PERIODO_LECTIVO= PLXI.ID_PERIODO_LECTIVO 	 
			LEFT  JOIN transaccional.evaluacion E WITH (NOLOCK) ON E.ID_PROGRAMACION_CLASE= PC.ID_PROGRAMACION_CLASE AND E.ID_CARRERA=CXI.ID_CARRERA AND E.ID_UNIDAD_DIDACTICA=UD.ID_UNIDAD_DIDACTICA AND E.ES_ACTIVO=1	 
			LEFT JOIN sistema.enumerado EC1 ON E.CIERRE_PROGRAMACION=EC1.ID_ENUMERADO AND EC1.ESTADO=1
		WHERE		
			ME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION	= @ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND 		
			(PC.ID_SEDE_INSTITUCION					= @ID_SEDE_INSTITUCION OR @ID_SEDE_INSTITUCION=0) AND		
			(UD.ID_UNIDAD_DIDACTICA					= @ID_UNIDAD_DIDACTICA OR @ID_UNIDAD_DIDACTICA=0) AND 
			(PC.ID_PERIODO_ACADEMICO				= @ID_PERIODO_ACADEMICO OR @ID_PERIODO_ACADEMICO=0)	AND
			(PC.ID_TURNOS_POR_INSTITUCION			= @ID_TURNOS_POR_INSTITUCION OR @ID_TURNOS_POR_INSTITUCION=0) AND
			(PC.ID_SECCION							= @ID_SECCION OR @ID_SECCION=0) AND
			(PC.ID_PROGRAMACION_CLASE				= @ID_PROGRAMACION_CLASE OR @ID_PROGRAMACION_CLASE=0) AND
			(PE.ID_TIPO_ITINERARIO					= @ID_TIPO_ITINERARIO OR @ID_TIPO_ITINERARIO=0) AND
			(PE.ID_PLAN_ESTUDIO						= @ID_PLAN_ESTUDIO OR @ID_PLAN_ESTUDIO=0) AND
			(UD.ID_SEMESTRE_ACADEMICO               = @ID_SEMESTRE_ACADEMICO OR @ID_SEMESTRE_ACADEMICO =0) AND 
			(CXI.ID_CARRERA                         = @ID_CARRERA OR @ID_CARRERA =0)

		BEGIN
			DECLARE @NRO_MATRICULADOS INT 
			DECLARE @NRO_EVALUADOS INT 

			SET @NRO_MATRICULADOS = (
				SELECT SUM( CASE WHEN LICENCIAS_PENDIENTES.ID_TIPO_LICENCIA is NOT NULL AND LICENCIAS_PENDIENTES.ID_REINGRESO_ESTUDIANTE IS NULL THEN 0 ELSE 1 END) 
				FROM 
				transaccional.matricula_estudiante TME 
				INNER JOIN transaccional.programacion_clase_por_matricula_estudiante TPCXME ON TME.ID_MATRICULA_ESTUDIANTE= TPCXME.ID_MATRICULA_ESTUDIANTE AND TPCXME.ES_ACTIVO=1 AND TME.ES_ACTIVO=1
				INNER JOIN transaccional.programacion_clase PC WITH (NOLOCK)  ON PC.ID_PROGRAMACION_CLASE= TPCXME.ID_PROGRAMACION_CLASE AND PC.ES_ACTIVO=1	
				INNER JOIN transaccional.unidades_didacticas_por_programacion_clase UDXPC WITH (NOLOCK) ON UDXPC.ID_PROGRAMACION_CLASE= PC.ID_PROGRAMACION_CLASE AND UDXPC.ES_ACTIVO=1
				INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE WITH (NOLOCK) ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE= UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO=1
				INNER JOIN transaccional.unidad_didactica UD WITH (NOLOCK) ON UD.ID_UNIDAD_DIDACTICA= UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1	
				INNER JOIN transaccional.modulo M WITH (NOLOCK) ON M.ID_MODULO=UD.ID_MODULO AND M.ES_ACTIVO=1 
				INNER JOIN transaccional.plan_estudio PE WITH (NOLOCK) ON PE.ID_PLAN_ESTUDIO= M.ID_PLAN_ESTUDIO AND PE.ES_ACTIVO=1
				INNER JOIN transaccional.carreras_por_institucion CXI WITH (NOLOCK) ON CXI.ID_CARRERAS_POR_INSTITUCION= PE.ID_CARRERAS_POR_INSTITUCION AND CXI.ES_ACTIVO=1
				INNER JOIN transaccional.estudiante_institucion EI  WITH (NOLOCK)  ON EI.ID_ESTUDIANTE_INSTITUCION= TME.ID_ESTUDIANTE_INSTITUCION AND EI.ID_PLAN_ESTUDIO=PE.ID_PLAN_ESTUDIO AND EI.ES_ACTIVO=1
				--INNER JOIN maestro.persona_institucion PEI WITH (NOLOCK) ON PEI.ID_PERSONA_INSTITUCION= EI.ID_PERSONA_INSTITUCION 
				--INNER JOIN maestro.persona P WITH (NOLOCK) ON P.ID_PERSONA=PEI.ID_PERSONA
				--INNER JOIN maestro.personal_institucion PINS WITH (NOLOCK) ON PINS.ID_PERSONAL_INSTITUCION= PC.ID_PERSONAL_INSTITUCION AND PINS.ES_ACTIVO=1
				LEFT JOIN transaccional.evaluacion E WITH (NOLOCK) ON E.ID_PROGRAMACION_CLASE= PC.ID_PROGRAMACION_CLASE AND E.ID_CARRERA=CXI.ID_CARRERA AND E.ID_UNIDAD_DIDACTICA=UD.ID_UNIDAD_DIDACTICA AND E.ES_ACTIVO=1
				LEFT JOIN transaccional.evaluacion_detalle E_D WITH (NOLOCK) ON E_D.ID_EVALUACION= E.ID_EVALUACION AND E_D.ES_ACTIVO=1 AND E_D.ID_MATRICULA_ESTUDIANTE= TME.ID_MATRICULA_ESTUDIANTE
				LEFT JOIN (SELECT SUBCONSULTA.ID_ESTUDIANTE_INSTITUCION, MAX (SUBCONSULTA.ID_PERIODOS_LECTIVOS_POR_INSTITUCION) ID_ULT_PERIODO_LECTIVO_INSTITUCION 
							FROM 
							(
								SELECT ID_ESTUDIANTE_INSTITUCION, ID_PERIODOS_LECTIVOS_POR_INSTITUCION FROM 
								transaccional.reserva_matricula	WHERE ES_ACTIVO=1
								UNION
								SELECT ID_ESTUDIANTE_INSTITUCION, ID_PERIODOS_LECTIVOS_POR_INSTITUCION FROM 
								transaccional.licencia_estudiante WHERE ES_ACTIVO=1
							) SUBCONSULTA
							GROUP BY SUBCONSULTA.ID_ESTUDIANTE_INSTITUCION) SUBCONSULTA_ULT_PERIODO_RESERVA_LICENCIA ON SUBCONSULTA_ULT_PERIODO_RESERVA_LICENCIA.ID_ESTUDIANTE_INSTITUCION= TME.ID_ESTUDIANTE_INSTITUCION						
				LEFT JOIN (	
					SELECT  tle.ID_LICENCIA_ESTUDIANTE,ID_ESTUDIANTE_INSTITUCION, ID_TIPO_LICENCIA, VALOR_ENUMERADO, tle.ID_PERIODOS_LECTIVOS_POR_INSTITUCION, tre.ID_REINGRESO_ESTUDIANTE
					FROM 
						transaccional.licencia_estudiante tle
						LEFT JOIN transaccional.reingreso_estudiante tre on tle.ID_LICENCIA_ESTUDIANTE = tre.ID_LICENCIA_ESTUDIANTE AND tre.ES_ACTIVO=1							 
						INNER JOIN sistema.enumerado se_tipo_lic on se_tipo_lic.ID_ENUMERADO= tle.ID_TIPO_LICENCIA						
						WHERE tle.ES_ACTIVO =1							
				) LICENCIAS_PENDIENTES on LICENCIAS_PENDIENTES.ID_ESTUDIANTE_INSTITUCION = TME.ID_ESTUDIANTE_INSTITUCION 
				AND LICENCIAS_PENDIENTES.ID_PERIODOS_LECTIVOS_POR_INSTITUCION= SUBCONSULTA_ULT_PERIODO_RESERVA_LICENCIA.ID_ULT_PERIODO_LECTIVO_INSTITUCION
				WHERE TPCXME.ID_PROGRAMACION_CLASE IN (Select IdProgramacionClase from ##TmpClasesPorCerrar)
				)--1148

			SET @NRO_EVALUADOS = (
				SELECT COUNT(TED.ID_MATRICULA_ESTUDIANTE) FROM transaccional.evaluacion TE
				INNER JOIN transaccional.evaluacion_detalle TED ON TE.ID_EVALUACION = TED.ID_EVALUACION AND TE.ES_ACTIVO=1 AND TED.ES_ACTIVO=1
				WHERE TE.ID_PROGRAMACION_CLASE IN (Select IdProgramacionClase from ##TmpClasesPorCerrar) AND TED.NOTA IS NOT NULL
				)

			/*IF @NRO_EVALUADOS = 0 AND @ID_ESTADO_CIERRE = 235
				SET @RESULT = 2
			ELSE*/ IF @NRO_MATRICULADOS > @NRO_EVALUADOS AND @ID_ESTADO_CIERRE = 235
				SET @RESULT = 2
			ELSE
			BEGIN 
				UPDATE e
				SET		
					CIERRE_PROGRAMACION=@ID_ESTADO_CIERRE,	
					USUARIO_MODIFICACION=@USUARIO,
					FECHA_MODIFICACION=GETDATE()
				FROM transaccional.evaluacion e
				INNER JOIN ##TmpClasesPorCerrar tmp ON tmp.IdProgramacionClase = e.ID_PROGRAMACION_CLASE

				SET @RESULT = @@ROWCOUNT
			END	
        END
	
		DROP TABLE ##TmpClasesPorCerrar				

		SELECT @RESULT

		COMMIT TRAN CerrarClasesMasivo
	END	TRY
	BEGIN CATCH
		SELECT @RESULT
		ROLLBACK TRAN CerrarClasesMasivo
	END CATCH
END