/**********************************************************************************************************
AUTOR				:	Juan Tovar
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Obtener unidades didácticas para la matrícula de un estudiante
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			20/06/2019		JTOVAR			Creación
2.0			05/03/2021		JCHAVEZ			Modificación, se optimizó consulta

TEST:	USP_CONVALIDACION_SEL_DATOS_PLAN_ESTUDIO 1229,348
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_CONVALIDACION_SEL_DATOS_PLAN_ESTUDIO]
(  
	@ID_PLAN_ESTUDIO INT, 
	@ID_CONVALIDACION INT
)  
AS  
BEGIN  
	SET NOCOUNT ON;   
	DECLARE @ID_SEMESTRE_ACADEMICO_MAX INT,
	@NRO_SEMESTRES INT,
	@ESTADO_NO_CONVALIDADO INT =202,
	@ESTADO_CONVALIDADO INT =201,
	@ID_ESTUDIANTE_INSTITUCION INT

	SET @NRO_SEMESTRES =
						(
							SELECT MNF.SEMESTRES_ACADEMICOS FROM transaccional.plan_estudio TPE
							INNER JOIN transaccional.carreras_por_institucion TCI ON TCI.ID_CARRERAS_POR_INSTITUCION=TPE.ID_CARRERAS_POR_INSTITUCION AND TPE.ES_ACTIVO=1 AND TCI.ES_ACTIVO=1
							INNER JOIN db_auxiliar.dbo.UVW_CARRERA MC ON MC.ID_CARRERA= TCI.ID_CARRERA 
							INNER JOIN maestro.nivel_formacion MNF ON MNF.CODIGO_TIPO = MC.TIPO_NIVEL_FORMACION --MNF.ID_NIVEL_FORMACION= MC.ID_NIVEL_FORMACION --reemplazoPorVista
							WHERE TPE.ID_PLAN_ESTUDIO= @ID_PLAN_ESTUDIO
						)
	
	SET @ID_ESTUDIANTE_INSTITUCION = (SELECT ID_ESTUDIANTE_INSTITUCION FROM transaccional.convalidacion WHERE ID_CONVALIDACION= @ID_CONVALIDACION)
	SELECT 
		TUD.ID_UNIDAD_DIDACTICA							IdUnidadDidactica, 
		TUD.ID_SEMESTRE_ACADEMICO						IdSemestreAcademico, 
		ISNULL(MTUD.NOMBRE_TIPO_UNIDAD, 'Curso')		NombreTipoUnidadDidactica,
		TUD.NOMBRE_UNIDAD_DIDACTICA						NombreUnidadDidactica, 
		ISNULL(TUD.CREDITOS,0)							Creditos,
		TUD.HORAS						Horas,		
		CASE WHEN TCD.ID_CONVALIDACION_DETALLE IS NOT NULL THEN TCD.NOTA ELSE 0 END  Nota,
		CASE WHEN TCD.ID_CONVALIDACION_DETALLE IS NOT NULL THEN TCD.ESTADO ELSE @ESTADO_NO_CONVALIDADO END IdEstadoConvalidacion,
		CASE WHEN TCD.ID_CONVALIDACION_DETALLE IS NOT NULL THEN TCD.ID_CONVALIDACION_DETALLE ELSE 0 END	IdConvalidacionDetalle,
		CASE WHEN SUBCONSULTA_MATRICULADOS.ID_UNIDAD_DIDACTICA IS NOT NULL THEN CAST(1 AS BIT) ELSE  CAST(0 AS BIT) END	UnidadMatriculada,
		CASE WHEN SUBCONSULTA_CONVALIDACIONES.ID_UNIDAD_DIDACTICA IS NOT NULL AND SUBCONSULTA_CONVALIDACIONES.ESTADO =@ESTADO_CONVALIDADO THEN CAST(1 AS BIT) ELSE  CAST(0 AS BIT) END	UnidadConvalidadaOtraConvalidacion
	FROM transaccional.unidad_didactica TUD
	INNER JOIN transaccional.modulo TM ON TM.ID_MODULO= TUD.ID_MODULO AND TUD.ES_ACTIVO=1 AND TM.ES_ACTIVO=1
	LEFT JOIN maestro.tipo_unidad_didactica MTUD ON MTUD.ID_TIPO_UNIDAD_DIDACTICA= TUD.ID_TIPO_UNIDAD_DIDACTICA
	LEFT JOIN transaccional.convalidacion_detalle TCD ON TUD.ID_UNIDAD_DIDACTICA= TCD.ID_UNIDAD_DIDACTICA AND TCD.ES_ACTIVO=1 AND ID_CONVALIDACION= @ID_CONVALIDACION 	
	LEFT JOIN (	SELECT UD.ID_UNIDAD_DIDACTICA 
				FROM transaccional.convalidacion C 
				INNER JOIN transaccional.matricula_estudiante ME ON C.ID_ESTUDIANTE_INSTITUCION = ME.ID_ESTUDIANTE_INSTITUCION AND C.ES_ACTIVO=1 AND ME.ES_ACTIVO=1
				INNER JOIN transaccional.programacion_clase_por_matricula_estudiante PCXME ON PCXME.ID_MATRICULA_ESTUDIANTE= ME.ID_MATRICULA_ESTUDIANTE AND PCXME.ES_ACTIVO=1
				INNER JOIN transaccional.unidades_didacticas_por_programacion_clase UDXPC on PCXME.ID_PROGRAMACION_CLASE = UDXPC.ID_PROGRAMACION_CLASE AND UDXPC.ES_ACTIVO = 1 
				INNER JOIN transaccional.unidades_didacticas_por_enfoque UDXE ON UDXE.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE= UDXPC.ID_UNIDADES_DIDACTICAS_POR_ENFOQUE AND UDXE.ES_ACTIVO=1
				INNER JOIN transaccional.unidad_didactica UD ON UD.ID_UNIDAD_DIDACTICA = UDXE.ID_UNIDAD_DIDACTICA AND UD.ES_ACTIVO=1
				WHERE C.ID_CONVALIDACION = @ID_CONVALIDACION
	) SUBCONSULTA_MATRICULADOS ON SUBCONSULTA_MATRICULADOS.ID_UNIDAD_DIDACTICA= TUD.ID_UNIDAD_DIDACTICA  
	LEFT JOIN (	SELECT tcd.ID_UNIDAD_DIDACTICA, tcd.ESTADO 
				FROM transaccional.convalidacion tc 
				INNER JOIN transaccional.convalidacion_detalle tcd on tc.ID_CONVALIDACION= tcd.ID_CONVALIDACION and tc.ES_ACTIVO=1 and tcd.ES_ACTIVO=1
				WHERE tc.ID_ESTUDIANTE_INSTITUCION=@ID_ESTUDIANTE_INSTITUCION
				AND tc.ID_CONVALIDACION <> @ID_CONVALIDACION
	)  SUBCONSULTA_CONVALIDACIONES ON SUBCONSULTA_CONVALIDACIONES.ID_UNIDAD_DIDACTICA = TUD.ID_UNIDAD_DIDACTICA
 	WHERE TM.ID_PLAN_ESTUDIO=@ID_PLAN_ESTUDIO 
		AND TUD.ID_SEMESTRE_ACADEMICO IN (SELECT TOP (@NRO_SEMESTRES) *  FROM dbo.UFN_SPLIT('111|112|113|114|115|116|137|138','|'))

END
GO


