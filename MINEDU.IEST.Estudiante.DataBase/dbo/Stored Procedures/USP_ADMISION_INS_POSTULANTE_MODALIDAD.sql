--/***********************************************************************************************************************************************
--AUTOR				:	Juan Tovar
--FECHA DE CREACION	:	20/06/2019
--LLAMADO POR			:
--DESCRIPCION			:	Inserta un registro del postulante por modalidad del proceso de admisión
--REVISIONES			:
-------------------------------------------------------------------------------------------------------------
--VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-------------------------------------------------------------------------------------------------------------
----  TEST:		
--/*
--	1.0			09/01/2020		MALVA          MODIFICACIÓN, SE CONSIDERA ACTUALIZACIÓN DE TABLA PERSONA(ID_LENGUA_MATERNA) EN CASO @ID_PERSONA != 0. 
--	1.1			07/02/2020		MALVA          MODIFICACIÓN, EN LA INSERCIÓN DE INSTITUCIÓN BÁSICA DE TIPO EBA
--											   SE CONSIDERA QUE NO TRAE CÓDIGO MODULAR. 
--*/
--************************************************************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_ADMISION_INS_POSTULANTE_MODALIDAD]
(
	@ID_PERSONA						INT,
	@ID_PERSONA_INSTITUCION			INT,
	@ID_POSTULANTE_MODALIDAD		INT,

	@ID_TIPO_DOCUMENTO				INT,
	@NUMERO_DOCUMENTO_PERSONA		VARCHAR(16),
	@NOMBRE_PERSONA					VARCHAR(50),
	@APELLIDO_PATERNO_PERSONA		VARCHAR(40),
	@APELLIDO_MATERNO_PERSONA		VARCHAR(40),
	@FECHA_NACIMIENTO_PERSONA		DATETIME,
	@SEXO_PERSONA					INT,
	@ID_LENGUA_MATERNA				INT,
	@ES_DISCAPACITADO				INT,
	@PAIS_NACIMIENTO				INT,
	@UBIGEO_NACIMIENTO				VARCHAR(6),

	@ID_TIPO_DOCUMENTO_APODERADO	INT,
	@NUMERO_DOCUMENTO_APODERADO		VARCHAR(16),
	@NOMBRE_APODERADO				VARCHAR(50),
	@APELLIDO_APODERADO				VARCHAR(150),
	@ID_TIPO_PARENTEZCO				INT,

	@ID_INSTITUCION					INT,
	@ESTADO_CIVIL					INT,
	@PAIS_PERSONA					INT,
	@UBIGEO_PERSONA					VARCHAR(6),
	@DIRECCION_PERSONA				VARCHAR(255),
	@TELEFONO						VARCHAR(15),
	@CELULAR						VARCHAR(15),
	@CORREO							VARCHAR(100),
	@ID_TIPO_DISCAPACIDAD			INT,

	@ID_INSTITUCION_BASICA			INT,
	@ANIO_EGRESO					INT,
	@CODIGO_POSTULANTE				VARCHAR(16),
	--@CODIGO_ESTUDIANTE				VARCHAR(16),
	@ID_TIPO_INSTITUCION_BASICA		INT,
	@CODIGO_MODULAR					VARCHAR(7),
	@NOMBRE_IE_BASICA				VARCHAR(150),
	@ID_NIVEL_IE_BASICA				INT,
	@ID_TIPO_GESTION_IE_BASICA		INT,
	@DIRECCION_IE_BASICA			VARCHAR(255),
	@ID_PAIS_BASICA					INT,
	@UBIGEO_IE_BASICA				VARCHAR(6),

	@ARCHIVO_FOTO					VARCHAR(50),
	@ARCHIVO_RUTA					VARCHAR(255),
	@ID_MODALIDAD_PROCESO_ADMISION	INT,
	@ID_TIPO_MODALIDAD_INSTITUCION	INT,
	@ID_EXAMEN_ADMISION_SEDE		INT,	
	@OPCIONES						VARCHAR(MAX),

	@ID_TIPO_PAGO					INT,
	@NUMERO_COMPROBANTE				VARCHAR(16),
	@MONTO_PAGO						DECIMAL(10,2),
	@MOTIVO_EXONERACION				VARCHAR(255),

	@REQUISITOS						VARCHAR(MAX),

	@USUARIO						VARCHAR(20)
)
AS
BEGIN
	DECLARE @RESULT INT = 0
	DECLARE @ID_PERIODO_LECTIVO_INSTITUCION INT
	DECLARE @ID_PERSONAL_INSTITUCION INT

	SET @ID_PERIODO_LECTIVO_INSTITUCION = (SELECT TOP 1 padmp.ID_PERIODOS_LECTIVOS_POR_INSTITUCION FROM transaccional.modalidades_por_proceso_admision mppadm INNER JOIN transaccional.proceso_admision_periodo padmp
	                                       ON mppadm.ID_PROCESO_ADMISION_PERIODO = padmp.ID_PROCESO_ADMISION_PERIODO
										   WHERE mppadm.ID_MODALIDADES_POR_PROCESO_ADMISION = @ID_MODALIDAD_PROCESO_ADMISION and mppadm.ES_ACTIVO=1 and padmp.ES_ACTIVO=1)

	SET @ID_PERSONAL_INSTITUCION = (SELECT TOP 1 plinstitucion.ID_PERSONAL_INSTITUCION FROM maestro.personal_institucion plinstitucion
	                                WHERE plinstitucion.ID_PERSONA_INSTITUCION = @ID_PERSONA_INSTITUCION AND @ID_PERIODO_LECTIVO_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION)


IF EXISTS (SELECT TOP 1 eam.ID_EVALUADOR_ADMISION_MODALIDAD FROM transaccional.evaluador_admision_modalidad eam 
           WHERE eam.ID_PERSONAL_INSTITUCION = @ID_PERSONAL_INSTITUCION AND eam.ID_MODALIDADES_POR_PROCESO_ADMISION = @ID_MODALIDAD_PROCESO_ADMISION AND eam.ES_ACTIVO=1)
BEGIN

SET @RESULT = -318


END
ELSE
BEGIN

	BEGIN TRY
	BEGIN TRANSACTION T1
		DECLARE @REGISTRO_EXISTE BIT = 0, @ID_INSTITUCION_BASICA_PREVIO INT 
			IF  @ID_TIPO_INSTITUCION_BASICA = 70   -- IE BÁSICA EBR 
			AND EXISTS (SELECT TOP 1 ID_INSTITUCION_BASICA FROM maestro.institucion_basica (NOLOCK)
									WHERE ID_TIPO_INSTITUCION_BASICA = @ID_TIPO_INSTITUCION_BASICA AND CODIGO_MODULAR_IE_BASICA = @CODIGO_MODULAR
									AND ID_PAIS = @ID_PAIS_BASICA AND ID_NIVEL_IE_BASICA=@ID_NIVEL_IE_BASICA 
									AND ID_TIPO_GESTION_IE_BASICA= @ID_TIPO_GESTION_IE_BASICA)
									SET @REGISTRO_EXISTE =1
		--GRABO LA INSTITUCION BASICA		
		IF @ID_INSTITUCION_BASICA = 0
		BEGIN				
			IF @REGISTRO_EXISTE = 0
			BEGIN
				INSERT INTO maestro.institucion_basica(
					ID_TIPO_INSTITUCION_BASICA,
					CODIGO_MODULAR_IE_BASICA,
					NOMBRE_IE_BASICA,
					ID_NIVEL_IE_BASICA,
					ID_TIPO_GESTION_IE_BASICA,
					DIRECCION_IE_BASICA,
					ID_PAIS,
					UBIGEO_IE_BASICA,
					ESTADO,
					USUARIO_CREACION,
					FECHA_CREACION
				)VALUES(
					@ID_TIPO_INSTITUCION_BASICA,
					@CODIGO_MODULAR,
					@NOMBRE_IE_BASICA,
					@ID_NIVEL_IE_BASICA,
					@ID_TIPO_GESTION_IE_BASICA,
					@DIRECCION_IE_BASICA,
					@ID_PAIS_BASICA,
					RIGHT(REPLICATE('0',6) + @UBIGEO_IE_BASICA,6),
					1,
					@USUARIO,
					GETDATE()
				)

				SET @ID_INSTITUCION_BASICA = CONVERT(INT,@@IDENTITY)
			END
			ELSE
			BEGIN
				SET @ID_INSTITUCION_BASICA = (SELECT TOP 1 ID_INSTITUCION_BASICA FROM maestro.institucion_basica (NOLOCK)
					WHERE ID_TIPO_INSTITUCION_BASICA = @ID_TIPO_INSTITUCION_BASICA AND CODIGO_MODULAR_IE_BASICA = @CODIGO_MODULAR
					AND ID_PAIS = @ID_PAIS_BASICA
					AND ID_NIVEL_IE_BASICA=@ID_NIVEL_IE_BASICA AND ID_TIPO_GESTION_IE_BASICA= @ID_TIPO_GESTION_IE_BASICA)

				UPDATE maestro.institucion_basica
				SET NOMBRE_IE_BASICA = @NOMBRE_IE_BASICA,
					ID_NIVEL_IE_BASICA = @ID_NIVEL_IE_BASICA,
					ID_TIPO_GESTION_IE_BASICA = @ID_TIPO_GESTION_IE_BASICA,
					DIRECCION_IE_BASICA = @DIRECCION_IE_BASICA,
					UBIGEO_IE_BASICA = RIGHT(REPLICATE('0',6) + @UBIGEO_IE_BASICA,6),
					USUARIO_MODIFICACION = @USUARIO,
					FECHA_MODIFICACION = GETDATE()
				WHERE 
					ID_INSTITUCION_BASICA = @ID_INSTITUCION_BASICA
			END
		END
		ELSE
		BEGIN
			UPDATE maestro.institucion_basica
			SET ID_TIPO_INSTITUCION_BASICA = @ID_TIPO_INSTITUCION_BASICA,
				CODIGO_MODULAR_IE_BASICA = @CODIGO_MODULAR,
				NOMBRE_IE_BASICA = @NOMBRE_IE_BASICA,
				ID_NIVEL_IE_BASICA = @ID_NIVEL_IE_BASICA,
				ID_TIPO_GESTION_IE_BASICA = @ID_TIPO_GESTION_IE_BASICA,
				DIRECCION_IE_BASICA = @DIRECCION_IE_BASICA,
				UBIGEO_IE_BASICA = RIGHT(REPLICATE('0',6) + @UBIGEO_IE_BASICA,6),
				USUARIO_MODIFICACION = @USUARIO,
				FECHA_MODIFICACION = GETDATE()
			WHERE 
				ID_INSTITUCION_BASICA = @ID_INSTITUCION_BASICA	
		END		
		IF @ID_PERSONA = 0
		BEGIN
			IF NOT EXISTS(SELECT TOP 1 ID_PERSONA FROM maestro.persona (NOLOCK)
							WHERE ESTADO = 1 AND ID_TIPO_DOCUMENTO = @ID_TIPO_DOCUMENTO 
							AND NUMERO_DOCUMENTO_PERSONA=@NUMERO_DOCUMENTO_PERSONA)
			BEGIN			
				INSERT INTO maestro.persona(
					ID_TIPO_DOCUMENTO,
					NUMERO_DOCUMENTO_PERSONA,
					NOMBRE_PERSONA,
					APELLIDO_PATERNO_PERSONA,
					APELLIDO_MATERNO_PERSONA,
					FECHA_NACIMIENTO_PERSONA,
					SEXO_PERSONA,
					ID_LENGUA_MATERNA,
					ES_DISCAPACITADO,
					UBIGEO_NACIMIENTO,
					PAIS_NACIMIENTO,
					ESTADO,
					USUARIO_CREACION,
					FECHA_CREACION
				)VALUES(
					@ID_TIPO_DOCUMENTO,
					@NUMERO_DOCUMENTO_PERSONA,
					@NOMBRE_PERSONA,
					@APELLIDO_PATERNO_PERSONA,
					@APELLIDO_MATERNO_PERSONA,
					@FECHA_NACIMIENTO_PERSONA,
					@SEXO_PERSONA,
					@ID_LENGUA_MATERNA,
					@ES_DISCAPACITADO,
					RIGHT(REPLICATE('0',6) + @UBIGEO_NACIMIENTO,6),
					@PAIS_NACIMIENTO,
					1,
					@USUARIO,
					GETDATE()
				)				
				SET @ID_PERSONA = CONVERT(INT,@@IDENTITY)				
			END	
			--ELSE
			--BEGIN
			--	UPDATE maestro.persona 
			--	SET ID_LENGUA_MATERNA = @ID_LENGUA_MATERNA
			--	WHERE ID_PERSONA= @ID_PERSONA			
			--END
		END	
		ELSE
		BEGIN
				UPDATE maestro.persona 
				SET ID_LENGUA_MATERNA = @ID_LENGUA_MATERNA
				WHERE ID_PERSONA= @ID_PERSONA			
		END	
		IF @ID_PERSONA_INSTITUCION = 0
		BEGIN
			IF NOT EXISTS(SELECT TOP 1 ID_PERSONA_INSTITUCION FROM maestro.persona_institucion (NOLOCK)
							WHERE ESTADO = 1 AND ID_PERSONA = @ID_PERSONA AND ID_INSTITUCION = @ID_INSTITUCION)
			BEGIN
				INSERT INTO maestro.persona_institucion(
					ID_PERSONA,
					ESTADO_CIVIL,
					PAIS_PERSONA,
					UBIGEO_PERSONA,
					DIRECCION_PERSONA,
					TELEFONO,
					CELULAR,
					CORREO,
					ID_TIPO_DISCAPACIDAD,
					ID_GRADO_PROFESIONAL,					
					ID_INSTITUCION,
					NIVEL_EDUCATIVO,
					ESTADO,
					USUARIO_CREACION,
					FECHA_CREACION
				)VALUES(
					@ID_PERSONA,
					@ESTADO_CIVIL,
					@PAIS_PERSONA,
					RIGHT(REPLICATE('0',6) + @UBIGEO_PERSONA,6),
					@DIRECCION_PERSONA,
					@TELEFONO,
					@CELULAR,
					@CORREO,
					@ID_TIPO_DISCAPACIDAD,
					0,
					@ID_INSTITUCION,
					0,
					1,
					@USUARIO,
					GETDATE()					
				)
				
				SET @ID_PERSONA_INSTITUCION = CONVERT(INT,@@IDENTITY)				
			END			
		END
		ELSE
		BEGIN
			UPDATE maestro.persona_institucion
			SET ESTADO_CIVIL = @ESTADO_CIVIL,
				PAIS_PERSONA = @PAIS_PERSONA,
				UBIGEO_PERSONA = RIGHT(REPLICATE('0',6) + @UBIGEO_PERSONA,6),
				DIRECCION_PERSONA = @DIRECCION_PERSONA,
				TELEFONO = @TELEFONO,
				CELULAR = @CELULAR,
				CORREO = @CORREO,
				ID_TIPO_DISCAPACIDAD = @ID_TIPO_DISCAPACIDAD,
				ESTADO = 1,
				USUARIO_MODIFICACION = @USUARIO,
				FECHA_MODIFICACION = GETDATE()
			WHERE ID_PERSONA_INSTITUCION = @ID_PERSONA_INSTITUCION
		END		
		IF @ID_POSTULANTE_MODALIDAD = 0
		BEGIN
			IF NOT EXISTS(SELECT TOP 1 ID_POSTULANTES_POR_MODALIDAD FROM transaccional.postulantes_por_modalidad
							WHERE ES_ACTIVO = 1 AND ID_PERSONA_INSTITUCION = @ID_PERSONA_INSTITUCION
							AND ID_MODALIDADES_POR_PROCESO_ADMISION = @ID_MODALIDAD_PROCESO_ADMISION)
			BEGIN 			
				INSERT INTO transaccional.postulantes_por_modalidad(
					ID_MODALIDADES_POR_PROCESO_ADMISION,
					ID_TIPOS_MODALIDAD_POR_INSTITUCION,
					ID_EXAMEN_ADMISION_SEDE,
					ID_PERSONA_INSTITUCION,
					ID_INSTITUCION_BASICA,
					CODIGO_POSTULANTE,
					--CODIGO_ESTUDIANTE,
					ANIO_EGRESO,
					ID_TIPO_DOCUMENTO_APODERADO,
					NUMERO_DOCUMENTO_APODERADO,
					NOMBRE_APODERADO,
					APELLIDO_APODERADO,
					ID_TIPO_PARENTEZCO,
					ID_TIPO_PAGO,
					ARCHIVO_FOTO,
					ARCHIVO_RUTA,
					NUMERO_COMPROBANTE,
					MONTO_PAGO,
					MOTIVO_EXONERACION,
					ES_ACTIVO,
					ESTADO,
					USUARIO_CREACION,
					FECHA_CREACION
				)VALUES(
					@ID_MODALIDAD_PROCESO_ADMISION,
					@ID_TIPO_MODALIDAD_INSTITUCION,
					@ID_EXAMEN_ADMISION_SEDE,
					@ID_PERSONA_INSTITUCION,
					@ID_INSTITUCION_BASICA,
					@CODIGO_POSTULANTE,
					--@CODIGO_ESTUDIANTE,
					case when @ANIO_EGRESO = 0 then null else @ANIO_EGRESO END,
					@ID_TIPO_DOCUMENTO_APODERADO,
					@NUMERO_DOCUMENTO_APODERADO,
					@NOMBRE_APODERADO,
					@APELLIDO_APODERADO,
					@ID_TIPO_PARENTEZCO,
					@ID_TIPO_PAGO,
					@ARCHIVO_FOTO,
					@ARCHIVO_RUTA,
					@NUMERO_COMPROBANTE,
					@MONTO_PAGO,
					@MOTIVO_EXONERACION,
					1,
					1,
					@USUARIO,
					GETDATE()
				)
				SET @ID_POSTULANTE_MODALIDAD = CONVERT(INT,@@IDENTITY)
			END
			ELSE
				BEGIN					
					RAISERROR('ERROR DE INSERCION',-1,-1) WITH SETERROR
				END
		END
		ELSE
			UPDATE transaccional.postulantes_por_modalidad
			SET ID_MODALIDADES_POR_PROCESO_ADMISION = @ID_MODALIDAD_PROCESO_ADMISION,
				ID_TIPOS_MODALIDAD_POR_INSTITUCION = @ID_TIPO_MODALIDAD_INSTITUCION,
				ID_EXAMEN_ADMISION_SEDE = @ID_EXAMEN_ADMISION_SEDE,
				ID_INSTITUCION_BASICA = @ID_INSTITUCION_BASICA,
				ANIO_EGRESO = @ANIO_EGRESO,
				ID_TIPO_DOCUMENTO_APODERADO = @ID_TIPO_DOCUMENTO_APODERADO,
				NUMERO_DOCUMENTO_APODERADO = @NUMERO_DOCUMENTO_APODERADO,
				NOMBRE_APODERADO = @NOMBRE_APODERADO,
				APELLIDO_APODERADO = @APELLIDO_APODERADO,
				ID_TIPO_PARENTEZCO = @ID_TIPO_PARENTEZCO,
				ARCHIVO_FOTO = @ARCHIVO_FOTO,
				ARCHIVO_RUTA = @ARCHIVO_RUTA,
				ID_TIPO_PAGO = @ID_TIPO_PAGO,
				NUMERO_COMPROBANTE = @NUMERO_COMPROBANTE,
				MONTO_PAGO = @MONTO_PAGO,
				MOTIVO_EXONERACION = @MOTIVO_EXONERACION,
				USUARIO_MODIFICACION = @USUARIO,
				FECHA_MODIFICACION = GETDATE()
			WHERE ID_POSTULANTES_POR_MODALIDAD = @ID_POSTULANTE_MODALIDAD		

		--OPCIONES
		MERGE INTO transaccional.opciones_por_postulante AS TARGET
		USING (
			SELECT	@ID_POSTULANTE_MODALIDAD ID_POSTULANTES_POR_MODALIDAD,
					CONVERT(INT,SUBSTRING(SplitData,0,CHARINDEX(':',SplitData))) ID_META_CARRERA_INSTITUCION_DETALLE,
					CONVERT(INT,SUBSTRING(SplitData,CHARINDEX(':',SplitData)+1,LEN(SplitData))) ORDEN
			FROM dbo.UFN_SPLIT(UPPER(@OPCIONES), '|')				
		) AS SOURCE ON TARGET.ID_POSTULANTES_POR_MODALIDAD = SOURCE.ID_POSTULANTES_POR_MODALIDAD
			AND TARGET.ID_META_CARRERA_INSTITUCION_DETALLE = SOURCE.ID_META_CARRERA_INSTITUCION_DETALLE	
		WHEN MATCHED
		THEN
			UPDATE 
			SET ES_ACTIVO = 1,
				ORDEN = SOURCE.ORDEN,
				USUARIO_MODIFICACION = @USUARIO,		
				FECHA_MODIFICACION = GETDATE()
		WHEN NOT MATCHED BY TARGET
		THEN
			INSERT (
				ID_POSTULANTES_POR_MODALIDAD,
				ID_META_CARRERA_INSTITUCION_DETALLE,
				ORDEN,
				ES_ACTIVO,
				ESTADO,
				USUARIO_CREACION,
				FECHA_CREACION
			) VALUES (
				SOURCE.ID_POSTULANTES_POR_MODALIDAD,
				SOURCE.ID_META_CARRERA_INSTITUCION_DETALLE,
				SOURCE.ORDEN,
				1,
				1,
				@USUARIO,
				GETDATE()
			)
		WHEN NOT MATCHED BY SOURCE AND TARGET.ID_POSTULANTES_POR_MODALIDAD = @ID_POSTULANTE_MODALIDAD
		THEN
			UPDATE 
			SET ES_ACTIVO = 0,
				USUARIO_MODIFICACION = @USUARIO,		
				FECHA_MODIFICACION = GETDATE();
		--REQUISITOS
		MERGE INTO transaccional.requisitos_por_postulante AS TARGET
		USING (
			SELECT @ID_POSTULANTE_MODALIDAD ID_POSTULANTES_POR_MODALIDAD,SplitData ID_REQUISITOS_POR_TIPO_MODALIDAD 
			FROM dbo.UFN_SPLIT(UPPER(@REQUISITOS), '|')				
		) AS SOURCE ON TARGET.ID_POSTULANTES_POR_MODALIDAD = SOURCE.ID_POSTULANTES_POR_MODALIDAD
			AND TARGET.ID_REQUISITOS_POR_TIPO_MODALIDAD = SOURCE.ID_REQUISITOS_POR_TIPO_MODALIDAD	
		WHEN MATCHED
		THEN
			UPDATE 
			SET ES_ACTIVO = 1,
				USUARIO_MODIFICACION = @USUARIO,		
				FECHA_MODIFICACION = GETDATE()
		WHEN NOT MATCHED BY TARGET
		THEN
			INSERT (
				ID_POSTULANTES_POR_MODALIDAD,
				ID_REQUISITOS_POR_TIPO_MODALIDAD,
				ES_ACTIVO,
				ESTADO,
				USUARIO_CREACION,
				FECHA_CREACION
			) VALUES (
				SOURCE.ID_POSTULANTES_POR_MODALIDAD,
				SOURCE.ID_REQUISITOS_POR_TIPO_MODALIDAD,
				1,
				1,
				@USUARIO,
				GETDATE()
			)
		WHEN NOT MATCHED BY SOURCE AND TARGET.ID_POSTULANTES_POR_MODALIDAD = @ID_POSTULANTE_MODALIDAD
		THEN
			UPDATE 
			SET ES_ACTIVO = 0,
				USUARIO_MODIFICACION = @USUARIO,		
				FECHA_MODIFICACION = GETDATE();
		
		COMMIT TRANSACTION T1	
		SET @RESULT = 1			
	END TRY
	BEGIN CATCH
		IF @@ERROR = 50000
		BEGIN
			ROLLBACK TRANSACTION T1	   
			SET @RESULT = -180
		END
		ELSE
			IF @@ERROR <> 0
			BEGIN
				ROLLBACK TRANSACTION T1	   
				SET @RESULT = -1
			END
			ELSE
			BEGIN
				ROLLBACK TRANSACTION T1	   
				PRINT ERROR_MESSAGE();  
				SET @RESULT = -180
			END
	END CATCH
END  --JTOVAR
	SELECT @RESULT
END

/*
select * from maestro.persona_institucion
select * from transaccional.requisitos_por_postulante
select * from transaccional.postulantes_por_modalidad
select * from maestro.persona
select * from maestro.institucion_basica
*/
GO


