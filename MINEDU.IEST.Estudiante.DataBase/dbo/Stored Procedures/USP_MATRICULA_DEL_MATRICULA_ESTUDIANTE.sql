/**********************************************************************************************************
AUTOR				:	Juan Tovar
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Elimina el registro de la matricula programada para el estudiante
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			20/06/2019		JTOVAR			CREACIÓN
1.1			31/01/2020		MALVA			SE AÑADE PARÁMETRO @ID_INSTITUCION PARA VERIFICAR SI ESTÁ PERMITIDO ELIMINAR REGISTRO. 
1.2			04/11/2021		JCHAVEZ			SE AÑADE MATCH ID_PERIODOS_LECTIVOS_POR_INSTITUCION EN VALIDACIÓN
1.3			05/01/2022		JCHAVEZ			SE AÑADE LA ELIMINACIÓN DE NOTAS DE EFSRT

  TEST:		USP_MATRICULA_DEL_MATRICULA_ESTUDIANTE 1106, 1130,5526, 'MALVA'
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_MATRICULA_DEL_MATRICULA_ESTUDIANTE]
(
	@ID_INSTITUCION						INT,
	@ID_MATRICULA_ESTUDIANTE			INT,
	@ID_PERIODO_LECTIVO_INSTITUCION		INT,
	@USUARIO							VARCHAR(20)
)
AS
BEGIN
SET NOCOUNT ON;
	DECLARE @RESULT INT, @ID_INSTITUCION_CONSULTA INT = 0

	SELECT @ID_INSTITUCION_CONSULTA = plxi.ID_INSTITUCION FROM transaccional.matricula_estudiante me
	INNER JOIN transaccional.periodos_lectivos_por_institucion plxi ON me.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = plxi.ID_PERIODOS_LECTIVOS_POR_INSTITUCION 
	AND me.ES_ACTIVO=1 AND plxi.ES_ACTIVO=1	
	WHERE me.ID_MATRICULA_ESTUDIANTE = @ID_MATRICULA_ESTUDIANTE 

	IF @ID_INSTITUCION <> @ID_INSTITUCION_CONSULTA
		SET @RESULT = -362
	ELSE IF EXISTS (SELECT TOP 1 mestu.ID_ESTUDIANTE_INSTITUCION FROM transaccional.estudiante_institucion einsti INNER JOIN transaccional.matricula_estudiante mestu
            ON einsti.ID_ESTUDIANTE_INSTITUCION = mestu.ID_ESTUDIANTE_INSTITUCION INNER JOIN transaccional.evaluacion_detalle edet
            ON mestu.ID_MATRICULA_ESTUDIANTE = edet.ID_MATRICULA_ESTUDIANTE 
            WHERE mestu.ID_MATRICULA_ESTUDIANTE = @ID_MATRICULA_ESTUDIANTE AND mestu.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION 
			AND einsti.ES_ACTIVO=1 AND mestu.ES_ACTIVO=1 AND edet.ES_ACTIVO=1 AND edet.NOTA IS NOT NULL
			)
			OR EXISTS(SELECT TOP 1 lestu.ID_LICENCIA_ESTUDIANTE from transaccional.matricula_estudiante mestu INNER JOIN transaccional.estudiante_institucion einsti
			ON mestu.ID_ESTUDIANTE_INSTITUCION = einsti.ID_ESTUDIANTE_INSTITUCION INNER JOIN transaccional.licencia_estudiante lestu
			ON einsti.ID_ESTUDIANTE_INSTITUCION = lestu.ID_ESTUDIANTE_INSTITUCION
			WHERE mestu.ID_MATRICULA_ESTUDIANTE =  @ID_MATRICULA_ESTUDIANTE
			AND mestu.ID_PERIODOS_LECTIVOS_POR_INSTITUCION =  @ID_PERIODO_LECTIVO_INSTITUCION AND lestu.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION
			AND mestu.ES_ACTIVO = 1 AND einsti.ES_ACTIVO = 1 AND lestu.ES_ACTIVO = 1 
			)
			OR EXISTS(SELECT TOP 1 restu.ID_RETIRO_ESTUDIANTE from transaccional.matricula_estudiante mestu INNER JOIN transaccional.estudiante_institucion einsti
			ON mestu.ID_ESTUDIANTE_INSTITUCION = einsti.ID_ESTUDIANTE_INSTITUCION INNER JOIN transaccional.retiro_estudiante restu
			ON einsti.ID_ESTUDIANTE_INSTITUCION = restu.ID_ESTUDIANTE_INSTITUCION
			WHERE mestu.ID_MATRICULA_ESTUDIANTE = @ID_MATRICULA_ESTUDIANTE
			AND mestu.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION AND restu.ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_INSTITUCION
			AND mestu.ES_ACTIVO = 1 and einsti.ES_ACTIVO = 1 and restu.ES_ACTIVO = 1 )
			
			SET @RESULT =-162
	ELSE
	BEGIN
		BEGIN TRANSACTION T1
		BEGIN TRY
			UPDATE transaccional.matricula_estudiante
			SET		ES_ACTIVO=0,
					USUARIO_MODIFICACION = @USUARIO,
					FECHA_MODIFICACION = GETDATE()
			WHERE ID_MATRICULA_ESTUDIANTE= @ID_MATRICULA_ESTUDIANTE

			UPDATE transaccional.programacion_clase_por_matricula_estudiante
			SET		ES_ACTIVO=0,
					USUARIO_MODIFICACION = @USUARIO,
					FECHA_MODIFICACION = GETDATE()
			WHERE ID_MATRICULA_ESTUDIANTE= @ID_MATRICULA_ESTUDIANTE

			UPDATE transaccional.evaluacion_experiencia_formativa
			SET		NOTA=NULL, ES_ACTIVO=0,
					USUARIO_MODIFICACION = @USUARIO,
					FECHA_MODIFICACION = GETDATE()
			WHERE ID_MATRICULA_ESTUDIANTE= @ID_MATRICULA_ESTUDIANTE

			COMMIT TRANSACTION T1
			SET @RESULT = 1
		END TRY
		BEGIN CATCH
			IF @@ERROR<>0
				BEGIN
					ROLLBACK TRANSACTION T1	   
					SET @RESULT = -1
					PRINT ERROR_MESSAGE()
				END
		END CATCH			  
	END
	SELECT @RESULT
END
GO


