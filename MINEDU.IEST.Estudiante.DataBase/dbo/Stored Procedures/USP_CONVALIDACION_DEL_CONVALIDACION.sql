/**********************************************************************************************************
AUTOR				:	Juan Tovar
FECHA DE CREACION	:	20/06/2019
LLAMADO POR			:
DESCRIPCION			:	Elimina un registro de matricula por convalidación
REVISIONES			:
-----------------------------------------------------------------------------------------------------------
VERSIÓN		FECHA MODIF.	USUARIO			DESCRIPCIÓN
-----------------------------------------------------------------------------------------------------------
1.0			20/06/2019		JTOVAR			CREACIÓN
1.1			30/01/2020		MALVA           SE AÑADE PARÁMETRO @ID_INSTITUCION PARA VERIFICAR SI ESTÁ PERMITIDO ELIMINAR REGISTRO. 
1.2			07/02/2022		JCHAVEZ			SE MODIFICÓ VALIDACIÓN -329	PARA VALIDAR PERIODO DE CLASES Y NO CLASES CERRADAS

  TEST:  
			USP_CONVALIDACION_DEL_CONVALIDACION 1106, 53, 'MALVA'
**********************************************************************************************************/
CREATE PROCEDURE [dbo].[USP_CONVALIDACION_DEL_CONVALIDACION]
(
	@ID_INSTITUCION				INT, 
	@ID_CONVALIDACION			INT,
	@USUARIO					VARCHAR(20)
)
AS
BEGIN
SET NOCOUNT ON;
	DECLARE @RESULT INT, @ID_INSTITUCION_CONSULTA INT = 0, 	@ID_PERIODO_LECTIVO_POR_INSTITUCION INT, @ID_PERIODO_ACADEMICO INT, @ID_PROGRAMACION_CLASE INT
	
	SELECT @ID_INSTITUCION_CONSULTA = plxi.ID_INSTITUCION FROM transaccional.convalidacion c
	INNER JOIN transaccional.periodos_lectivos_por_institucion plxi ON plxi.ID_PERIODOS_LECTIVOS_POR_INSTITUCION= c.ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND c.ES_ACTIVO=1 AND plxi.ES_ACTIVO=1
	WHERE c.ID_CONVALIDACION = @ID_CONVALIDACION

	IF @ID_INSTITUCION <> @ID_INSTITUCION_CONSULTA
	BEGIN
		SET @RESULT = -362 GOTO FIN
	END
	
	SET @ID_PERIODO_LECTIVO_POR_INSTITUCION = (SELECT TOP 1 ID_PERIODOS_LECTIVOS_POR_INSTITUCION FROM transaccional.convalidacion WHERE ID_CONVALIDACION = @ID_CONVALIDACION AND ES_ACTIVO = 1)
	SET @ID_PERIODO_ACADEMICO = (SELECT TOP 1 ID_PERIODO_ACADEMICO FROM transaccional.periodo_academico WHERE ID_PERIODOS_LECTIVOS_POR_INSTITUCION = @ID_PERIODO_LECTIVO_POR_INSTITUCION AND ES_ACTIVO = 1)
	SET @ID_PROGRAMACION_CLASE = (SELECT TOP 1 ID_PROGRAMACION_CLASE FROM transaccional.programacion_clase WHERE ID_PERIODO_ACADEMICO = @ID_PERIODO_ACADEMICO AND ES_ACTIVO = 1)

	--IF EXISTS (SELECT TOP 1 ID_EVALUACION FROM transaccional.evaluacion WHERE ID_PROGRAMACION_CLASE = @ID_PROGRAMACION_CLASE AND ES_ACTIVO = 1 AND CIERRE_PROGRAMACION = 235)
	IF EXISTS(SELECT TOP 1 ID_PROGRAMACION_CLASE FROM transaccional.programacion_clase WHERE ID_PERIODO_ACADEMICO = @ID_PERIODO_ACADEMICO AND ESTADO = 0 AND ES_ACTIVO = 1)
		SET @RESULT = -329	
	ELSE
	BEGIN	
		IF EXISTS (SELECT TOP 1 ME.ID_MATRICULA_ESTUDIANTE FROM transaccional.matricula_estudiante ME
		INNER JOIN transaccional.convalidacion C ON ME.ID_ESTUDIANTE_INSTITUCION = C.ID_ESTUDIANTE_INSTITUCION
		AND ME.ID_PERIODOS_LECTIVOS_POR_INSTITUCION= C.ID_PERIODOS_LECTIVOS_POR_INSTITUCION AND ME.ES_ACTIVO=1 AND C.ES_ACTIVO=1
		WHERE C.ID_CONVALIDACION =@ID_CONVALIDACION AND C.ESTADO = 201 )
			SET @RESULT = -313
		ELSE
			BEGIN
			BEGIN TRANSACTION T1
				BEGIN TRY
				DECLARE @ID_ESTUDIANTE_INSTITUCION INT,
				@ID_PERSONA_INSTITUCION INT,
				@ID_ESTUDIANTE_INSTITUCION_ORIGEN INT,
				@ID_TRASLADO_ESTUDIANTE INT
	
				SET @ID_ESTUDIANTE_INSTITUCION = (SELECT ID_ESTUDIANTE_INSTITUCION FROM transaccional.convalidacion WHERE ID_CONVALIDACION= @ID_CONVALIDACION)	
				SET @ID_PERSONA_INSTITUCION = (SELECT ID_PERSONA_INSTITUCION FROM transaccional.estudiante_institucion WHERE ID_ESTUDIANTE_INSTITUCION= @ID_ESTUDIANTE_INSTITUCION)
				SET @ID_TRASLADO_ESTUDIANTE  = (SELECT ISNULL(ID_TRASLADO_ESTUDIANTE,0) FROM transaccional.convalidacion WHERE ID_CONVALIDACION= @ID_CONVALIDACION)

						UPDATE transaccional.convalidacion 
						SET		ES_ACTIVO= 0,
								USUARIO_MODIFICACION = @USUARIO,
								FECHA_MODIFICACION = GETDATE()
						WHERE ID_CONVALIDACION=@ID_CONVALIDACION

						UPDATE transaccional.convalidacion_detalle
						SET		ES_ACTIVO=0,
								USUARIO_MODIFICACION = @USUARIO,
								FECHA_MODIFICACION = GETDATE()
						WHERE ID_CONVALIDACION=@ID_CONVALIDACION
			
						IF (@ID_TRASLADO_ESTUDIANTE  >0)
						BEGIN
							SET @ID_ESTUDIANTE_INSTITUCION_ORIGEN = (SELECT ID_ESTUDIANTE_INSTITUCION FROM transaccional.traslado_estudiante WHERE ID_TRASLADO_ESTUDIANTE = @ID_TRASLADO_ESTUDIANTE)
				
							UPDATE transaccional.estudiante_institucion
							SET ES_ACTIVO=0
							WHERE ID_ESTUDIANTE_INSTITUCION = @ID_ESTUDIANTE_INSTITUCION 

							UPDATE maestro.persona_institucion	
							SET ESTADO =1
							WHERE ID_PERSONA_INSTITUCION =@ID_PERSONA_INSTITUCION

							update transaccional.estudiante_institucion
							SET ES_ACTIVO=1
							WHERE ID_ESTUDIANTE_INSTITUCION= @ID_ESTUDIANTE_INSTITUCION_ORIGEN

						END
						COMMIT TRANSACTION T1
						SET @RESULT = 1
				END TRY
				BEGIN CATCH
						IF @@ERROR<>0
						BEGIN
						   ROLLBACK TRANSACTION T1	   
						   SET @RESULT = -1
						   PRINT ERROR_MESSAGE()
						END
				END CATCH
			END
	END
	FIN:
	SELECT @RESULT
END
GO


