// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using MINEDU.IEST.Estudiante.Entity;

#nullable enable

namespace MINEDU.IEST.Estudiante.Contexto.Data.Estudiante
{
    public partial class estudianteContext : DbContext
    {
        public estudianteContext()
        {
        }

        public estudianteContext(DbContextOptions<estudianteContext> options)
            : base(options)
        {
        }

        public virtual DbSet<actividad_economica> actividad_economica { get; set; } 
        public virtual DbSet<asignación_institucion_carga> asignación_institucion_carga { get; set; } 
        public virtual DbSet<aula> aula { get; set; } 
        public virtual DbSet<capacidades_por_componente> capacidades_por_componente { get; set; } 
        public virtual DbSet<carga> carga { get; set; } 
        public virtual DbSet<carga_detalle> carga_detalle { get; set; } 
        public virtual DbSet<carga_masiva_actas> carga_masiva_actas { get; set; } 
        public virtual DbSet<carga_masiva_nominas> carga_masiva_nominas { get; set; } 
        public virtual DbSet<carga_masiva_nominas_detalle> carga_masiva_nominas_detalle { get; set; } 
        public virtual DbSet<carga_masiva_nominas_persona> carga_masiva_nominas_persona { get; set; } 
        public virtual DbSet<carrera_profesional> carrera_profesional { get; set; } 
        public virtual DbSet<carreras_por_institucion> carreras_por_institucion { get; set; } 
        public virtual DbSet<carreras_por_institucion_detalle> carreras_por_institucion_detalle { get; set; } 
        public virtual DbSet<cierre_periodo_clases> cierre_periodo_clases { get; set; } 
        public virtual DbSet<clase_historica> clase_historica { get; set; } 
        public virtual DbSet<comision_proceso_admision> comision_proceso_admision { get; set; } 
        public virtual DbSet<componente_curricular> componente_curricular { get; set; } 
        public virtual DbSet<convalidacion> convalidacion { get; set; } 
        public virtual DbSet<convalidacion_detalle> convalidacion_detalle { get; set; } 
        public virtual DbSet<cronograma_meta_atencion> cronograma_meta_atencion { get; set; } 
        public virtual DbSet<distribucion_evaluacion_admision_detalle> distribucion_evaluacion_admision_detalle { get; set; } 
        public virtual DbSet<distribucion_examen_admision> distribucion_examen_admision { get; set; } 
        public virtual DbSet<documentos_dre> documentos_dre { get; set; } 
        public virtual DbSet<documentos_dre_archivos> documentos_dre_archivos { get; set; } 
        public virtual DbSet<enfoque> enfoque { get; set; } 
        public virtual DbSet<enfoques_por_plan_estudio> enfoques_por_plan_estudio { get; set; } 
        public virtual DbSet<enumerado> enumerado { get; set; } 
        public virtual DbSet<estudiante_institucion> estudiante_institucion { get; set; } 
        public virtual DbSet<evaluacion> evaluacion { get; set; } 
        public virtual DbSet<evaluacion_detalle> evaluacion_detalle { get; set; } 
        public virtual DbSet<evaluacion_experiencia_formativa> evaluacion_experiencia_formativa { get; set; } 
        public virtual DbSet<evaluacion_extraordinaria> evaluacion_extraordinaria { get; set; } 
        public virtual DbSet<evaluacion_extraordinaria_detalle> evaluacion_extraordinaria_detalle { get; set; } 
        public virtual DbSet<evaluador_admision_modalidad> evaluador_admision_modalidad { get; set; } 
        public virtual DbSet<examen_admision_sede> examen_admision_sede { get; set; } 
        public virtual DbSet<exportador_datos> exportador_datos { get; set; } 
        public virtual DbSet<exportador_datos_configuracion> exportador_datos_configuracion { get; set; } 
        public virtual DbSet<exportador_datos_configuracion_detalle> exportador_datos_configuracion_detalle { get; set; } 
        public virtual DbSet<exportador_datos_detalle> exportador_datos_detalle { get; set; } 
        public virtual DbSet<familia_productiva> familia_productiva { get; set; } 
        public virtual DbSet<indicador_logro> indicador_logro { get; set; } 
        public virtual DbSet<indicadores_logro> indicadores_logro { get; set; } 
        public virtual DbSet<indicadores_logro_por_capacidad> indicadores_logro_por_capacidad { get; set; } 
        public virtual DbSet<indicadores_logro_por_unidad_didactica> indicadores_logro_por_unidad_didactica { get; set; } 
        public virtual DbSet<institucion_basica> institucion_basica { get; set; } 
        public virtual DbSet<liberacion_estudiante> liberacion_estudiante { get; set; } 
        public virtual DbSet<licencia_estudiante> licencia_estudiante { get; set; } 
        public virtual DbSet<log_carga> log_carga { get; set; } 
        public virtual DbSet<matricula_estudiante> matricula_estudiante { get; set; } 
        public virtual DbSet<meta_carrera_institucion> meta_carrera_institucion { get; set; } 
        public virtual DbSet<meta_carrera_institucion_detalle> meta_carrera_institucion_detalle { get; set; } 
        public virtual DbSet<modalidades_por_proceso_admision> modalidades_por_proceso_admision { get; set; } 
        public virtual DbSet<modulo> modulo { get; set; } 
        public virtual DbSet<modulo_equivalencia> modulo_equivalencia { get; set; } 
        public virtual DbSet<modulo_unidad_competencia> modulo_unidad_competencia { get; set; } 
        public virtual DbSet<nivel_formacion> nivel_formacion { get; set; } 
        public virtual DbSet<opciones_por_postulante> opciones_por_postulante { get; set; } 
        public virtual DbSet<pago_institucion> pago_institucion { get; set; } 
        public virtual DbSet<parametro> parametro { get; set; } 
        public virtual DbSet<parametros_institucion> parametros_institucion { get; set; } 
        public virtual DbSet<periodo_academico> periodo_academico { get; set; } 
        public virtual DbSet<periodo_lectivo> periodo_lectivo { get; set; } 
        public virtual DbSet<periodos_lectivos_por_institucion> periodos_lectivos_por_institucion { get; set; } 
        public virtual DbSet<persona> persona { get; set; } 
        public virtual DbSet<persona_institucion> persona_institucion { get; set; } 
        public virtual DbSet<personal_institucion> personal_institucion { get; set; } 
        public virtual DbSet<plan_estudio> plan_estudio { get; set; } 
        public virtual DbSet<plan_estudio_detalle> plan_estudio_detalle { get; set; } 
        public virtual DbSet<postulantes_por_modalidad> postulantes_por_modalidad { get; set; } 
        public virtual DbSet<pre_requisitos_por_unidad_didactica> pre_requisitos_por_unidad_didactica { get; set; } 
        public virtual DbSet<proceso_admision_periodo> proceso_admision_periodo { get; set; } 
        public virtual DbSet<proceso_sistema> proceso_sistema { get; set; } 
        public virtual DbSet<programacion_clase> programacion_clase { get; set; } 
        public virtual DbSet<programacion_clase_por_matricula_estudiante> programacion_clase_por_matricula_estudiante { get; set; } 
        public virtual DbSet<programacion_matricula> programacion_matricula { get; set; } 
        public virtual DbSet<promocion_institucion_estudiante> promocion_institucion_estudiante { get; set; } 
        public virtual DbSet<promover_persona_institucion> promover_persona_institucion { get; set; } 
        public virtual DbSet<reingreso_estudiante> reingreso_estudiante { get; set; } 
        public virtual DbSet<requisito> requisito { get; set; } 
        public virtual DbSet<requisitos_por_postulante> requisitos_por_postulante { get; set; } 
        public virtual DbSet<requisitos_por_tipo_modalidad> requisitos_por_tipo_modalidad { get; set; } 
        public virtual DbSet<requisitos_por_traslado_estudiante> requisitos_por_traslado_estudiante { get; set; } 
        public virtual DbSet<requisitos_por_traslado_institucion> requisitos_por_traslado_institucion { get; set; } 
        public virtual DbSet<reserva_matricula> reserva_matricula { get; set; } 
        public virtual DbSet<resolucion> resolucion { get; set; } 
        public virtual DbSet<resoluciones_por_carreras_por_institucion> resoluciones_por_carreras_por_institucion { get; set; } 
        public virtual DbSet<resoluciones_por_periodo_lectivo_institucion> resoluciones_por_periodo_lectivo_institucion { get; set; } 
        public virtual DbSet<resultados_por_postulante> resultados_por_postulante { get; set; } 
        public virtual DbSet<retiro_estudiante> retiro_estudiante { get; set; } 
        public virtual DbSet<sector> sector { get; set; } 
        public virtual DbSet<sede_institucion> sede_institucion { get; set; } 
        public virtual DbSet<sesion_programacion_clase> sesion_programacion_clase { get; set; } 
        public virtual DbSet<situacion_academica_detalle> situacion_academica_detalle { get; set; } 
        public virtual DbSet<situacion_academica_estudiante> situacion_academica_estudiante { get; set; } 
        public virtual DbSet<tipo_enumerado> tipo_enumerado { get; set; } 
        public virtual DbSet<tipo_modalidad> tipo_modalidad { get; set; } 
        public virtual DbSet<tipo_unidad_didactica> tipo_unidad_didactica { get; set; } 
        public virtual DbSet<tipos_modalidad_por_institucion> tipos_modalidad_por_institucion { get; set; } 
        public virtual DbSet<tipos_modalidad_por_proceso_admision> tipos_modalidad_por_proceso_admision { get; set; } 
        public virtual DbSet<traslado_estudiante> traslado_estudiante { get; set; } 
        public virtual DbSet<traslado_estudiante_detalle> traslado_estudiante_detalle { get; set; } 
        public virtual DbSet<turno_equivalencia> turno_equivalencia { get; set; } 
        public virtual DbSet<turnos_por_institucion> turnos_por_institucion { get; set; } 
        public virtual DbSet<unidad_competencia> unidad_competencia { get; set; } 
        public virtual DbSet<unidad_competencias_por_modulo> unidad_competencias_por_modulo { get; set; } 
        public virtual DbSet<unidad_didactica> unidad_didactica { get; set; } 
        public virtual DbSet<unidad_didactica_detalle> unidad_didactica_detalle { get; set; } 
        public virtual DbSet<unidad_didactica_modulo_equivalencia> unidad_didactica_modulo_equivalencia { get; set; } 
        public virtual DbSet<unidades_didacticas_por_enfoque> unidades_didacticas_por_enfoque { get; set; } 
        public virtual DbSet<unidades_didacticas_por_programacion_clase> unidades_didacticas_por_programacion_clase { get; set; } 

       
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.ApplyConfiguration(new Configurations.actividad_economicaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.asignación_institucion_cargaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.aulaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.capacidades_por_componenteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.cargaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.carga_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.carga_masiva_actasConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.carga_masiva_nominasConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.carga_masiva_nominas_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.carga_masiva_nominas_personaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.carrera_profesionalConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.carreras_por_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.carreras_por_institucion_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.cierre_periodo_clasesConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.clase_historicaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.comision_proceso_admisionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.componente_curricularConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.convalidacionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.convalidacion_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.cronograma_meta_atencionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.distribucion_evaluacion_admision_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.distribucion_examen_admisionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.documentos_dreConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.documentos_dre_archivosConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.enfoqueConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.enfoques_por_plan_estudioConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.enumeradoConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.estudiante_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.evaluacionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.evaluacion_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.evaluacion_experiencia_formativaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.evaluacion_extraordinariaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.evaluacion_extraordinaria_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.evaluador_admision_modalidadConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.examen_admision_sedeConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.exportador_datosConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.exportador_datos_configuracionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.exportador_datos_configuracion_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.exportador_datos_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.familia_productivaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.indicador_logroConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.indicadores_logroConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.indicadores_logro_por_capacidadConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.indicadores_logro_por_unidad_didacticaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.institucion_basicaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.liberacion_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.licencia_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.log_cargaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.matricula_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.meta_carrera_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.meta_carrera_institucion_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.modalidades_por_proceso_admisionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.moduloConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.modulo_equivalenciaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.modulo_unidad_competenciaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.nivel_formacionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.opciones_por_postulanteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.pago_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.parametroConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.parametros_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.periodo_academicoConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.periodo_lectivoConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.periodos_lectivos_por_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.personaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.persona_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.personal_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.plan_estudioConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.plan_estudio_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.postulantes_por_modalidadConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.pre_requisitos_por_unidad_didacticaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.proceso_admision_periodoConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.proceso_sistemaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.programacion_claseConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.programacion_clase_por_matricula_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.programacion_matriculaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.promocion_institucion_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.promover_persona_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.reingreso_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.requisitoConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.requisitos_por_postulanteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.requisitos_por_tipo_modalidadConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.requisitos_por_traslado_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.requisitos_por_traslado_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.reserva_matriculaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.resolucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.resoluciones_por_carreras_por_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.resoluciones_por_periodo_lectivo_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.resultados_por_postulanteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.retiro_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.sectorConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.sede_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.sesion_programacion_claseConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.situacion_academica_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.situacion_academica_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.tipo_enumeradoConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.tipo_modalidadConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.tipo_unidad_didacticaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.tipos_modalidad_por_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.tipos_modalidad_por_proceso_admisionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.traslado_estudianteConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.traslado_estudiante_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.turno_equivalenciaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.turnos_por_institucionConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.unidad_competenciaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.unidad_competencias_por_moduloConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.unidad_didacticaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.unidad_didactica_detalleConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.unidad_didactica_modulo_equivalenciaConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.unidades_didacticas_por_enfoqueConfiguration());
            modelBuilder.ApplyConfiguration(new Configurations.unidades_didacticas_por_programacion_claseConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
