// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using MINEDU.IEST.Estudiante.Contexto.Data.DigePadron;
using MINEDU.IEST.Estudiante.Entity.DigePadron;
using System;
using System.Collections.Generic;

namespace MINEDU.IEST.Estudiante.Contexto.Data.DigePadron.Configurations
{
    public partial class SedeConfiguration : IEntityTypeConfiguration<Sede>
    {
        public void Configure(EntityTypeBuilder<Sede> entity)
        {
            entity.HasKey(e => e.IdSede)
                .HasName("PK_LOCAL");

            entity.ToTable("sede");

            entity.HasIndex(e => new { e.Estado, e.CodigoDepartamento, e.CodigoProvincia, e.CodigoDistrito }, "IDX_SEDE_DATA_01");

            entity.Property(e => e.IdSede)
                .ValueGeneratedNever()
                .HasColumnName("ID_SEDE");

            entity.Property(e => e.CentroPoblado)
                .HasMaxLength(100)
                .HasColumnName("CENTRO_POBLADO");

            entity.Property(e => e.CodigoDepartamento)
                .HasMaxLength(2)
                .HasColumnName("CODIGO_DEPARTAMENTO");

            entity.Property(e => e.CodigoDistrito)
                .HasMaxLength(6)
                .HasColumnName("CODIGO_DISTRITO");

            entity.Property(e => e.CodigoEntidadReguladora)
                .HasMaxLength(14)
                .HasColumnName("CODIGO_ENTIDAD_REGULADORA");

            entity.Property(e => e.CodigoModular)
                .IsRequired()
                .HasMaxLength(14)
                .HasColumnName("CODIGO_MODULAR");

            entity.Property(e => e.CodigoProvincia)
                .HasMaxLength(4)
                .HasColumnName("CODIGO_PROVINCIA");

            entity.Property(e => e.CodigoSede)
                .HasMaxLength(14)
                .HasColumnName("CODIGO_SEDE");

            entity.Property(e => e.Direccion)
                .HasMaxLength(500)
                .HasColumnName("DIRECCION");

            entity.Property(e => e.DirectorGeneral)
                .HasMaxLength(300)
                .HasColumnName("DIRECTOR_GENERAL");

            entity.Property(e => e.DreGre)
                .HasMaxLength(300)
                .HasColumnName("DRE_GRE");

            entity.Property(e => e.Estado)
                .HasColumnName("ESTADO")
                .HasDefaultValueSql("((1))");

            entity.Property(e => e.FechaInsercion)
                .HasColumnType("datetime")
                .HasColumnName("FECHA_INSERCION")
                .HasDefaultValueSql("(sysdatetime())");

            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("FECHA_MODIFICACION");

            entity.Property(e => e.IdInstitucion).HasColumnName("ID_INSTITUCION");

            entity.Property(e => e.IdInstitucionSuperior).HasColumnName("ID_INSTITUCION_SUPERIOR");

            entity.Property(e => e.NombreEntidadReguladora)
                .HasMaxLength(150)
                .HasColumnName("NOMBRE_ENTIDAD_REGULADORA");

            entity.Property(e => e.NombreSede)
                .HasMaxLength(100)
                .HasColumnName("NOMBRE_SEDE");

            entity.Property(e => e.ResponsableAcademico)
                .HasMaxLength(300)
                .HasColumnName("RESPONSABLE_ACADEMICO");

            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .HasColumnName("TELEFONO");

            entity.Property(e => e.TipoCargoAcademico).HasColumnName("TIPO_CARGO_ACADEMICO");

            entity.Property(e => e.TipoEntidadReguladora).HasColumnName("TIPO_ENTIDAD_REGULADORA");

            entity.Property(e => e.TipoEstado).HasColumnName("TIPO_ESTADO");

            entity.Property(e => e.TipoSede).HasColumnName("TIPO_SEDE");

            entity.Property(e => e.TipoZona).HasColumnName("TIPO_ZONA");

            entity.Property(e => e.UsuarioInsercion).HasColumnName("USUARIO_INSERCION");

            entity.Property(e => e.UsuarioModificacion).HasColumnName("USUARIO_MODIFICACION");

            entity.HasOne(d => d.IdInstitucionNavigation)
                .WithMany(p => p.Sedes)
                .HasForeignKey(d => d.IdInstitucion)
                .HasConstraintName("FK_sede_institucion");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Sede> entity);
    }
}
